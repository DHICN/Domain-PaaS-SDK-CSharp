/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ResultAnalysis.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ResultAnalysis.Model
{
    /// <summary>
    /// WqInfoValue
    /// </summary>
    [DataContract]
    public partial class WqInfoValue :  IEquatable<WqInfoValue>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WqInfoValue" /> class.
        /// </summary>
        /// <param name="wqItem">水质名称 water quality item.</param>
        /// <param name="wqItemValue">水质浓度 water quality concentration.</param>
        public WqInfoValue(string wqItem = default(string), double wqItemValue = default(double))
        {
            this.WqItem = wqItem;
            this.WqItemValue = wqItemValue;
        }
        
        /// <summary>
        /// 水质名称 water quality item
        /// </summary>
        /// <value>水质名称 water quality item</value>
        [DataMember(Name="wqItem", EmitDefaultValue=true)]
        public string WqItem { get; set; }

        /// <summary>
        /// 水质浓度 water quality concentration
        /// </summary>
        /// <value>水质浓度 water quality concentration</value>
        [DataMember(Name="wqItemValue", EmitDefaultValue=false)]
        public double WqItemValue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WqInfoValue {\n");
            sb.Append("  WqItem: ").Append(WqItem).Append("\n");
            sb.Append("  WqItemValue: ").Append(WqItemValue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WqInfoValue);
        }

        /// <summary>
        /// Returns true if WqInfoValue instances are equal
        /// </summary>
        /// <param name="input">Instance of WqInfoValue to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WqInfoValue input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WqItem == input.WqItem ||
                    (this.WqItem != null &&
                    this.WqItem.Equals(input.WqItem))
                ) && 
                (
                    this.WqItemValue == input.WqItemValue ||
                    this.WqItemValue.Equals(input.WqItemValue)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WqItem != null)
                    hashCode = hashCode * 59 + this.WqItem.GetHashCode();
                hashCode = hashCode * 59 + this.WqItemValue.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
