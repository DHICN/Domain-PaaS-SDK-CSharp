/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ResultAnalysis.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ResultAnalysis.Model
{
    /// <summary>
    /// ModelResultPipeDispatchStatisticOutput
    /// </summary>
    [DataContract]
    public partial class ModelResultPipeDispatchStatisticOutput :  IEquatable<ModelResultPipeDispatchStatisticOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelResultPipeDispatchStatisticOutput" /> class.
        /// </summary>
        /// <param name="valves">阀门信息列表 list of valve information.</param>
        /// <param name="pumps">泵站信息列表 list of pump information.</param>
        public ModelResultPipeDispatchStatisticOutput(List<ModelResultPipeValveStatisticOutput> valves = default(List<ModelResultPipeValveStatisticOutput>), List<ModelResultPipePumpStatisticOutput> pumps = default(List<ModelResultPipePumpStatisticOutput>))
        {
            this.Valves = valves;
            this.Pumps = pumps;
        }
        
        /// <summary>
        /// 阀门信息列表 list of valve information
        /// </summary>
        /// <value>阀门信息列表 list of valve information</value>
        [DataMember(Name="valves", EmitDefaultValue=true)]
        public List<ModelResultPipeValveStatisticOutput> Valves { get; set; }

        /// <summary>
        /// 泵站信息列表 list of pump information
        /// </summary>
        /// <value>泵站信息列表 list of pump information</value>
        [DataMember(Name="pumps", EmitDefaultValue=true)]
        public List<ModelResultPipePumpStatisticOutput> Pumps { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelResultPipeDispatchStatisticOutput {\n");
            sb.Append("  Valves: ").Append(Valves).Append("\n");
            sb.Append("  Pumps: ").Append(Pumps).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModelResultPipeDispatchStatisticOutput);
        }

        /// <summary>
        /// Returns true if ModelResultPipeDispatchStatisticOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of ModelResultPipeDispatchStatisticOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelResultPipeDispatchStatisticOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Valves == input.Valves ||
                    this.Valves != null &&
                    input.Valves != null &&
                    this.Valves.SequenceEqual(input.Valves)
                ) && 
                (
                    this.Pumps == input.Pumps ||
                    this.Pumps != null &&
                    input.Pumps != null &&
                    this.Pumps.SequenceEqual(input.Pumps)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Valves != null)
                    hashCode = hashCode * 59 + this.Valves.GetHashCode();
                if (this.Pumps != null)
                    hashCode = hashCode * 59 + this.Pumps.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
