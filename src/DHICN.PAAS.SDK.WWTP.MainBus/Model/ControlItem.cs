/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.WWTP.MainBus.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.WWTP.MainBus.Model
{
    /// <summary>
    /// 控制项数据
    /// </summary>
    [DataContract]
    public partial class ControlItem :  IEquatable<ControlItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ControlItem" /> class.
        /// </summary>
        /// <param name="itemName">控制项 control item name.</param>
        /// <param name="tsData">时间序列值-图表显示 suggested time-series data.</param>
        /// <param name="unit">单位 unit.</param>
        public ControlItem(string itemName = default(string), List<TsPair1> tsData = default(List<TsPair1>), string unit = default(string))
        {
            this.ItemName = itemName;
            this.TsData = tsData;
            this.Unit = unit;
        }
        
        /// <summary>
        /// 控制项 control item name
        /// </summary>
        /// <value>控制项 control item name</value>
        [DataMember(Name="itemName", EmitDefaultValue=true)]
        public string ItemName { get; set; }

        /// <summary>
        /// 建议值 suggested value
        /// </summary>
        /// <value>建议值 suggested value</value>
        [DataMember(Name="suggestedValue", EmitDefaultValue=false)]
        public double SuggestedValue { get; private set; }

        /// <summary>
        /// 时间序列值-图表显示 suggested time-series data
        /// </summary>
        /// <value>时间序列值-图表显示 suggested time-series data</value>
        [DataMember(Name="tsData", EmitDefaultValue=true)]
        public List<TsPair1> TsData { get; set; }

        /// <summary>
        /// 单位 unit
        /// </summary>
        /// <value>单位 unit</value>
        [DataMember(Name="unit", EmitDefaultValue=true)]
        public string Unit { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ControlItem {\n");
            sb.Append("  ItemName: ").Append(ItemName).Append("\n");
            sb.Append("  SuggestedValue: ").Append(SuggestedValue).Append("\n");
            sb.Append("  TsData: ").Append(TsData).Append("\n");
            sb.Append("  Unit: ").Append(Unit).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ControlItem);
        }

        /// <summary>
        /// Returns true if ControlItem instances are equal
        /// </summary>
        /// <param name="input">Instance of ControlItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ControlItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ItemName == input.ItemName ||
                    (this.ItemName != null &&
                    this.ItemName.Equals(input.ItemName))
                ) && 
                (
                    this.SuggestedValue == input.SuggestedValue ||
                    this.SuggestedValue.Equals(input.SuggestedValue)
                ) && 
                (
                    this.TsData == input.TsData ||
                    this.TsData != null &&
                    input.TsData != null &&
                    this.TsData.SequenceEqual(input.TsData)
                ) && 
                (
                    this.Unit == input.Unit ||
                    (this.Unit != null &&
                    this.Unit.Equals(input.Unit))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ItemName != null)
                    hashCode = hashCode * 59 + this.ItemName.GetHashCode();
                hashCode = hashCode * 59 + this.SuggestedValue.GetHashCode();
                if (this.TsData != null)
                    hashCode = hashCode * 59 + this.TsData.GetHashCode();
                if (this.Unit != null)
                    hashCode = hashCode * 59 + this.Unit.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
