/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.Identity.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.Identity.Model
{
    /// <summary>
    /// AddRoleInput
    /// </summary>
    [DataContract]
    public partial class AddRoleInput :  IEquatable<AddRoleInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddRoleInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AddRoleInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddRoleInput" /> class.
        /// </summary>
        /// <param name="name">角色名称 role name (required).</param>
        /// <param name="remarks">角色备注 role remark.</param>
        /// <param name="isDefault">是否默认角色 if it is the default role.</param>
        public AddRoleInput(string name = default(string), string remarks = default(string), bool isDefault = default(bool))
        {
            // to ensure "name" is required (not null)
            this.Name = name ?? throw new ArgumentNullException("name is a required property for AddRoleInput and cannot be null");
            this.Remarks = remarks;
            this.IsDefault = isDefault;
        }
        
        /// <summary>
        /// 角色名称 role name
        /// </summary>
        /// <value>角色名称 role name</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// 角色备注 role remark
        /// </summary>
        /// <value>角色备注 role remark</value>
        [DataMember(Name="remarks", EmitDefaultValue=true)]
        public string Remarks { get; set; }

        /// <summary>
        /// 是否默认角色 if it is the default role
        /// </summary>
        /// <value>是否默认角色 if it is the default role</value>
        [DataMember(Name="isDefault", EmitDefaultValue=false)]
        public bool IsDefault { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddRoleInput {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Remarks: ").Append(Remarks).Append("\n");
            sb.Append("  IsDefault: ").Append(IsDefault).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddRoleInput);
        }

        /// <summary>
        /// Returns true if AddRoleInput instances are equal
        /// </summary>
        /// <param name="input">Instance of AddRoleInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddRoleInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Remarks == input.Remarks ||
                    (this.Remarks != null &&
                    this.Remarks.Equals(input.Remarks))
                ) && 
                (
                    this.IsDefault == input.IsDefault ||
                    this.IsDefault.Equals(input.IsDefault)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Remarks != null)
                    hashCode = hashCode * 59 + this.Remarks.GetHashCode();
                hashCode = hashCode * 59 + this.IsDefault.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
