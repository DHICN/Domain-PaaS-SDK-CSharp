/* 
 * model-information-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ModelInformation.Client;
using DHICN.PAAS.SDK.ModelInformation.Model;

namespace DHICN.PAAS.SDK.ModelInformation.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelEditApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries
        /// </summary>
        /// <remarks>
        /// 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>List&lt;GetAllBoundarysOutput&gt;</returns>
        Result<List<GetAllBoundarysOutput>> ApiV1ModelInformationBoundaryListGet (string boundaryType = default(string));

        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries
        /// </summary>
        /// <remarks>
        /// 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>ApiResponse of List&lt;GetAllBoundarysOutput&gt;</returns>
        ApiResponse<Result<List<GetAllBoundarysOutput>>> ApiV1ModelInformationBoundaryListGetWithHttpInfo (string boundaryType = default(string));
        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ModelInformationBoundaryTimeseriesAddPost (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>));

        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ModelInformationBoundaryTimeseriesAddPostWithHttpInfo (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>));
        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>GetBoundaryTsOutput</returns>
        Result<GetBoundaryTsOutput> ApiV1ModelInformationBoundaryTimeseriesGet (string scenarioId = default(string), string boundaryID = default(string));

        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>ApiResponse of GetBoundaryTsOutput</returns>
        ApiResponse<Result<GetBoundaryTsOutput>> ApiV1ModelInformationBoundaryTimeseriesGetWithHttpInfo (string scenarioId = default(string), string boundaryID = default(string));
        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ModelInformationBoundaryTimeseriesUpdatePost (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput));

        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ModelInformationBoundaryTimeseriesUpdatePostWithHttpInfo (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput));
        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario.
        /// </summary>
        /// <remarks>
        /// 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>GetWasteWaterConditionOutput</returns>
        Result<GetWasteWaterConditionOutput> ApiV1ModelInformationBoundaryWastewaterGet (string scenarioId = default(string), string boundaryId = default(string));

        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario.
        /// </summary>
        /// <remarks>
        /// 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>ApiResponse of GetWasteWaterConditionOutput</returns>
        ApiResponse<Result<GetWasteWaterConditionOutput>> ApiV1ModelInformationBoundaryWastewaterGetWithHttpInfo (string scenarioId = default(string), string boundaryId = default(string));
        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ModelInformationBoundaryWastewaterUpdatePost (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput));

        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ModelInformationBoundaryWastewaterUpdatePostWithHttpInfo (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput));
        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>GetControlRuleByScenarioOutput</returns>
        Result<GetControlRuleByScenarioOutput> ApiV1ModelInformationControlRuleGet (string scenarioId = default(string));

        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of GetControlRuleByScenarioOutput</returns>
        ApiResponse<Result<GetControlRuleByScenarioOutput>> ApiV1ModelInformationControlRuleGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ModelInformationControlRuleUpdatePost (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput));

        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ModelInformationControlRuleUpdatePostWithHttpInfo (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput));
        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>GetInitialConditionOutput</returns>
        Result<GetInitialConditionOutput> ApiV1ModelInformationInitialConditionHotstartGet (string scenarioId = default(string));

        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>ApiResponse of GetInitialConditionOutput</returns>
        ApiResponse<Result<GetInitialConditionOutput>> ApiV1ModelInformationInitialConditionHotstartGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ModelInformationInitialConditionHotstartUpdatePost (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput));

        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ModelInformationInitialConditionHotstartUpdatePostWithHttpInfo (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelEditApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries
        /// </summary>
        /// <remarks>
        /// 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>Task of List&lt;GetAllBoundarysOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<GetAllBoundarysOutput>>> ApiV1ModelInformationBoundaryListGetAsync (string boundaryType = default(string));

        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries
        /// </summary>
        /// <remarks>
        /// 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;GetAllBoundarysOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<GetAllBoundarysOutput>>>> ApiV1ModelInformationBoundaryListGetAsyncWithHttpInfo (string boundaryType = default(string));
        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationBoundaryTimeseriesAddPostAsync (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>));

        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ModelInformationBoundaryTimeseriesAddPostAsyncWithHttpInfo (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>));
        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>Task of GetBoundaryTsOutput</returns>
        System.Threading.Tasks.Task<Result<GetBoundaryTsOutput>> ApiV1ModelInformationBoundaryTimeseriesGetAsync (string scenarioId = default(string), string boundaryID = default(string));

        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>Task of ApiResponse (GetBoundaryTsOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<GetBoundaryTsOutput>>> ApiV1ModelInformationBoundaryTimeseriesGetAsyncWithHttpInfo (string scenarioId = default(string), string boundaryID = default(string));
        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationBoundaryTimeseriesUpdatePostAsync (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput));

        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ModelInformationBoundaryTimeseriesUpdatePostAsyncWithHttpInfo (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput));
        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario.
        /// </summary>
        /// <remarks>
        /// 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>Task of GetWasteWaterConditionOutput</returns>
        System.Threading.Tasks.Task<Result<GetWasteWaterConditionOutput>> ApiV1ModelInformationBoundaryWastewaterGetAsync (string scenarioId = default(string), string boundaryId = default(string));

        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario.
        /// </summary>
        /// <remarks>
        /// 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>Task of ApiResponse (GetWasteWaterConditionOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<GetWasteWaterConditionOutput>>> ApiV1ModelInformationBoundaryWastewaterGetAsyncWithHttpInfo (string scenarioId = default(string), string boundaryId = default(string));
        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationBoundaryWastewaterUpdatePostAsync (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput));

        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ModelInformationBoundaryWastewaterUpdatePostAsyncWithHttpInfo (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput));
        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of GetControlRuleByScenarioOutput</returns>
        System.Threading.Tasks.Task<Result<GetControlRuleByScenarioOutput>> ApiV1ModelInformationControlRuleGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (GetControlRuleByScenarioOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<GetControlRuleByScenarioOutput>>> ApiV1ModelInformationControlRuleGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationControlRuleUpdatePostAsync (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput));

        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario
        /// </summary>
        /// <remarks>
        /// 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ModelInformationControlRuleUpdatePostAsyncWithHttpInfo (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput));
        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>Task of GetInitialConditionOutput</returns>
        System.Threading.Tasks.Task<Result<GetInitialConditionOutput>> ApiV1ModelInformationInitialConditionHotstartGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>Task of ApiResponse (GetInitialConditionOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<GetInitialConditionOutput>>> ApiV1ModelInformationInitialConditionHotstartGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationInitialConditionHotstartUpdatePostAsync (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput));

        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario
        /// </summary>
        /// <remarks>
        /// 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ModelInformationInitialConditionHotstartUpdatePostAsyncWithHttpInfo (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelEditApi : IModelEditApiSync, IModelEditApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ModelEditApi : IModelEditApi
    {
        private DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelEditApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ModelEditApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelEditApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ModelEditApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ModelInformation.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelEditApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ModelEditApi(DHICN.PAAS.SDK.ModelInformation.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelEditApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ModelEditApi(DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient client,DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>List&lt;GetAllBoundarysOutput&gt;</returns>
        public Result<List<GetAllBoundarysOutput>> ApiV1ModelInformationBoundaryListGet (string boundaryType = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<GetAllBoundarysOutput>>> localVarResponse = ApiV1ModelInformationBoundaryListGetWithHttpInfo(boundaryType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>ApiResponse of List&lt;GetAllBoundarysOutput&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<GetAllBoundarysOutput> >> ApiV1ModelInformationBoundaryListGetWithHttpInfo (string boundaryType = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (boundaryType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "boundaryType", boundaryType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<GetAllBoundarysOutput> >>("/api/v1/model-information/boundary/list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>Task of List&lt;GetAllBoundarysOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<GetAllBoundarysOutput>>> ApiV1ModelInformationBoundaryListGetAsync (string boundaryType = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<GetAllBoundarysOutput>>> localVarResponse = await ApiV1ModelInformationBoundaryListGetAsyncWithHttpInfo(boundaryType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有的模型边界信息 Get all model boundaries 获取所有的降雨、河道水位、流量、工业点源排放流量等边界列表 Get all the rainfall, river water level, river discharge or industry point source wastewater discharge boundaries.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="boundaryType">边界类型 boundary type (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;GetAllBoundarysOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<GetAllBoundarysOutput>>>> ApiV1ModelInformationBoundaryListGetAsyncWithHttpInfo (string boundaryType = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (boundaryType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "boundaryType", boundaryType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<GetAllBoundarysOutput>>>("/api/v1/model-information/boundary/list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ModelInformationBoundaryTimeseriesAddPost (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ModelInformationBoundaryTimeseriesAddPostWithHttpInfo(modelProcessBoundaryConditionDocument);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV1ModelInformationBoundaryTimeseriesAddPostWithHttpInfo (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = modelProcessBoundaryConditionDocument;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/model-information/boundary/timeseries/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryTimeseriesAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationBoundaryTimeseriesAddPostAsync (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ModelInformationBoundaryTimeseriesAddPostAsyncWithHttpInfo(modelProcessBoundaryConditionDocument);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 批量保存边界时间序列数据 Batch save boundary time series data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelProcessBoundaryConditionDocument"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV1ModelInformationBoundaryTimeseriesAddPostAsyncWithHttpInfo (List<ModelProcessBoundaryConditionDocument> modelProcessBoundaryConditionDocument = default(List<ModelProcessBoundaryConditionDocument>))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = modelProcessBoundaryConditionDocument;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/model-information/boundary/timeseries/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryTimeseriesAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>GetBoundaryTsOutput</returns>
        public Result<GetBoundaryTsOutput> ApiV1ModelInformationBoundaryTimeseriesGet (string scenarioId = default(string), string boundaryID = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetBoundaryTsOutput>> localVarResponse = ApiV1ModelInformationBoundaryTimeseriesGetWithHttpInfo(scenarioId, boundaryID);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>ApiResponse of GetBoundaryTsOutput</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< GetBoundaryTsOutput >> ApiV1ModelInformationBoundaryTimeseriesGetWithHttpInfo (string scenarioId = default(string), string boundaryID = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (boundaryID != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "boundaryID", boundaryID));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< GetBoundaryTsOutput >>("/api/v1/model-information/boundary/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>Task of GetBoundaryTsOutput</returns>
        public async System.Threading.Tasks.Task<Result<GetBoundaryTsOutput>> ApiV1ModelInformationBoundaryTimeseriesGetAsync (string scenarioId = default(string), string boundaryID = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetBoundaryTsOutput>> localVarResponse = await ApiV1ModelInformationBoundaryTimeseriesGetAsyncWithHttpInfo(scenarioId, boundaryID);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案的边界时间序列数据 Get boundary time series data of a scenario 获取降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Get rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryID">边界ID boundary id (optional)</param>
        /// <returns>Task of ApiResponse (GetBoundaryTsOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetBoundaryTsOutput>>> ApiV1ModelInformationBoundaryTimeseriesGetAsyncWithHttpInfo (string scenarioId = default(string), string boundaryID = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (boundaryID != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "boundaryID", boundaryID));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<GetBoundaryTsOutput>>("/api/v1/model-information/boundary/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ModelInformationBoundaryTimeseriesUpdatePost (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ModelInformationBoundaryTimeseriesUpdatePostWithHttpInfo(updateBoundaryTsInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV1ModelInformationBoundaryTimeseriesUpdatePostWithHttpInfo (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateBoundaryTsInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/model-information/boundary/timeseries/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryTimeseriesUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationBoundaryTimeseriesUpdatePostAsync (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ModelInformationBoundaryTimeseriesUpdatePostAsyncWithHttpInfo(updateBoundaryTsInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 设置方案的边界时间序列数据 Set boundary time series data of a scenario 设置降雨、河道水位、流量、工业点源排放流量等边界时间序列数据 Set rainfall, river water level, river discharge or industry point source wastewater discharge boundary&#39;s time series data of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateBoundaryTsInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV1ModelInformationBoundaryTimeseriesUpdatePostAsyncWithHttpInfo (UpdateBoundaryTsInput updateBoundaryTsInput = default(UpdateBoundaryTsInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateBoundaryTsInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/model-information/boundary/timeseries/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryTimeseriesUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario. 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>GetWasteWaterConditionOutput</returns>
        public Result<GetWasteWaterConditionOutput> ApiV1ModelInformationBoundaryWastewaterGet (string scenarioId = default(string), string boundaryId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetWasteWaterConditionOutput>> localVarResponse = ApiV1ModelInformationBoundaryWastewaterGetWithHttpInfo(scenarioId, boundaryId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario. 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>ApiResponse of GetWasteWaterConditionOutput</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< GetWasteWaterConditionOutput >> ApiV1ModelInformationBoundaryWastewaterGetWithHttpInfo (string scenarioId = default(string), string boundaryId = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (boundaryId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "boundaryId", boundaryId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< GetWasteWaterConditionOutput >>("/api/v1/model-information/boundary/wastewater", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryWastewaterGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario. 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>Task of GetWasteWaterConditionOutput</returns>
        public async System.Threading.Tasks.Task<Result<GetWasteWaterConditionOutput>> ApiV1ModelInformationBoundaryWastewaterGetAsync (string scenarioId = default(string), string boundaryId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetWasteWaterConditionOutput>> localVarResponse = await ApiV1ModelInformationBoundaryWastewaterGetAsyncWithHttpInfo(scenarioId, boundaryId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案的污水量数据 Get wastewater data of a scenario. 获取生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Get domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="boundaryId">边界ID boundary id (optional)</param>
        /// <returns>Task of ApiResponse (GetWasteWaterConditionOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetWasteWaterConditionOutput>>> ApiV1ModelInformationBoundaryWastewaterGetAsyncWithHttpInfo (string scenarioId = default(string), string boundaryId = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (boundaryId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "boundaryId", boundaryId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<GetWasteWaterConditionOutput>>("/api/v1/model-information/boundary/wastewater", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryWastewaterGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ModelInformationBoundaryWastewaterUpdatePost (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ModelInformationBoundaryWastewaterUpdatePostWithHttpInfo(updateWastWaterConditionInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV1ModelInformationBoundaryWastewaterUpdatePostWithHttpInfo (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateWastWaterConditionInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/model-information/boundary/wastewater/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryWastewaterUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationBoundaryWastewaterUpdatePostAsync (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ModelInformationBoundaryWastewaterUpdatePostAsyncWithHttpInfo(updateWastWaterConditionInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 设置方案的污水量数据 Set wastewater data of a scenario 设置生活面源污水数据，包括汇水区单位面积排放量、流量模式等 Set domestic distributed source wastewater data, including catchment discharge per area and pattern of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateWastWaterConditionInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV1ModelInformationBoundaryWastewaterUpdatePostAsyncWithHttpInfo (UpdateWastWaterConditionInput updateWastWaterConditionInput = default(UpdateWastWaterConditionInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateWastWaterConditionInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/model-information/boundary/wastewater/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationBoundaryWastewaterUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>GetControlRuleByScenarioOutput</returns>
        public Result<GetControlRuleByScenarioOutput> ApiV1ModelInformationControlRuleGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetControlRuleByScenarioOutput>> localVarResponse = ApiV1ModelInformationControlRuleGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of GetControlRuleByScenarioOutput</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< GetControlRuleByScenarioOutput >> ApiV1ModelInformationControlRuleGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< GetControlRuleByScenarioOutput >>("/api/v1/model-information/control-rule", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationControlRuleGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of GetControlRuleByScenarioOutput</returns>
        public async System.Threading.Tasks.Task<Result<GetControlRuleByScenarioOutput>> ApiV1ModelInformationControlRuleGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetControlRuleByScenarioOutput>> localVarResponse = await ApiV1ModelInformationControlRuleGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案的调度规则数据 Get control rule data of a scenario 获取调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Get control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (GetControlRuleByScenarioOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetControlRuleByScenarioOutput>>> ApiV1ModelInformationControlRuleGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<GetControlRuleByScenarioOutput>>("/api/v1/model-information/control-rule", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationControlRuleGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ModelInformationControlRuleUpdatePost (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ModelInformationControlRuleUpdatePostWithHttpInfo(updateControlRuleInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV1ModelInformationControlRuleUpdatePostWithHttpInfo (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateControlRuleInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/model-information/control-rule/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationControlRuleUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationControlRuleUpdatePostAsync (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ModelInformationControlRuleUpdatePostAsyncWithHttpInfo(updateControlRuleInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 设置方案的调度规则数据 Set control rule data of a scenario 设置调度规则数据，包括河道泵站控制水位、能力，河道闸门控制水位，管网泵站开启水位、停止水位、能力，管网阀门开度等 Set control rule data including river pump control water level and capacity; river gate control water level; network pump start water level, stop water level, capacity; network valve openning of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateControlRuleInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV1ModelInformationControlRuleUpdatePostAsyncWithHttpInfo (UpdateControlRuleInput updateControlRuleInput = default(UpdateControlRuleInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateControlRuleInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/model-information/control-rule/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationControlRuleUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>GetInitialConditionOutput</returns>
        public Result<GetInitialConditionOutput> ApiV1ModelInformationInitialConditionHotstartGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetInitialConditionOutput>> localVarResponse = ApiV1ModelInformationInitialConditionHotstartGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>ApiResponse of GetInitialConditionOutput</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< GetInitialConditionOutput >> ApiV1ModelInformationInitialConditionHotstartGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< GetInitialConditionOutput >>("/api/v1/model-information/initial-condition/hotstart", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationInitialConditionHotstartGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>Task of GetInitialConditionOutput</returns>
        public async System.Threading.Tasks.Task<Result<GetInitialConditionOutput>> ApiV1ModelInformationInitialConditionHotstartGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetInitialConditionOutput>> localVarResponse = await ApiV1ModelInformationInitialConditionHotstartGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案的热启动信息 Get initial condition hotstart information of a scenario 获取方案的热启动信息，包括热启动方案、热启动文件名称等 Get initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario&#39;s ID (optional)</param>
        /// <returns>Task of ApiResponse (GetInitialConditionOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<GetInitialConditionOutput>>> ApiV1ModelInformationInitialConditionHotstartGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<GetInitialConditionOutput>>("/api/v1/model-information/initial-condition/hotstart", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationInitialConditionHotstartGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ModelInformationInitialConditionHotstartUpdatePost (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ModelInformationInitialConditionHotstartUpdatePostWithHttpInfo(updateInitialConditionInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV1ModelInformationInitialConditionHotstartUpdatePostWithHttpInfo (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateInitialConditionInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/model-information/initial-condition/hotstart/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationInitialConditionHotstartUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ModelInformationInitialConditionHotstartUpdatePostAsync (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ModelInformationInitialConditionHotstartUpdatePostAsyncWithHttpInfo(updateInitialConditionInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 设置方案的热启动信息 Set initial condition hotstart information of a scenario 设置方案的热启动信息，包括热启动方案、热启动文件名称等 Set initial condition hotstart information, including hotstart scenario id, hotstart file name, etc. of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateInitialConditionInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV1ModelInformationInitialConditionHotstartUpdatePostAsyncWithHttpInfo (UpdateInitialConditionInput updateInitialConditionInput = default(UpdateInitialConditionInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateInitialConditionInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/model-information/initial-condition/hotstart/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationInitialConditionHotstartUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
