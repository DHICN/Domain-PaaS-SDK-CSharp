/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHI.DSS.IdentityServiceSDK.Client;
using DHI.DSS.IdentityServiceSDK.Model;

namespace DHI.DSS.IdentityServiceSDK.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IOrganizationManangerApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 增加组织机构 | add organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>OrganizationEntity</returns>
        Result<OrganizationEntity> ApiV1OrganizationAddPost (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput));

        /// <summary>
        /// 增加组织机构 | add organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>ApiResponse of OrganizationEntity</returns>
        ApiResponse<Result<OrganizationEntity>> ApiV1OrganizationAddPostWithHttpInfo (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput));
        /// <summary>
        /// 删除组织架构 | delete organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1OrganizationDeletePost (KeysInput keysInput = default(KeysInput));

        /// <summary>
        /// 删除组织架构 | delete organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1OrganizationDeletePostWithHttpInfo (KeysInput keysInput = default(KeysInput));
        /// <summary>
        /// 查询组织架构树 | query organization tree
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;QueryOrganizationOutput&gt;</returns>
        Result<List<QueryOrganizationOutput>> ApiV1OrganizationTreeGet ();

        /// <summary>
        /// 查询组织架构树 | query organization tree
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;QueryOrganizationOutput&gt;</returns>
        ApiResponse<Result<List<QueryOrganizationOutput>>> ApiV1OrganizationTreeGetWithHttpInfo ();
        /// <summary>
        /// 修改组织架构 | update organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>List&lt;OrganizationEntity&gt;</returns>
        Result<List<OrganizationEntity>> ApiV1OrganizationUpdatePost (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput));

        /// <summary>
        /// 修改组织架构 | update organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;OrganizationEntity&gt;</returns>
        ApiResponse<Result<List<OrganizationEntity>>> ApiV1OrganizationUpdatePostWithHttpInfo (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput));
        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1OrganizationUserRelevanceAddPost (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>));

        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1OrganizationUserRelevanceAddPostWithHttpInfo (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>));
        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1OrganizationUserRelevanceDeletePost (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput));

        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1OrganizationUserRelevanceDeletePostWithHttpInfo (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput));
        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>List&lt;OrganizationWithUserInfoOutput&gt;</returns>
        Result<List<OrganizationWithUserInfoOutput>> ApiV1OrganizationWithUserInfoTreePost (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput));

        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;OrganizationWithUserInfoOutput&gt;</returns>
        ApiResponse<Result<List<OrganizationWithUserInfoOutput>>> ApiV1OrganizationWithUserInfoTreePostWithHttpInfo (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput));
        /// <summary>
        /// 通过用户输入的关键字查询用户
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>List&lt;QueryUserInformationOutput&gt;</returns>
        Result<List<QueryUserInformationOutput>> ApiV1UserDetailsQueryByKeywordPost (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput));

        /// <summary>
        /// 通过用户输入的关键字查询用户
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryUserInformationOutput&gt;</returns>
        ApiResponse<Result<List<QueryUserInformationOutput>>> ApiV1UserDetailsQueryByKeywordPostWithHttpInfo (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput));
        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>List&lt;QueryUserInformationOutput&gt;</returns>
        Result<List<QueryUserInformationOutput>> ApiV1UserDetailsQueryByUserIdPost (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput));

        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryUserInformationOutput&gt;</returns>
        ApiResponse<Result<List<QueryUserInformationOutput>>> ApiV1UserDetailsQueryByUserIdPostWithHttpInfo (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IOrganizationManangerApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 增加组织机构 | add organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>Task of OrganizationEntity</returns>
        System.Threading.Tasks.Task<Result<OrganizationEntity>> ApiV1OrganizationAddPostAsync (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput));

        /// <summary>
        /// 增加组织机构 | add organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>Task of ApiResponse (OrganizationEntity)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<OrganizationEntity>>> ApiV1OrganizationAddPostAsyncWithHttpInfo (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput));
        /// <summary>
        /// 删除组织架构 | delete organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1OrganizationDeletePostAsync (KeysInput keysInput = default(KeysInput));

        /// <summary>
        /// 删除组织架构 | delete organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1OrganizationDeletePostAsyncWithHttpInfo (KeysInput keysInput = default(KeysInput));
        /// <summary>
        /// 查询组织架构树 | query organization tree
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;QueryOrganizationOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryOrganizationOutput>>> ApiV1OrganizationTreeGetAsync ();

        /// <summary>
        /// 查询组织架构树 | query organization tree
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;QueryOrganizationOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryOrganizationOutput>>>> ApiV1OrganizationTreeGetAsyncWithHttpInfo ();
        /// <summary>
        /// 修改组织架构 | update organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>Task of List&lt;OrganizationEntity&gt;</returns>
        System.Threading.Tasks.Task<Result<List<OrganizationEntity>>> ApiV1OrganizationUpdatePostAsync (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput));

        /// <summary>
        /// 修改组织架构 | update organization
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;OrganizationEntity&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<OrganizationEntity>>>> ApiV1OrganizationUpdatePostAsyncWithHttpInfo (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput));
        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1OrganizationUserRelevanceAddPostAsync (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>));

        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1OrganizationUserRelevanceAddPostAsyncWithHttpInfo (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>));
        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1OrganizationUserRelevanceDeletePostAsync (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput));

        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1OrganizationUserRelevanceDeletePostAsyncWithHttpInfo (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput));
        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>Task of List&lt;OrganizationWithUserInfoOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<OrganizationWithUserInfoOutput>>> ApiV1OrganizationWithUserInfoTreePostAsync (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput));

        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;OrganizationWithUserInfoOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<OrganizationWithUserInfoOutput>>>> ApiV1OrganizationWithUserInfoTreePostAsyncWithHttpInfo (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput));
        /// <summary>
        /// 通过用户输入的关键字查询用户
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>Task of List&lt;QueryUserInformationOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryUserInformationOutput>>> ApiV1UserDetailsQueryByKeywordPostAsync (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput));

        /// <summary>
        /// 通过用户输入的关键字查询用户
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryUserInformationOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryUserInformationOutput>>>> ApiV1UserDetailsQueryByKeywordPostAsyncWithHttpInfo (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput));
        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>Task of List&lt;QueryUserInformationOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryUserInformationOutput>>> ApiV1UserDetailsQueryByUserIdPostAsync (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput));

        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryUserInformationOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryUserInformationOutput>>>> ApiV1UserDetailsQueryByUserIdPostAsyncWithHttpInfo (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IOrganizationManangerApi : IOrganizationManangerApiSync, IOrganizationManangerApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class OrganizationManangerApi : IOrganizationManangerApi
    {
        private DHI.DSS.IdentityServiceSDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="OrganizationManangerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public OrganizationManangerApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="OrganizationManangerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public OrganizationManangerApi(String basePath)
        {
            this.Configuration = DHI.DSS.IdentityServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.IdentityServiceSDK.Client.GlobalConfiguration.Instance,
                new DHI.DSS.IdentityServiceSDK.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHI.DSS.IdentityServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.IdentityServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHI.DSS.IdentityServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="OrganizationManangerApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public OrganizationManangerApi(DHI.DSS.IdentityServiceSDK.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHI.DSS.IdentityServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.IdentityServiceSDK.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHI.DSS.IdentityServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.IdentityServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHI.DSS.IdentityServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="OrganizationManangerApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public OrganizationManangerApi(DHI.DSS.IdentityServiceSDK.Client.ISynchronousClient client,DHI.DSS.IdentityServiceSDK.Client.IAsynchronousClient asyncClient, DHI.DSS.IdentityServiceSDK.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHI.DSS.IdentityServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHI.DSS.IdentityServiceSDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHI.DSS.IdentityServiceSDK.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHI.DSS.IdentityServiceSDK.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHI.DSS.IdentityServiceSDK.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 增加组织机构 | add organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>OrganizationEntity</returns>
        public Result<OrganizationEntity> ApiV1OrganizationAddPost (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<OrganizationEntity>> localVarResponse = ApiV1OrganizationAddPostWithHttpInfo(addOrganizationInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 增加组织机构 | add organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>ApiResponse of OrganizationEntity</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< OrganizationEntity >> ApiV1OrganizationAddPostWithHttpInfo (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addOrganizationInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< OrganizationEntity >>("/api/v1/organization/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 增加组织机构 | add organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>Task of OrganizationEntity</returns>
        public async System.Threading.Tasks.Task<Result<OrganizationEntity>> ApiV1OrganizationAddPostAsync (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<OrganizationEntity>> localVarResponse = await ApiV1OrganizationAddPostAsyncWithHttpInfo(addOrganizationInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 增加组织机构 | add organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationInput"> (optional)</param>
        /// <returns>Task of ApiResponse (OrganizationEntity)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<OrganizationEntity>>> ApiV1OrganizationAddPostAsyncWithHttpInfo (AddOrganizationInput addOrganizationInput = default(AddOrganizationInput))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addOrganizationInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<OrganizationEntity>>("/api/v1/organization/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除组织架构 | delete organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1OrganizationDeletePost (KeysInput keysInput = default(KeysInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1OrganizationDeletePostWithHttpInfo(keysInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除组织架构 | delete organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< Object >> ApiV1OrganizationDeletePostWithHttpInfo (KeysInput keysInput = default(KeysInput))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = keysInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/organization/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除组织架构 | delete organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1OrganizationDeletePostAsync (KeysInput keysInput = default(KeysInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1OrganizationDeletePostAsyncWithHttpInfo(keysInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除组织架构 | delete organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keysInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>>> ApiV1OrganizationDeletePostAsyncWithHttpInfo (KeysInput keysInput = default(KeysInput))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = keysInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/organization/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询组织架构树 | query organization tree 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;QueryOrganizationOutput&gt;</returns>
        public Result<List<QueryOrganizationOutput>> ApiV1OrganizationTreeGet ()
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryOrganizationOutput>>> localVarResponse = ApiV1OrganizationTreeGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询组织架构树 | query organization tree 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;QueryOrganizationOutput&gt;</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< List<QueryOrganizationOutput> >> ApiV1OrganizationTreeGetWithHttpInfo ()
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<QueryOrganizationOutput> >>("/api/v1/organization/tree", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationTreeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询组织架构树 | query organization tree 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;QueryOrganizationOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryOrganizationOutput>>> ApiV1OrganizationTreeGetAsync ()
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryOrganizationOutput>>> localVarResponse = await ApiV1OrganizationTreeGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询组织架构树 | query organization tree 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;QueryOrganizationOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryOrganizationOutput>>>> ApiV1OrganizationTreeGetAsyncWithHttpInfo ()
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<QueryOrganizationOutput>>>("/api/v1/organization/tree", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationTreeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改组织架构 | update organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>List&lt;OrganizationEntity&gt;</returns>
        public Result<List<OrganizationEntity>> ApiV1OrganizationUpdatePost (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<OrganizationEntity>>> localVarResponse = ApiV1OrganizationUpdatePostWithHttpInfo(updateOrganizationInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 修改组织架构 | update organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;OrganizationEntity&gt;</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< List<OrganizationEntity> >> ApiV1OrganizationUpdatePostWithHttpInfo (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateOrganizationInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<OrganizationEntity> >>("/api/v1/organization/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改组织架构 | update organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>Task of List&lt;OrganizationEntity&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<OrganizationEntity>>> ApiV1OrganizationUpdatePostAsync (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<OrganizationEntity>>> localVarResponse = await ApiV1OrganizationUpdatePostAsyncWithHttpInfo(updateOrganizationInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 修改组织架构 | update organization 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateOrganizationInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;OrganizationEntity&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<OrganizationEntity>>>> ApiV1OrganizationUpdatePostAsyncWithHttpInfo (UpdateOrganizationInput updateOrganizationInput = default(UpdateOrganizationInput))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateOrganizationInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<OrganizationEntity>>>("/api/v1/organization/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1OrganizationUserRelevanceAddPost (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1OrganizationUserRelevanceAddPostWithHttpInfo(addOrganizationUserRelInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< Object >> ApiV1OrganizationUserRelevanceAddPostWithHttpInfo (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addOrganizationUserRelInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/organization-user-relevance/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationUserRelevanceAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1OrganizationUserRelevanceAddPostAsync (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1OrganizationUserRelevanceAddPostAsyncWithHttpInfo(addOrganizationUserRelInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 增加组织架构-用户关系 | bind organization and user 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>>> ApiV1OrganizationUserRelevanceAddPostAsyncWithHttpInfo (List<AddOrganizationUserRelInput> addOrganizationUserRelInput = default(List<AddOrganizationUserRelInput>))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addOrganizationUserRelInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/organization-user-relevance/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationUserRelevanceAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1OrganizationUserRelevanceDeletePost (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1OrganizationUserRelevanceDeletePostWithHttpInfo(deleteOrganizationUserRelInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< Object >> ApiV1OrganizationUserRelevanceDeletePostWithHttpInfo (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = deleteOrganizationUserRelInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/organization-user-relevance/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationUserRelevanceDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1OrganizationUserRelevanceDeletePostAsync (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1OrganizationUserRelevanceDeletePostAsyncWithHttpInfo(deleteOrganizationUserRelInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除组织架构用户关联 | delete organization with user relevance 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteOrganizationUserRelInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<Object>>> ApiV1OrganizationUserRelevanceDeletePostAsyncWithHttpInfo (DeleteOrganizationUserRelInput deleteOrganizationUserRelInput = default(DeleteOrganizationUserRelInput))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = deleteOrganizationUserRelInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/organization-user-relevance/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationUserRelevanceDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>List&lt;OrganizationWithUserInfoOutput&gt;</returns>
        public Result<List<OrganizationWithUserInfoOutput>> ApiV1OrganizationWithUserInfoTreePost (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<OrganizationWithUserInfoOutput>>> localVarResponse = ApiV1OrganizationWithUserInfoTreePostWithHttpInfo(queryOrganizationWithUserInfoInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;OrganizationWithUserInfoOutput&gt;</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< List<OrganizationWithUserInfoOutput> >> ApiV1OrganizationWithUserInfoTreePostWithHttpInfo (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = queryOrganizationWithUserInfoInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<OrganizationWithUserInfoOutput> >>("/api/v1/organization-with-user-info/tree", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationWithUserInfoTreePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>Task of List&lt;OrganizationWithUserInfoOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<OrganizationWithUserInfoOutput>>> ApiV1OrganizationWithUserInfoTreePostAsync (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<OrganizationWithUserInfoOutput>>> localVarResponse = await ApiV1OrganizationWithUserInfoTreePostAsyncWithHttpInfo(queryOrganizationWithUserInfoInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询组织架构树及所有人员，如果传入的组织架构ID为空，则返回所有组织架构 | query organization with user&#39;s detail information,if organization&#39;s id is null,we will return all organizations 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryOrganizationWithUserInfoInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;OrganizationWithUserInfoOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<OrganizationWithUserInfoOutput>>>> ApiV1OrganizationWithUserInfoTreePostAsyncWithHttpInfo (QueryOrganizationWithUserInfoInput queryOrganizationWithUserInfoInput = default(QueryOrganizationWithUserInfoInput))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = queryOrganizationWithUserInfoInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<OrganizationWithUserInfoOutput>>>("/api/v1/organization-with-user-info/tree", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1OrganizationWithUserInfoTreePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过用户输入的关键字查询用户 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>List&lt;QueryUserInformationOutput&gt;</returns>
        public Result<List<QueryUserInformationOutput>> ApiV1UserDetailsQueryByKeywordPost (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryUserInformationOutput>>> localVarResponse = ApiV1UserDetailsQueryByKeywordPostWithHttpInfo(queryUserDetailsByUserInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过用户输入的关键字查询用户 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryUserInformationOutput&gt;</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< List<QueryUserInformationOutput> >> ApiV1UserDetailsQueryByKeywordPostWithHttpInfo (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = queryUserDetailsByUserInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<QueryUserInformationOutput> >>("/api/v1/user-details/query-by-keyword", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1UserDetailsQueryByKeywordPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过用户输入的关键字查询用户 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>Task of List&lt;QueryUserInformationOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryUserInformationOutput>>> ApiV1UserDetailsQueryByKeywordPostAsync (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryUserInformationOutput>>> localVarResponse = await ApiV1UserDetailsQueryByKeywordPostAsyncWithHttpInfo(queryUserDetailsByUserInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过用户输入的关键字查询用户 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsByUserInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryUserInformationOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryUserInformationOutput>>>> ApiV1UserDetailsQueryByKeywordPostAsyncWithHttpInfo (QueryUserDetailsByUserInput queryUserDetailsByUserInput = default(QueryUserDetailsByUserInput))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = queryUserDetailsByUserInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<QueryUserInformationOutput>>>("/api/v1/user-details/query-by-keyword", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1UserDetailsQueryByKeywordPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>List&lt;QueryUserInformationOutput&gt;</returns>
        public Result<List<QueryUserInformationOutput>> ApiV1UserDetailsQueryByUserIdPost (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryUserInformationOutput>>> localVarResponse = ApiV1UserDetailsQueryByUserIdPostWithHttpInfo(queryUserDetailsInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryUserInformationOutput&gt;</returns>
        public DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result< List<QueryUserInformationOutput> >> ApiV1UserDetailsQueryByUserIdPostWithHttpInfo (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput))
        {
            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.IdentityServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = queryUserDetailsInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<QueryUserInformationOutput> >>("/api/v1/user-details/query-by-user-id", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1UserDetailsQueryByUserIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>Task of List&lt;QueryUserInformationOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryUserInformationOutput>>> ApiV1UserDetailsQueryByUserIdPostAsync (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput))
        {
             DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryUserInformationOutput>>> localVarResponse = await ApiV1UserDetailsQueryByUserIdPostAsyncWithHttpInfo(queryUserDetailsInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询用户详细信息 | query user&#39;s detail information 
        /// </summary>
        /// <exception cref="DHI.DSS.IdentityServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryUserDetailsInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryUserInformationOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.IdentityServiceSDK.Client.ApiResponse<Result<List<QueryUserInformationOutput>>>> ApiV1UserDetailsQueryByUserIdPostAsyncWithHttpInfo (QueryUserDetailsInput queryUserDetailsInput = default(QueryUserDetailsInput))
        {

            DHI.DSS.IdentityServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.IdentityServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = queryUserDetailsInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<QueryUserInformationOutput>>>("/api/v1/user-details/query-by-user-id", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1UserDetailsQueryByUserIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
