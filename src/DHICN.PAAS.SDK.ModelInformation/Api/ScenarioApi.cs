/* 
 * model-configuration-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ModelInformation.Client;
using DHICN.PAAS.SDK.ModelInformation.Model;

namespace DHICN.PAAS.SDK.ModelInformation.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress
        /// </summary>
        /// <remarks>
        /// 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;TemplateScenarioLogOutput&gt;</returns>
        Result<List<TemplateScenarioLogOutput>> ApiV2ModelConfigurationScenarioConfigLogsGet ();

        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress
        /// </summary>
        /// <remarks>
        /// 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;TemplateScenarioLogOutput&gt;</returns>
        ApiResponse<Result<List<TemplateScenarioLogOutput>>> ApiV2ModelConfigurationScenarioConfigLogsGetWithHttpInfo ();
        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info
        /// </summary>
        /// <remarks>
        /// 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>CreateTemplateScenarioOutput</returns>
        Result<CreateTemplateScenarioOutput> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPost (string templateFileId = default(string), string systemId = default(string));

        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info
        /// </summary>
        /// <remarks>
        /// 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>ApiResponse of CreateTemplateScenarioOutput</returns>
        ApiResponse<Result<CreateTemplateScenarioOutput>> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostWithHttpInfo (string templateFileId = default(string), string systemId = default(string));
        /// <summary>
        /// 启用历史模板方案 Enable template scenario
        /// </summary>
        /// <remarks>
        /// 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPost (string scenarioId = default(string));

        /// <summary>
        /// 启用历史模板方案 Enable template scenario
        /// </summary>
        /// <remarks>
        /// 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// Init library on create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>List&lt;LibraryInfo&gt;</returns>
        Result<List<LibraryInfo>> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPost (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput));

        /// <summary>
        /// Init library on create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;LibraryInfo&gt;</returns>
        ApiResponse<Result<List<LibraryInfo>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostWithHttpInfo (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput));
        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>List&lt;LibraryInfo&gt;</returns>
        Result<List<LibraryInfo>> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePost (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>));

        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>ApiResponse of List&lt;LibraryInfo&gt;</returns>
        ApiResponse<Result<List<LibraryInfo>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostWithHttpInfo (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>));
        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id
        /// </summary>
        /// <remarks>
        /// 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>List&lt;TemplateScenarioLogOutput&gt;</returns>
        Result<List<TemplateScenarioLogOutput>> ApiV2ModelConfigurationScenarioScenarioConfigLogGet (string scenarioId = default(string));

        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id
        /// </summary>
        /// <remarks>
        /// 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;TemplateScenarioLogOutput&gt;</returns>
        ApiResponse<Result<List<TemplateScenarioLogOutput>>> ApiV2ModelConfigurationScenarioScenarioConfigLogGetWithHttpInfo (string scenarioId = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress
        /// </summary>
        /// <remarks>
        /// 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;TemplateScenarioLogOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<TemplateScenarioLogOutput>>> ApiV2ModelConfigurationScenarioConfigLogsGetAsync ();

        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress
        /// </summary>
        /// <remarks>
        /// 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;TemplateScenarioLogOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<TemplateScenarioLogOutput>>>> ApiV2ModelConfigurationScenarioConfigLogsGetAsyncWithHttpInfo ();
        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info
        /// </summary>
        /// <remarks>
        /// 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of CreateTemplateScenarioOutput</returns>
        System.Threading.Tasks.Task<Result<CreateTemplateScenarioOutput>> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostAsync (string templateFileId = default(string), string systemId = default(string));

        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info
        /// </summary>
        /// <remarks>
        /// 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of ApiResponse (CreateTemplateScenarioOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<CreateTemplateScenarioOutput>>> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostAsyncWithHttpInfo (string templateFileId = default(string), string systemId = default(string));
        /// <summary>
        /// 启用历史模板方案 Enable template scenario
        /// </summary>
        /// <remarks>
        /// 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostAsync (string scenarioId = default(string));

        /// <summary>
        /// 启用历史模板方案 Enable template scenario
        /// </summary>
        /// <remarks>
        /// 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// Init library on create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>Task of List&lt;LibraryInfo&gt;</returns>
        System.Threading.Tasks.Task<Result<List<LibraryInfo>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostAsync (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput));

        /// <summary>
        /// Init library on create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;LibraryInfo&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<LibraryInfo>>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostAsyncWithHttpInfo (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput));
        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>Task of List&lt;LibraryInfo&gt;</returns>
        System.Threading.Tasks.Task<Result<List<LibraryInfo>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostAsync (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>));

        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;LibraryInfo&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<LibraryInfo>>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostAsyncWithHttpInfo (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>));
        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id
        /// </summary>
        /// <remarks>
        /// 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>Task of List&lt;TemplateScenarioLogOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<TemplateScenarioLogOutput>>> ApiV2ModelConfigurationScenarioScenarioConfigLogGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id
        /// </summary>
        /// <remarks>
        /// 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;TemplateScenarioLogOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<TemplateScenarioLogOutput>>>> ApiV2ModelConfigurationScenarioScenarioConfigLogGetAsyncWithHttpInfo (string scenarioId = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioApi : IScenarioApiSync, IScenarioApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ScenarioApi : IScenarioApi
    {
        private DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ScenarioApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ScenarioApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ModelInformation.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ScenarioApi(DHICN.PAAS.SDK.ModelInformation.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ScenarioApi(DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient client,DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;TemplateScenarioLogOutput&gt;</returns>
        public Result<List<TemplateScenarioLogOutput>> ApiV2ModelConfigurationScenarioConfigLogsGet ()
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<TemplateScenarioLogOutput>>> localVarResponse = ApiV2ModelConfigurationScenarioConfigLogsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;TemplateScenarioLogOutput&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<TemplateScenarioLogOutput> >> ApiV2ModelConfigurationScenarioConfigLogsGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<TemplateScenarioLogOutput> >>("/api/v2/model-configuration/scenario/config-logs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioConfigLogsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;TemplateScenarioLogOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<TemplateScenarioLogOutput>>> ApiV2ModelConfigurationScenarioConfigLogsGetAsync ()
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<TemplateScenarioLogOutput>>> localVarResponse = await ApiV2ModelConfigurationScenarioConfigLogsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取模板方案的配置进度 Get template scenario&#39;s configuration progress 获取各个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get all the template scenarios&#39; configuration progress information, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;TemplateScenarioLogOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<TemplateScenarioLogOutput>>>> ApiV2ModelConfigurationScenarioConfigLogsGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<TemplateScenarioLogOutput>>>("/api/v2/model-configuration/scenario/config-logs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioConfigLogsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>CreateTemplateScenarioOutput</returns>
        public Result<CreateTemplateScenarioOutput> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPost (string templateFileId = default(string), string systemId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<CreateTemplateScenarioOutput>> localVarResponse = ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostWithHttpInfo(templateFileId, systemId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>ApiResponse of CreateTemplateScenarioOutput</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< CreateTemplateScenarioOutput >> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostWithHttpInfo (string templateFileId = default(string), string systemId = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (templateFileId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "templateFileId", templateFileId));
            }
            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "systemId", systemId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< CreateTemplateScenarioOutput >>("/api/v2/model-configuration/scenario/create-template-scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioCreateTemplateScenarioPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of CreateTemplateScenarioOutput</returns>
        public async System.Threading.Tasks.Task<Result<CreateTemplateScenarioOutput>> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostAsync (string templateFileId = default(string), string systemId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<CreateTemplateScenarioOutput>> localVarResponse = await ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostAsyncWithHttpInfo(templateFileId, systemId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建模板方案，导出模型基本信息 Create template scrnario, meanwhile export model info 基于一个模板模型文件，创建模板方案，导出模型基本信息，同时会把相同库下面的其他模板方案禁用 Based on a template file to create a new template scenario, export model info, meanwhile disable all the old template scenarios of the same library.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateFileId">模板模型文件ID model template file id (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of ApiResponse (CreateTemplateScenarioOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<CreateTemplateScenarioOutput>>> ApiV2ModelConfigurationScenarioCreateTemplateScenarioPostAsyncWithHttpInfo (string templateFileId = default(string), string systemId = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (templateFileId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "templateFileId", templateFileId));
            }
            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "systemId", systemId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<CreateTemplateScenarioOutput>>("/api/v2/model-configuration/scenario/create-template-scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioCreateTemplateScenarioPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 启用历史模板方案 Enable template scenario 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPost (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 启用历史模板方案 Enable template scenario 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v2/model-configuration/scenario/enable-template-scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioEnableTemplateScenarioPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 启用历史模板方案 Enable template scenario 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 启用历史模板方案 Enable template scenario 启用一个历史的模板方案，同时禁用同一个库下的其他模板方案，只有完成了必要的配置流程的模板方案才能被启用 Turn on a history template scenario to be active, meanwhile disable all the other template scenarios of the same library.  Only a template scenario which has finished all the necessary initialization steps can be activated.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">模板方案ID template scenario&#39;s id (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV2ModelConfigurationScenarioEnableTemplateScenarioPostAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v2/model-configuration/scenario/enable-template-scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioEnableTemplateScenarioPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Init library on create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>List&lt;LibraryInfo&gt;</returns>
        public Result<List<LibraryInfo>> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPost (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LibraryInfo>>> localVarResponse = ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostWithHttpInfo(tenantId, initLibraryInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Init library on create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;LibraryInfo&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<LibraryInfo> >> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostWithHttpInfo (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            localVarRequestOptions.Data = initLibraryInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<LibraryInfo> >>("/api/v2/model-configuration/scenario/init-library-on-create_old", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Init library on create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>Task of List&lt;LibraryInfo&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<LibraryInfo>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostAsync (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LibraryInfo>>> localVarResponse = await ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostAsyncWithHttpInfo(tenantId, initLibraryInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Init library on create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="initLibraryInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;LibraryInfo&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LibraryInfo>>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPostAsyncWithHttpInfo (string tenantId = default(string), InitLibraryInput initLibraryInput = default(InitLibraryInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            localVarRequestOptions.Data = initLibraryInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<LibraryInfo>>>("/api/v2/model-configuration/scenario/init-library-on-create_old", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioInitLibraryOnCreateOldPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>List&lt;LibraryInfo&gt;</returns>
        public Result<List<LibraryInfo>> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePost (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LibraryInfo>>> localVarResponse = ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostWithHttpInfo(tenantId, libraryInfo);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>ApiResponse of List&lt;LibraryInfo&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<LibraryInfo> >> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostWithHttpInfo (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            localVarRequestOptions.Data = libraryInfo;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<LibraryInfo> >>("/api/v2/model-configuration/scenario/init-library-on-create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioInitLibraryOnCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>Task of List&lt;LibraryInfo&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<LibraryInfo>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostAsync (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LibraryInfo>>> localVarResponse = await ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostAsyncWithHttpInfo(tenantId, libraryInfo);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/v2/model-configuration/scenario/init-library-on-create 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="libraryInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;LibraryInfo&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LibraryInfo>>>> ApiV2ModelConfigurationScenarioInitLibraryOnCreatePostAsyncWithHttpInfo (string tenantId = default(string), List<LibraryInfo> libraryInfo = default(List<LibraryInfo>))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            localVarRequestOptions.Data = libraryInfo;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<LibraryInfo>>>("/api/v2/model-configuration/scenario/init-library-on-create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioInitLibraryOnCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>List&lt;TemplateScenarioLogOutput&gt;</returns>
        public Result<List<TemplateScenarioLogOutput>> ApiV2ModelConfigurationScenarioScenarioConfigLogGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<TemplateScenarioLogOutput>>> localVarResponse = ApiV2ModelConfigurationScenarioScenarioConfigLogGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;TemplateScenarioLogOutput&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<TemplateScenarioLogOutput> >> ApiV2ModelConfigurationScenarioScenarioConfigLogGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<TemplateScenarioLogOutput> >>("/api/v2/model-configuration/scenario/scenario-config-log", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioScenarioConfigLogGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>Task of List&lt;TemplateScenarioLogOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<TemplateScenarioLogOutput>>> ApiV2ModelConfigurationScenarioScenarioConfigLogGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<TemplateScenarioLogOutput>>> localVarResponse = await ApiV2ModelConfigurationScenarioScenarioConfigLogGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据模板方案ID获取模板方案的配置进度 Get template scenario&#39;s configuration progress by scenario id 获取单个模板方案的配置进度，必要步骤必须完成配置之后模板方案才能启用 Get template scenario&#39;s configuration progress information by scenario id, necessary steps must be finished before the template scenario can be enabled.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;TemplateScenarioLogOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<TemplateScenarioLogOutput>>>> ApiV2ModelConfigurationScenarioScenarioConfigLogGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<TemplateScenarioLogOutput>>>("/api/v2/model-configuration/scenario/scenario-config-log", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationScenarioScenarioConfigLogGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
