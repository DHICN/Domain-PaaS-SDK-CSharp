/* 
 * message-center-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.Message.Center.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.Message.Center.Model
{
    /// <summary>
    /// UnreadCountQueryOutput
    /// </summary>
    [DataContract]
    public partial class UnreadCountQueryOutput :  IEquatable<UnreadCountQueryOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UnreadCountQueryOutput" /> class.
        /// </summary>
        /// <param name="msgType">消息类型.</param>
        /// <param name="showName">showName.</param>
        /// <param name="unreadCount">未读消息数量.</param>
        /// <param name="markCount">标记数量.</param>
        /// <param name="latestMsg">latestMsg.</param>
        /// <param name="byLevel">byLevel.</param>
        public UnreadCountQueryOutput(string msgType = default(string), string showName = default(string), int unreadCount = default(int), int markCount = default(int), LastMsg latestMsg = default(LastMsg), List<CountByLevel> byLevel = default(List<CountByLevel>))
        {
            this.MsgType = msgType;
            this.ShowName = showName;
            this.UnreadCount = unreadCount;
            this.MarkCount = markCount;
            this.LatestMsg = latestMsg;
            this.ByLevel = byLevel;
        }
        
        /// <summary>
        /// 消息类型
        /// </summary>
        /// <value>消息类型</value>
        [DataMember(Name="msgType", EmitDefaultValue=true)]
        public string MsgType { get; set; }

        /// <summary>
        /// Gets or Sets ShowName
        /// </summary>
        [DataMember(Name="showName", EmitDefaultValue=true)]
        public string ShowName { get; set; }

        /// <summary>
        /// 未读消息数量
        /// </summary>
        /// <value>未读消息数量</value>
        [DataMember(Name="unreadCount", EmitDefaultValue=false)]
        public int UnreadCount { get; set; }

        /// <summary>
        /// 标记数量
        /// </summary>
        /// <value>标记数量</value>
        [DataMember(Name="markCount", EmitDefaultValue=false)]
        public int MarkCount { get; set; }

        /// <summary>
        /// Gets or Sets LatestMsg
        /// </summary>
        [DataMember(Name="latestMsg", EmitDefaultValue=false)]
        public LastMsg LatestMsg { get; set; }

        /// <summary>
        /// Gets or Sets ByLevel
        /// </summary>
        [DataMember(Name="byLevel", EmitDefaultValue=true)]
        public List<CountByLevel> ByLevel { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UnreadCountQueryOutput {\n");
            sb.Append("  MsgType: ").Append(MsgType).Append("\n");
            sb.Append("  ShowName: ").Append(ShowName).Append("\n");
            sb.Append("  UnreadCount: ").Append(UnreadCount).Append("\n");
            sb.Append("  MarkCount: ").Append(MarkCount).Append("\n");
            sb.Append("  LatestMsg: ").Append(LatestMsg).Append("\n");
            sb.Append("  ByLevel: ").Append(ByLevel).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UnreadCountQueryOutput);
        }

        /// <summary>
        /// Returns true if UnreadCountQueryOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of UnreadCountQueryOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UnreadCountQueryOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MsgType == input.MsgType ||
                    (this.MsgType != null &&
                    this.MsgType.Equals(input.MsgType))
                ) && 
                (
                    this.ShowName == input.ShowName ||
                    (this.ShowName != null &&
                    this.ShowName.Equals(input.ShowName))
                ) && 
                (
                    this.UnreadCount == input.UnreadCount ||
                    this.UnreadCount.Equals(input.UnreadCount)
                ) && 
                (
                    this.MarkCount == input.MarkCount ||
                    this.MarkCount.Equals(input.MarkCount)
                ) && 
                (
                    this.LatestMsg == input.LatestMsg ||
                    (this.LatestMsg != null &&
                    this.LatestMsg.Equals(input.LatestMsg))
                ) && 
                (
                    this.ByLevel == input.ByLevel ||
                    this.ByLevel != null &&
                    input.ByLevel != null &&
                    this.ByLevel.SequenceEqual(input.ByLevel)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MsgType != null)
                    hashCode = hashCode * 59 + this.MsgType.GetHashCode();
                if (this.ShowName != null)
                    hashCode = hashCode * 59 + this.ShowName.GetHashCode();
                hashCode = hashCode * 59 + this.UnreadCount.GetHashCode();
                hashCode = hashCode * 59 + this.MarkCount.GetHashCode();
                if (this.LatestMsg != null)
                    hashCode = hashCode * 59 + this.LatestMsg.GetHashCode();
                if (this.ByLevel != null)
                    hashCode = hashCode * 59 + this.ByLevel.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
