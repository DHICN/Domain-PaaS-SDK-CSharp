/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.IdentityServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.IdentityServiceSDK.Model
{
    /// <summary>
    /// QueryUsersOutput
    /// </summary>
    [DataContract]
    public partial class QueryUsersOutput :  IEquatable<QueryUsersOutput>, IValidatableObject
    {
        /// <summary>
        /// 0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) 
        /// </summary>
        /// <value>0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) </value>
        public enum StatusEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2

        }

        /// <summary>
        /// 0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) 
        /// </summary>
        /// <value>0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) </value>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="QueryUsersOutput" /> class.
        /// </summary>
        /// <param name="id">用户ID user id.</param>
        /// <param name="status">0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) .</param>
        /// <param name="userName">用户名 user name.</param>
        /// <param name="surname">姓氏 surname.</param>
        /// <param name="email">邮箱 email address.</param>
        /// <param name="department">所属单位 working department.</param>
        /// <param name="extraProperties">额外属性 extra properties.</param>
        /// <param name="creationTime">创建时间 create time.</param>
        /// <param name="tenantId">租户ID tenant id.</param>
        /// <param name="userRoles">用户角色 user roles.</param>
        /// <param name="isTrialUser">是否试用用户 if it is a trial user.</param>
        /// <param name="trialDeadline">试用截止日期 trial deadline.</param>
        /// <param name="phoneNumber">电话号码 phonenumber.</param>
        public QueryUsersOutput(Guid id = default(Guid), StatusEnum? status = default(StatusEnum?), string userName = default(string), string surname = default(string), string email = default(string), string department = default(string), string extraProperties = default(string), DateTime creationTime = default(DateTime), Guid? tenantId = default(Guid?), List<GuidStringKeyValue> userRoles = default(List<GuidStringKeyValue>), bool isTrialUser = default(bool), DateTime? trialDeadline = default(DateTime?), string phoneNumber = default(string))
        {
            this.Id = id;
            this.Status = status;
            this.UserName = userName;
            this.Surname = surname;
            this.Email = email;
            this.Department = department;
            this.ExtraProperties = extraProperties;
            this.CreationTime = creationTime;
            this.TenantId = tenantId;
            this.UserRoles = userRoles;
            this.IsTrialUser = isTrialUser;
            this.TrialDeadline = trialDeadline;
            this.PhoneNumber = phoneNumber;
        }
        
        /// <summary>
        /// 用户ID user id
        /// </summary>
        /// <value>用户ID user id</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// 用户名 user name
        /// </summary>
        /// <value>用户名 user name</value>
        [DataMember(Name="userName", EmitDefaultValue=true)]
        public string UserName { get; set; }

        /// <summary>
        /// 姓氏 surname
        /// </summary>
        /// <value>姓氏 surname</value>
        [DataMember(Name="surname", EmitDefaultValue=true)]
        public string Surname { get; set; }

        /// <summary>
        /// 邮箱 email address
        /// </summary>
        /// <value>邮箱 email address</value>
        [DataMember(Name="email", EmitDefaultValue=true)]
        public string Email { get; set; }

        /// <summary>
        /// 所属单位 working department
        /// </summary>
        /// <value>所属单位 working department</value>
        [DataMember(Name="department", EmitDefaultValue=true)]
        public string Department { get; set; }

        /// <summary>
        /// 额外属性 extra properties
        /// </summary>
        /// <value>额外属性 extra properties</value>
        [DataMember(Name="extraProperties", EmitDefaultValue=true)]
        public string ExtraProperties { get; set; }

        /// <summary>
        /// 创建时间 create time
        /// </summary>
        /// <value>创建时间 create time</value>
        [DataMember(Name="creationTime", EmitDefaultValue=false)]
        public DateTime CreationTime { get; set; }

        /// <summary>
        /// 租户ID tenant id
        /// </summary>
        /// <value>租户ID tenant id</value>
        [DataMember(Name="tenantId", EmitDefaultValue=true)]
        public Guid? TenantId { get; set; }

        /// <summary>
        /// 用户角色 user roles
        /// </summary>
        /// <value>用户角色 user roles</value>
        [DataMember(Name="userRoles", EmitDefaultValue=true)]
        public List<GuidStringKeyValue> UserRoles { get; set; }

        /// <summary>
        /// 是否试用用户 if it is a trial user
        /// </summary>
        /// <value>是否试用用户 if it is a trial user</value>
        [DataMember(Name="isTrialUser", EmitDefaultValue=false)]
        public bool IsTrialUser { get; set; }

        /// <summary>
        /// 试用截止日期 trial deadline
        /// </summary>
        /// <value>试用截止日期 trial deadline</value>
        [DataMember(Name="trialDeadline", EmitDefaultValue=true)]
        public DateTime? TrialDeadline { get; set; }

        /// <summary>
        /// 电话号码 phonenumber
        /// </summary>
        /// <value>电话号码 phonenumber</value>
        [DataMember(Name="phoneNumber", EmitDefaultValue=true)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class QueryUsersOutput {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  Surname: ").Append(Surname).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  ExtraProperties: ").Append(ExtraProperties).Append("\n");
            sb.Append("  CreationTime: ").Append(CreationTime).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  UserRoles: ").Append(UserRoles).Append("\n");
            sb.Append("  IsTrialUser: ").Append(IsTrialUser).Append("\n");
            sb.Append("  TrialDeadline: ").Append(TrialDeadline).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QueryUsersOutput);
        }

        /// <summary>
        /// Returns true if QueryUsersOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of QueryUsersOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QueryUsersOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.UserName == input.UserName ||
                    (this.UserName != null &&
                    this.UserName.Equals(input.UserName))
                ) && 
                (
                    this.Surname == input.Surname ||
                    (this.Surname != null &&
                    this.Surname.Equals(input.Surname))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Department == input.Department ||
                    (this.Department != null &&
                    this.Department.Equals(input.Department))
                ) && 
                (
                    this.ExtraProperties == input.ExtraProperties ||
                    (this.ExtraProperties != null &&
                    this.ExtraProperties.Equals(input.ExtraProperties))
                ) && 
                (
                    this.CreationTime == input.CreationTime ||
                    (this.CreationTime != null &&
                    this.CreationTime.Equals(input.CreationTime))
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                ) && 
                (
                    this.UserRoles == input.UserRoles ||
                    this.UserRoles != null &&
                    input.UserRoles != null &&
                    this.UserRoles.SequenceEqual(input.UserRoles)
                ) && 
                (
                    this.IsTrialUser == input.IsTrialUser ||
                    this.IsTrialUser.Equals(input.IsTrialUser)
                ) && 
                (
                    this.TrialDeadline == input.TrialDeadline ||
                    (this.TrialDeadline != null &&
                    this.TrialDeadline.Equals(input.TrialDeadline))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.UserName != null)
                    hashCode = hashCode * 59 + this.UserName.GetHashCode();
                if (this.Surname != null)
                    hashCode = hashCode * 59 + this.Surname.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Department != null)
                    hashCode = hashCode * 59 + this.Department.GetHashCode();
                if (this.ExtraProperties != null)
                    hashCode = hashCode * 59 + this.ExtraProperties.GetHashCode();
                if (this.CreationTime != null)
                    hashCode = hashCode * 59 + this.CreationTime.GetHashCode();
                if (this.TenantId != null)
                    hashCode = hashCode * 59 + this.TenantId.GetHashCode();
                if (this.UserRoles != null)
                    hashCode = hashCode * 59 + this.UserRoles.GetHashCode();
                hashCode = hashCode * 59 + this.IsTrialUser.GetHashCode();
                if (this.TrialDeadline != null)
                    hashCode = hashCode * 59 + this.TrialDeadline.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
