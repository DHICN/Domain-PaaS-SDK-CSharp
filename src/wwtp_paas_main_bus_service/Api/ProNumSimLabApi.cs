/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using wwtp_paas_main_bus_service.Client;
using wwtp_paas_main_bus_service.Model;

namespace wwtp_paas_main_bus_service.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProNumSimLabApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;SimResultsOutupt&gt;</returns>
        Result<List<SimResultsOutupt>> ApiProNumSimLabSimResultsGet (string scenarioId = default(string));

        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;SimResultsOutupt&gt;</returns>
        ApiResponse<Result<List<SimResultsOutupt>>> ApiProNumSimLabSimResultsGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 生化池查询 Get biochemical pool config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;QueryBiochemicaltanksOutput&gt;</returns>
        Result<List<QueryBiochemicaltanksOutput>> ApiV2ConfigBiochemicaltanksGet (string productLine = default(string), string modelName = default(string));

        /// <summary>
        /// 生化池查询 Get biochemical pool config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryBiochemicaltanksOutput&gt;</returns>
        ApiResponse<Result<List<QueryBiochemicaltanksOutput>>> ApiV2ConfigBiochemicaltanksGetWithHttpInfo (string productLine = default(string), string modelName = default(string));
        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison
        /// </summary>
        /// <remarks>
        /// 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>List&lt;QueryControlParamCompareOutput&gt;</returns>
        Result<List<QueryControlParamCompareOutput>> ApiV2SimulationLabCompareControlParamPost (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput));

        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison
        /// </summary>
        /// <remarks>
        /// 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryControlParamCompareOutput&gt;</returns>
        ApiResponse<Result<List<QueryControlParamCompareOutput>>> ApiV2SimulationLabCompareControlParamPostWithHttpInfo (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput));
        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;QueryIndicatorStatisticOutput&gt;</returns>
        Result<List<QueryIndicatorStatisticOutput>> ApiV2SimulationLabResultIndicatorStatisticGet (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string));

        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryIndicatorStatisticOutput&gt;</returns>
        ApiResponse<Result<List<QueryIndicatorStatisticOutput>>> ApiV2SimulationLabResultIndicatorStatisticGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string));
        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;EntireProcessWqOut&gt;</returns>
        Result<List<EntireProcessWqOut>> ApiV2SimulationLabResultTsByProductlineGet (string scenarioId = default(string), string productLine = default(string), string modelName = default(string));

        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;EntireProcessWqOut&gt;</returns>
        ApiResponse<Result<List<EntireProcessWqOut>>> ApiV2SimulationLabResultTsByProductlineGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string modelName = default(string));
        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2SimulationLabScenarioDeletePost (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput));

        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2SimulationLabScenarioDeletePostWithHttpInfo (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput));
        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>QueryInletDataOutput</returns>
        Result<QueryInletDataOutput> ApiV2SimulationLabScenarioInletDataGet (string scenarioId = default(string), string inlet = default(string));

        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>ApiResponse of QueryInletDataOutput</returns>
        ApiResponse<Result<QueryInletDataOutput>> ApiV2SimulationLabScenarioInletDataGetWithHttpInfo (string scenarioId = default(string), string inlet = default(string));
        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2SimulationLabScenarioInletDataSavePost (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>));

        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2SimulationLabScenarioInletDataSavePostWithHttpInfo (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>));
        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        void ApiV2SimulationLabScenarioInletDataTemplateDownloadPost ();

        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiV2SimulationLabScenarioInletDataTemplateDownloadPostWithHttpInfo ();
        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>List&lt;SaveInletDataInput&gt;</returns>
        Result<List<SaveInletDataInput>> ApiV2SimulationLabScenarioInletDataTemplateUploadPost (System.IO.Stream excel = default(System.IO.Stream));

        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>ApiResponse of List&lt;SaveInletDataInput&gt;</returns>
        ApiResponse<Result<List<SaveInletDataInput>>> ApiV2SimulationLabScenarioInletDataTemplateUploadPostWithHttpInfo (System.IO.Stream excel = default(System.IO.Stream));
        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>QueryInletDataOutput</returns>
        Result<QueryInletDataOutput> ApiV2SimulationLabScenarioInletScadaGet (string inlet = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of QueryInletDataOutput</returns>
        ApiResponse<Result<QueryInletDataOutput>> ApiV2SimulationLabScenarioInletScadaGetWithHttpInfo (string inlet = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>List&lt;ModelParam&gt;</returns>
        Result<List<ModelParam>> ApiV2SimulationLabScenarioParamGet (string scenarioId = default(string), string productLine = default(string));

        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelParam&gt;</returns>
        ApiResponse<Result<List<ModelParam>>> ApiV2SimulationLabScenarioParamGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string));
        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2SimulationLabScenarioParamSavePost (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>));

        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2SimulationLabScenarioParamSavePostWithHttpInfo (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>));
        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ResultParam</returns>
        Result<ResultParam> ApiV2SimulationLabScenarioResultSettingGet (string scenarioId = default(string));

        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of ResultParam</returns>
        ApiResponse<Result<ResultParam>> ApiV2SimulationLabScenarioResultSettingGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2SimulationLabScenarioResultSettingSavePost (ResultParam resultParam = default(ResultParam));

        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2SimulationLabScenarioResultSettingSavePostWithHttpInfo (ResultParam resultParam = default(ResultParam));
        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario
        /// </summary>
        /// <remarks>
        /// 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;Guid&gt;</returns>
        Result<List<Guid>> ApiV2SimulationLabScenarioScenariosForCompareGet (string scenarioId = default(string));

        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario
        /// </summary>
        /// <remarks>
        /// 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;Guid&gt;</returns>
        ApiResponse<Result<List<Guid>>> ApiV2SimulationLabScenarioScenariosForCompareGetWithHttpInfo (string scenarioId = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProNumSimLabApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;SimResultsOutupt&gt;</returns>
        System.Threading.Tasks.Task<Result<List<SimResultsOutupt>>> ApiProNumSimLabSimResultsGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;SimResultsOutupt&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<SimResultsOutupt>>>> ApiProNumSimLabSimResultsGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 生化池查询 Get biochemical pool config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;QueryBiochemicaltanksOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryBiochemicaltanksOutput>>> ApiV2ConfigBiochemicaltanksGetAsync (string productLine = default(string), string modelName = default(string));

        /// <summary>
        /// 生化池查询 Get biochemical pool config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryBiochemicaltanksOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryBiochemicaltanksOutput>>>> ApiV2ConfigBiochemicaltanksGetAsyncWithHttpInfo (string productLine = default(string), string modelName = default(string));
        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison
        /// </summary>
        /// <remarks>
        /// 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>Task of List&lt;QueryControlParamCompareOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryControlParamCompareOutput>>> ApiV2SimulationLabCompareControlParamPostAsync (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput));

        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison
        /// </summary>
        /// <remarks>
        /// 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryControlParamCompareOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryControlParamCompareOutput>>>> ApiV2SimulationLabCompareControlParamPostAsyncWithHttpInfo (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput));
        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;QueryIndicatorStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryIndicatorStatisticOutput>>> ApiV2SimulationLabResultIndicatorStatisticGetAsync (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string));

        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryIndicatorStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryIndicatorStatisticOutput>>>> ApiV2SimulationLabResultIndicatorStatisticGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string));
        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;EntireProcessWqOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<EntireProcessWqOut>>> ApiV2SimulationLabResultTsByProductlineGetAsync (string scenarioId = default(string), string productLine = default(string), string modelName = default(string));

        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;EntireProcessWqOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<EntireProcessWqOut>>>> ApiV2SimulationLabResultTsByProductlineGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string modelName = default(string));
        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioDeletePostAsync (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput));

        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioDeletePostAsyncWithHttpInfo (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput));
        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>Task of QueryInletDataOutput</returns>
        System.Threading.Tasks.Task<Result<QueryInletDataOutput>> ApiV2SimulationLabScenarioInletDataGetAsync (string scenarioId = default(string), string inlet = default(string));

        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>Task of ApiResponse (QueryInletDataOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<QueryInletDataOutput>>> ApiV2SimulationLabScenarioInletDataGetAsyncWithHttpInfo (string scenarioId = default(string), string inlet = default(string));
        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioInletDataSavePostAsync (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>));

        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioInletDataSavePostAsyncWithHttpInfo (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>));
        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV2SimulationLabScenarioInletDataTemplateDownloadPostAsync ();

        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioInletDataTemplateDownloadPostAsyncWithHttpInfo ();
        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>Task of List&lt;SaveInletDataInput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<SaveInletDataInput>>> ApiV2SimulationLabScenarioInletDataTemplateUploadPostAsync (System.IO.Stream excel = default(System.IO.Stream));

        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;SaveInletDataInput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<SaveInletDataInput>>>> ApiV2SimulationLabScenarioInletDataTemplateUploadPostAsyncWithHttpInfo (System.IO.Stream excel = default(System.IO.Stream));
        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of QueryInletDataOutput</returns>
        System.Threading.Tasks.Task<Result<QueryInletDataOutput>> ApiV2SimulationLabScenarioInletScadaGetAsync (string inlet = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (QueryInletDataOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<QueryInletDataOutput>>> ApiV2SimulationLabScenarioInletScadaGetAsyncWithHttpInfo (string inlet = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>Task of List&lt;ModelParam&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelParam>>> ApiV2SimulationLabScenarioParamGetAsync (string scenarioId = default(string), string productLine = default(string));

        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelParam&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelParam>>>> ApiV2SimulationLabScenarioParamGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string));
        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioParamSavePostAsync (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>));

        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioParamSavePostAsyncWithHttpInfo (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>));
        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ResultParam</returns>
        System.Threading.Tasks.Task<Result<ResultParam>> ApiV2SimulationLabScenarioResultSettingGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (ResultParam)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ResultParam>>> ApiV2SimulationLabScenarioResultSettingGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioResultSettingSavePostAsync (ResultParam resultParam = default(ResultParam));

        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioResultSettingSavePostAsyncWithHttpInfo (ResultParam resultParam = default(ResultParam));
        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario
        /// </summary>
        /// <remarks>
        /// 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;Guid&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Guid>>> ApiV2SimulationLabScenarioScenariosForCompareGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario
        /// </summary>
        /// <remarks>
        /// 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Guid&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Guid>>>> ApiV2SimulationLabScenarioScenariosForCompareGetAsyncWithHttpInfo (string scenarioId = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProNumSimLabApi : IProNumSimLabApiSync, IProNumSimLabApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ProNumSimLabApi : IProNumSimLabApi
    {
        private wwtp_paas_main_bus_service.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProNumSimLabApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProNumSimLabApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProNumSimLabApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProNumSimLabApi(String basePath)
        {
            this.Configuration = wwtp_paas_main_bus_service.Client.Configuration.MergeConfigurations(
                wwtp_paas_main_bus_service.Client.GlobalConfiguration.Instance,
                new wwtp_paas_main_bus_service.Client.Configuration { BasePath = basePath }
            );
            this.Client = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = wwtp_paas_main_bus_service.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProNumSimLabApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProNumSimLabApi(wwtp_paas_main_bus_service.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = wwtp_paas_main_bus_service.Client.Configuration.MergeConfigurations(
                wwtp_paas_main_bus_service.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = wwtp_paas_main_bus_service.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProNumSimLabApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ProNumSimLabApi(wwtp_paas_main_bus_service.Client.ISynchronousClient client,wwtp_paas_main_bus_service.Client.IAsynchronousClient asyncClient, wwtp_paas_main_bus_service.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = wwtp_paas_main_bus_service.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public wwtp_paas_main_bus_service.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public wwtp_paas_main_bus_service.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public wwtp_paas_main_bus_service.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public wwtp_paas_main_bus_service.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;SimResultsOutupt&gt;</returns>
        public Result<List<SimResultsOutupt>> ApiProNumSimLabSimResultsGet (string scenarioId = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<SimResultsOutupt>>> localVarResponse = ApiProNumSimLabSimResultsGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;SimResultsOutupt&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<SimResultsOutupt> >> ApiProNumSimLabSimResultsGetWithHttpInfo (string scenarioId = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<SimResultsOutupt> >>("/api/ProNumSimLab/SimResults", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiProNumSimLabSimResultsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;SimResultsOutupt&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<SimResultsOutupt>>> ApiProNumSimLabSimResultsGetAsync (string scenarioId = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<SimResultsOutupt>>> localVarResponse = await ApiProNumSimLabSimResultsGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案的出水水质结果数据 Get outlet water quality time-series result of a scenario 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;SimResultsOutupt&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<SimResultsOutupt>>>> ApiProNumSimLabSimResultsGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<SimResultsOutupt>>>("/api/ProNumSimLab/SimResults", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiProNumSimLabSimResultsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 生化池查询 Get biochemical pool config data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;QueryBiochemicaltanksOutput&gt;</returns>
        public Result<List<QueryBiochemicaltanksOutput>> ApiV2ConfigBiochemicaltanksGet (string productLine = default(string), string modelName = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryBiochemicaltanksOutput>>> localVarResponse = ApiV2ConfigBiochemicaltanksGetWithHttpInfo(productLine, modelName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 生化池查询 Get biochemical pool config data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryBiochemicaltanksOutput&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<QueryBiochemicaltanksOutput> >> ApiV2ConfigBiochemicaltanksGetWithHttpInfo (string productLine = default(string), string modelName = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ModelName", modelName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<QueryBiochemicaltanksOutput> >>("/api/v2/config/biochemicaltanks", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ConfigBiochemicaltanksGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 生化池查询 Get biochemical pool config data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;QueryBiochemicaltanksOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryBiochemicaltanksOutput>>> ApiV2ConfigBiochemicaltanksGetAsync (string productLine = default(string), string modelName = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryBiochemicaltanksOutput>>> localVarResponse = await ApiV2ConfigBiochemicaltanksGetAsyncWithHttpInfo(productLine, modelName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 生化池查询 Get biochemical pool config data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryBiochemicaltanksOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryBiochemicaltanksOutput>>>> ApiV2ConfigBiochemicaltanksGetAsyncWithHttpInfo (string productLine = default(string), string modelName = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ModelName", modelName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<QueryBiochemicaltanksOutput>>>("/api/v2/config/biochemicaltanks", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ConfigBiochemicaltanksGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>List&lt;QueryControlParamCompareOutput&gt;</returns>
        public Result<List<QueryControlParamCompareOutput>> ApiV2SimulationLabCompareControlParamPost (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryControlParamCompareOutput>>> localVarResponse = ApiV2SimulationLabCompareControlParamPostWithHttpInfo(queryControlParamCompareInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryControlParamCompareOutput&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<QueryControlParamCompareOutput> >> ApiV2SimulationLabCompareControlParamPostWithHttpInfo (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = queryControlParamCompareInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<QueryControlParamCompareOutput> >>("/api/v2/simulation-lab/compare/control-param", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabCompareControlParamPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>Task of List&lt;QueryControlParamCompareOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryControlParamCompareOutput>>> ApiV2SimulationLabCompareControlParamPostAsync (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryControlParamCompareOutput>>> localVarResponse = await ApiV2SimulationLabCompareControlParamPostAsyncWithHttpInfo(queryControlParamCompareInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 多方案控制参数对比 Get several scenarios&#39; control paramters for comparison 只有多个方案之间设置不同的参数才会返回 Only parameters with difference setting values among the scenarios will be returned
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryControlParamCompareInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryControlParamCompareOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryControlParamCompareOutput>>>> ApiV2SimulationLabCompareControlParamPostAsyncWithHttpInfo (QueryControlParamCompareInput queryControlParamCompareInput = default(QueryControlParamCompareInput))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = queryControlParamCompareInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<QueryControlParamCompareOutput>>>("/api/v2/simulation-lab/compare/control-param", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabCompareControlParamPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;QueryIndicatorStatisticOutput&gt;</returns>
        public Result<List<QueryIndicatorStatisticOutput>> ApiV2SimulationLabResultIndicatorStatisticGet (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryIndicatorStatisticOutput>>> localVarResponse = ApiV2SimulationLabResultIndicatorStatisticGetWithHttpInfo(scenarioId, productLine, tankNo, modelName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryIndicatorStatisticOutput&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<QueryIndicatorStatisticOutput> >> ApiV2SimulationLabResultIndicatorStatisticGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }
            if (tankNo != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "TankNo", tankNo));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ModelName", modelName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<QueryIndicatorStatisticOutput> >>("/api/v2/simulation-lab/result/indicator-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabResultIndicatorStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;QueryIndicatorStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryIndicatorStatisticOutput>>> ApiV2SimulationLabResultIndicatorStatisticGetAsync (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryIndicatorStatisticOutput>>> localVarResponse = await ApiV2SimulationLabResultIndicatorStatisticGetAsyncWithHttpInfo(scenarioId, productLine, tankNo, modelName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 单个工艺线单个生化池指标统计查询 Get scenario&#39;s statistic result of all the indicators on a certain biochemical pool of a specified product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="tankNo">生化池序号 biochemical pool index (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryIndicatorStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<QueryIndicatorStatisticOutput>>>> ApiV2SimulationLabResultIndicatorStatisticGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string tankNo = default(string), string modelName = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }
            if (tankNo != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "TankNo", tankNo));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ModelName", modelName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<QueryIndicatorStatisticOutput>>>("/api/v2/simulation-lab/result/indicator-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabResultIndicatorStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;EntireProcessWqOut&gt;</returns>
        public Result<List<EntireProcessWqOut>> ApiV2SimulationLabResultTsByProductlineGet (string scenarioId = default(string), string productLine = default(string), string modelName = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<EntireProcessWqOut>>> localVarResponse = ApiV2SimulationLabResultTsByProductlineGetWithHttpInfo(scenarioId, productLine, modelName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;EntireProcessWqOut&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<EntireProcessWqOut> >> ApiV2SimulationLabResultTsByProductlineGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string modelName = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ModelName", modelName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<EntireProcessWqOut> >>("/api/v2/simulation-lab/result/ts-by-productline", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabResultTsByProductlineGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;EntireProcessWqOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<EntireProcessWqOut>>> ApiV2SimulationLabResultTsByProductlineGetAsync (string scenarioId = default(string), string productLine = default(string), string modelName = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<EntireProcessWqOut>>> localVarResponse = await ApiV2SimulationLabResultTsByProductlineGetAsyncWithHttpInfo(scenarioId, productLine, modelName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 单个工艺线水质全流程查询 Get scenario&#39;s water quality entire process result data of a certain product line 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;EntireProcessWqOut&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<EntireProcessWqOut>>>> ApiV2SimulationLabResultTsByProductlineGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string), string modelName = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ModelName", modelName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<EntireProcessWqOut>>>("/api/v2/simulation-lab/result/ts-by-productline", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabResultTsByProductlineGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2SimulationLabScenarioDeletePost (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2SimulationLabScenarioDeletePostWithHttpInfo(deleteScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< Object >> ApiV2SimulationLabScenarioDeletePostWithHttpInfo (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = deleteScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v2/simulation-lab/scenario/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioDeletePostAsync (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2SimulationLabScenarioDeletePostAsyncWithHttpInfo(deleteScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据ID删除方案，同时删除方案相关的设置数据 Delete scenario as well as its corresponding setting data by scenario ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioDeletePostAsyncWithHttpInfo (DeleteScenarioInput deleteScenarioInput = default(DeleteScenarioInput))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = deleteScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/simulation-lab/scenario/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>QueryInletDataOutput</returns>
        public Result<QueryInletDataOutput> ApiV2SimulationLabScenarioInletDataGet (string scenarioId = default(string), string inlet = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<QueryInletDataOutput>> localVarResponse = ApiV2SimulationLabScenarioInletDataGetWithHttpInfo(scenarioId, inlet);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>ApiResponse of QueryInletDataOutput</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< QueryInletDataOutput >> ApiV2SimulationLabScenarioInletDataGetWithHttpInfo (string scenarioId = default(string), string inlet = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "Inlet", inlet));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< QueryInletDataOutput >>("/api/v2/simulation-lab/scenario/inlet-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>Task of QueryInletDataOutput</returns>
        public async System.Threading.Tasks.Task<Result<QueryInletDataOutput>> ApiV2SimulationLabScenarioInletDataGetAsync (string scenarioId = default(string), string inlet = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<QueryInletDataOutput>> localVarResponse = await ApiV2SimulationLabScenarioInletDataGetAsyncWithHttpInfo(scenarioId, inlet);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询方案进水数据 Get scenario&#39;s inlet time-series data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <returns>Task of ApiResponse (QueryInletDataOutput)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<QueryInletDataOutput>>> ApiV2SimulationLabScenarioInletDataGetAsyncWithHttpInfo (string scenarioId = default(string), string inlet = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "Inlet", inlet));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<QueryInletDataOutput>>("/api/v2/simulation-lab/scenario/inlet-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2SimulationLabScenarioInletDataSavePost (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2SimulationLabScenarioInletDataSavePostWithHttpInfo(saveInletDataInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< Object >> ApiV2SimulationLabScenarioInletDataSavePostWithHttpInfo (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = saveInletDataInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v2/simulation-lab/scenario/inlet-data/save", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataSavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioInletDataSavePostAsync (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2SimulationLabScenarioInletDataSavePostAsyncWithHttpInfo(saveInletDataInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 保存进水数据到方案（入数据库） Save inlet time-series data of a scenario in database 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveInletDataInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioInletDataSavePostAsyncWithHttpInfo (List<SaveInletDataInput> saveInletDataInput = default(List<SaveInletDataInput>))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = saveInletDataInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/simulation-lab/scenario/inlet-data/save", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataSavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template. 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        public void ApiV2SimulationLabScenarioInletDataTemplateDownloadPost ()
        {
             ApiV2SimulationLabScenarioInletDataTemplateDownloadPostWithHttpInfo();
        }

        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template. 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> ApiV2SimulationLabScenarioInletDataTemplateDownloadPostWithHttpInfo ()
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Post<Result<Object>>("/api/v2/simulation-lab/scenario/inlet-data-template/download", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataTemplateDownloadPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template. 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV2SimulationLabScenarioInletDataTemplateDownloadPostAsync ()
        {
             await ApiV2SimulationLabScenarioInletDataTemplateDownloadPostAsyncWithHttpInfo();

        }

        /// <summary>
        /// 进水点文件模板下载 Download the inlet time-series data excel file template. 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioInletDataTemplateDownloadPostAsyncWithHttpInfo ()
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/simulation-lab/scenario/inlet-data-template/download", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataTemplateDownloadPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>List&lt;SaveInletDataInput&gt;</returns>
        public Result<List<SaveInletDataInput>> ApiV2SimulationLabScenarioInletDataTemplateUploadPost (System.IO.Stream excel = default(System.IO.Stream))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<SaveInletDataInput>>> localVarResponse = ApiV2SimulationLabScenarioInletDataTemplateUploadPostWithHttpInfo(excel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>ApiResponse of List&lt;SaveInletDataInput&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<SaveInletDataInput> >> ApiV2SimulationLabScenarioInletDataTemplateUploadPostWithHttpInfo (System.IO.Stream excel = default(System.IO.Stream))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (excel != null)
            {
                localVarRequestOptions.FileParameters.Add("Excel", excel);
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<SaveInletDataInput> >>("/api/v2/simulation-lab/scenario/inlet-data-template/upload", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataTemplateUploadPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>Task of List&lt;SaveInletDataInput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<SaveInletDataInput>>> ApiV2SimulationLabScenarioInletDataTemplateUploadPostAsync (System.IO.Stream excel = default(System.IO.Stream))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<SaveInletDataInput>>> localVarResponse = await ApiV2SimulationLabScenarioInletDataTemplateUploadPostAsyncWithHttpInfo(excel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 进水点数据文件excel上传 Upload inlet time-series data in an excel file 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="excel"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;SaveInletDataInput&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<SaveInletDataInput>>>> ApiV2SimulationLabScenarioInletDataTemplateUploadPostAsyncWithHttpInfo (System.IO.Stream excel = default(System.IO.Stream))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (excel != null)
            {
                localVarRequestOptions.FileParameters.Add("Excel", excel);
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<SaveInletDataInput>>>("/api/v2/simulation-lab/scenario/inlet-data-template/upload", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletDataTemplateUploadPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>QueryInletDataOutput</returns>
        public Result<QueryInletDataOutput> ApiV2SimulationLabScenarioInletScadaGet (string inlet = default(string), string startTime = default(string), string endTime = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<QueryInletDataOutput>> localVarResponse = ApiV2SimulationLabScenarioInletScadaGetWithHttpInfo(inlet, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of QueryInletDataOutput</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< QueryInletDataOutput >> ApiV2SimulationLabScenarioInletScadaGetWithHttpInfo (string inlet = default(string), string startTime = default(string), string endTime = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "Inlet", inlet));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< QueryInletDataOutput >>("/api/v2/simulation-lab/scenario/inlet/scada", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletScadaGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of QueryInletDataOutput</returns>
        public async System.Threading.Tasks.Task<Result<QueryInletDataOutput>> ApiV2SimulationLabScenarioInletScadaGetAsync (string inlet = default(string), string startTime = default(string), string endTime = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<QueryInletDataOutput>> localVarResponse = await ApiV2SimulationLabScenarioInletScadaGetAsyncWithHttpInfo(inlet, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询SCADA数据 Get inlet time-series data from SCADA 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (QueryInletDataOutput)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<QueryInletDataOutput>>> ApiV2SimulationLabScenarioInletScadaGetAsyncWithHttpInfo (string inlet = default(string), string startTime = default(string), string endTime = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "Inlet", inlet));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<QueryInletDataOutput>>("/api/v2/simulation-lab/scenario/inlet/scada", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioInletScadaGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>List&lt;ModelParam&gt;</returns>
        public Result<List<ModelParam>> ApiV2SimulationLabScenarioParamGet (string scenarioId = default(string), string productLine = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<ModelParam>>> localVarResponse = ApiV2SimulationLabScenarioParamGetWithHttpInfo(scenarioId, productLine);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelParam&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<ModelParam> >> ApiV2SimulationLabScenarioParamGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelParam> >>("/api/v2/simulation-lab/scenario/param", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioParamGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>Task of List&lt;ModelParam&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelParam>>> ApiV2SimulationLabScenarioParamGetAsync (string scenarioId = default(string), string productLine = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<ModelParam>>> localVarResponse = await ApiV2SimulationLabScenarioParamGetAsyncWithHttpInfo(scenarioId, productLine);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询方案参数设置 Get scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">工艺线代码 product line code (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelParam&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<ModelParam>>>> ApiV2SimulationLabScenarioParamGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "ProductLine", productLine));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelParam>>>("/api/v2/simulation-lab/scenario/param", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioParamGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2SimulationLabScenarioParamSavePost (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2SimulationLabScenarioParamSavePostWithHttpInfo(saveParamInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< Object >> ApiV2SimulationLabScenarioParamSavePostWithHttpInfo (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = saveParamInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v2/simulation-lab/scenario/param/save", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioParamSavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioParamSavePostAsync (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2SimulationLabScenarioParamSavePostAsyncWithHttpInfo(saveParamInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 保存方案参数设置 Save scenario&#39;s parameter setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="saveParamInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioParamSavePostAsyncWithHttpInfo (List<SaveParamInput> saveParamInput = default(List<SaveParamInput>))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = saveParamInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/simulation-lab/scenario/param/save", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioParamSavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ResultParam</returns>
        public Result<ResultParam> ApiV2SimulationLabScenarioResultSettingGet (string scenarioId = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<ResultParam>> localVarResponse = ApiV2SimulationLabScenarioResultSettingGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of ResultParam</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< ResultParam >> ApiV2SimulationLabScenarioResultSettingGetWithHttpInfo (string scenarioId = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ResultParam >>("/api/v2/simulation-lab/scenario/result-setting", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioResultSettingGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ResultParam</returns>
        public async System.Threading.Tasks.Task<Result<ResultParam>> ApiV2SimulationLabScenarioResultSettingGetAsync (string scenarioId = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<ResultParam>> localVarResponse = await ApiV2SimulationLabScenarioResultSettingGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询方案结果配置 Get scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (ResultParam)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<ResultParam>>> ApiV2SimulationLabScenarioResultSettingGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ResultParam>>("/api/v2/simulation-lab/scenario/result-setting", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioResultSettingGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2SimulationLabScenarioResultSettingSavePost (ResultParam resultParam = default(ResultParam))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2SimulationLabScenarioResultSettingSavePostWithHttpInfo(resultParam);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< Object >> ApiV2SimulationLabScenarioResultSettingSavePostWithHttpInfo (ResultParam resultParam = default(ResultParam))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = resultParam;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v2/simulation-lab/scenario/result-setting/save", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioResultSettingSavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2SimulationLabScenarioResultSettingSavePostAsync (ResultParam resultParam = default(ResultParam))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2SimulationLabScenarioResultSettingSavePostAsyncWithHttpInfo(resultParam);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 保存方案结果配置 Save scenario&#39;s result setting data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="resultParam"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiV2SimulationLabScenarioResultSettingSavePostAsyncWithHttpInfo (ResultParam resultParam = default(ResultParam))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = resultParam;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/simulation-lab/scenario/result-setting/save", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioResultSettingSavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;Guid&gt;</returns>
        public Result<List<Guid>> ApiV2SimulationLabScenarioScenariosForCompareGet (string scenarioId = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<Guid>>> localVarResponse = ApiV2SimulationLabScenarioScenariosForCompareGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;Guid&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<Guid> >> ApiV2SimulationLabScenarioScenariosForCompareGetWithHttpInfo (string scenarioId = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Guid> >>("/api/v2/simulation-lab/scenario/scenarios-for-compare", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioScenariosForCompareGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;Guid&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Guid>>> ApiV2SimulationLabScenarioScenariosForCompareGetAsync (string scenarioId = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<Guid>>> localVarResponse = await ApiV2SimulationLabScenarioScenariosForCompareGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询与指定方案的结果配置一样的方案列表 Get scenarios which can be compared with the specified scenario 能够进行对比的方案需满足两个条件，分别是时间范围一致和结果配置一致 scenarios that can be compared must have consistent time period and result setting
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Guid&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<Guid>>>> ApiV2SimulationLabScenarioScenariosForCompareGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Guid>>>("/api/v2/simulation-lab/scenario/scenarios-for-compare", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SimulationLabScenarioScenariosForCompareGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
