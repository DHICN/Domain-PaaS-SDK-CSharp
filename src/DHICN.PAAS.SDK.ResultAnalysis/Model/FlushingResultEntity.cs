/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ResultAnalysis.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ResultAnalysis.Model
{
    /// <summary>
    /// FlushingResultEntity
    /// </summary>
    [DataContract]
    public partial class FlushingResultEntity :  IEquatable<FlushingResultEntity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FlushingResultEntity" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="pipeResult">pipeResult.</param>
        /// <param name="outletResult">outletResult.</param>
        public FlushingResultEntity(ObjectId id = default(ObjectId), PipeResult pipeResult = default(PipeResult), OutletResult outletResult = default(OutletResult))
        {
            this.Id = id;
            this.PipeResult = pipeResult;
            this.OutletResult = outletResult;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public ObjectId Id { get; set; }

        /// <summary>
        /// Gets or Sets PipeResult
        /// </summary>
        [DataMember(Name="pipeResult", EmitDefaultValue=false)]
        public PipeResult PipeResult { get; set; }

        /// <summary>
        /// Gets or Sets OutletResult
        /// </summary>
        [DataMember(Name="outletResult", EmitDefaultValue=false)]
        public OutletResult OutletResult { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FlushingResultEntity {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PipeResult: ").Append(PipeResult).Append("\n");
            sb.Append("  OutletResult: ").Append(OutletResult).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FlushingResultEntity);
        }

        /// <summary>
        /// Returns true if FlushingResultEntity instances are equal
        /// </summary>
        /// <param name="input">Instance of FlushingResultEntity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FlushingResultEntity input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.PipeResult == input.PipeResult ||
                    (this.PipeResult != null &&
                    this.PipeResult.Equals(input.PipeResult))
                ) && 
                (
                    this.OutletResult == input.OutletResult ||
                    (this.OutletResult != null &&
                    this.OutletResult.Equals(input.OutletResult))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.PipeResult != null)
                    hashCode = hashCode * 59 + this.PipeResult.GetHashCode();
                if (this.OutletResult != null)
                    hashCode = hashCode * 59 + this.OutletResult.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
