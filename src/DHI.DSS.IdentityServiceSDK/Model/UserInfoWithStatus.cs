/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.IdentityServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.IdentityServiceSDK.Model
{
    /// <summary>
    /// UserInfoWithStatus
    /// </summary>
    [DataContract]
    public partial class UserInfoWithStatus :  IEquatable<UserInfoWithStatus>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserInfoWithStatus" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="userName">userName.</param>
        /// <param name="surName">surName.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="email">email.</param>
        /// <param name="roleInfos">roleInfos.</param>
        /// <param name="dhiTerminal">dhiTerminal.</param>
        /// <param name="online">online.</param>
        public UserInfoWithStatus(Guid id = default(Guid), string userName = default(string), string surName = default(string), string phoneNumber = default(string), string email = default(string), List<RoleInfo> roleInfos = default(List<RoleInfo>), List<DhiTerminal> dhiTerminal = default(List<DhiTerminal>), bool online = default(bool))
        {
            this.Id = id;
            this.UserName = userName;
            this.SurName = surName;
            this.PhoneNumber = phoneNumber;
            this.Email = email;
            this.RoleInfos = roleInfos;
            this.DhiTerminal = dhiTerminal;
            this.Online = online;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets UserName
        /// </summary>
        [DataMember(Name="userName", EmitDefaultValue=true)]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or Sets SurName
        /// </summary>
        [DataMember(Name="surName", EmitDefaultValue=true)]
        public string SurName { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="phoneNumber", EmitDefaultValue=true)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets RoleInfos
        /// </summary>
        [DataMember(Name="roleInfos", EmitDefaultValue=true)]
        public List<RoleInfo> RoleInfos { get; set; }

        /// <summary>
        /// Gets or Sets DhiTerminal
        /// </summary>
        [DataMember(Name="dhiTerminal", EmitDefaultValue=true)]
        public List<DhiTerminal> DhiTerminal { get; set; }

        /// <summary>
        /// Gets or Sets Online
        /// </summary>
        [DataMember(Name="online", EmitDefaultValue=false)]
        public bool Online { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserInfoWithStatus {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  SurName: ").Append(SurName).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  RoleInfos: ").Append(RoleInfos).Append("\n");
            sb.Append("  DhiTerminal: ").Append(DhiTerminal).Append("\n");
            sb.Append("  Online: ").Append(Online).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserInfoWithStatus);
        }

        /// <summary>
        /// Returns true if UserInfoWithStatus instances are equal
        /// </summary>
        /// <param name="input">Instance of UserInfoWithStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserInfoWithStatus input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.UserName == input.UserName ||
                    (this.UserName != null &&
                    this.UserName.Equals(input.UserName))
                ) && 
                (
                    this.SurName == input.SurName ||
                    (this.SurName != null &&
                    this.SurName.Equals(input.SurName))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.RoleInfos == input.RoleInfos ||
                    this.RoleInfos != null &&
                    input.RoleInfos != null &&
                    this.RoleInfos.SequenceEqual(input.RoleInfos)
                ) && 
                (
                    this.DhiTerminal == input.DhiTerminal ||
                    this.DhiTerminal != null &&
                    input.DhiTerminal != null &&
                    this.DhiTerminal.SequenceEqual(input.DhiTerminal)
                ) && 
                (
                    this.Online == input.Online ||
                    this.Online.Equals(input.Online)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.UserName != null)
                    hashCode = hashCode * 59 + this.UserName.GetHashCode();
                if (this.SurName != null)
                    hashCode = hashCode * 59 + this.SurName.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.RoleInfos != null)
                    hashCode = hashCode * 59 + this.RoleInfos.GetHashCode();
                if (this.DhiTerminal != null)
                    hashCode = hashCode * 59 + this.DhiTerminal.GetHashCode();
                hashCode = hashCode * 59 + this.Online.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
