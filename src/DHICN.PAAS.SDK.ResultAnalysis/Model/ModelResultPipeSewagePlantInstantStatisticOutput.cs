/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ResultAnalysis.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ResultAnalysis.Model
{
    /// <summary>
    /// 污水处理厂瞬时浓度统计
    /// </summary>
    [DataContract]
    public partial class ModelResultPipeSewagePlantInstantStatisticOutput :  IEquatable<ModelResultPipeSewagePlantInstantStatisticOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelResultPipeSewagePlantInstantStatisticOutput" /> class.
        /// </summary>
        /// <param name="assetID">资产id asset id.</param>
        /// <param name="assetName">污水处理厂名称 asset name.</param>
        /// <param name="wqStatisticInfos">瞬时浓度列表 list of instantaneous concentrations.</param>
        public ModelResultPipeSewagePlantInstantStatisticOutput(string assetID = default(string), string assetName = default(string), List<WqInstantStatisticInfo> wqStatisticInfos = default(List<WqInstantStatisticInfo>))
        {
            this.AssetID = assetID;
            this.AssetName = assetName;
            this.WqStatisticInfos = wqStatisticInfos;
        }
        
        /// <summary>
        /// 资产id asset id
        /// </summary>
        /// <value>资产id asset id</value>
        [DataMember(Name="assetID", EmitDefaultValue=true)]
        public string AssetID { get; set; }

        /// <summary>
        /// 污水处理厂名称 asset name
        /// </summary>
        /// <value>污水处理厂名称 asset name</value>
        [DataMember(Name="assetName", EmitDefaultValue=true)]
        public string AssetName { get; set; }

        /// <summary>
        /// 瞬时浓度列表 list of instantaneous concentrations
        /// </summary>
        /// <value>瞬时浓度列表 list of instantaneous concentrations</value>
        [DataMember(Name="wqStatisticInfos", EmitDefaultValue=true)]
        public List<WqInstantStatisticInfo> WqStatisticInfos { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelResultPipeSewagePlantInstantStatisticOutput {\n");
            sb.Append("  AssetID: ").Append(AssetID).Append("\n");
            sb.Append("  AssetName: ").Append(AssetName).Append("\n");
            sb.Append("  WqStatisticInfos: ").Append(WqStatisticInfos).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModelResultPipeSewagePlantInstantStatisticOutput);
        }

        /// <summary>
        /// Returns true if ModelResultPipeSewagePlantInstantStatisticOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of ModelResultPipeSewagePlantInstantStatisticOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelResultPipeSewagePlantInstantStatisticOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AssetID == input.AssetID ||
                    (this.AssetID != null &&
                    this.AssetID.Equals(input.AssetID))
                ) && 
                (
                    this.AssetName == input.AssetName ||
                    (this.AssetName != null &&
                    this.AssetName.Equals(input.AssetName))
                ) && 
                (
                    this.WqStatisticInfos == input.WqStatisticInfos ||
                    this.WqStatisticInfos != null &&
                    input.WqStatisticInfos != null &&
                    this.WqStatisticInfos.SequenceEqual(input.WqStatisticInfos)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AssetID != null)
                    hashCode = hashCode * 59 + this.AssetID.GetHashCode();
                if (this.AssetName != null)
                    hashCode = hashCode * 59 + this.AssetName.GetHashCode();
                if (this.WqStatisticInfos != null)
                    hashCode = hashCode * 59 + this.WqStatisticInfos.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
