/* 
 * message-center-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.Message.Center.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.Message.Center.Model
{
    /// <summary>
    /// 一键已读  &lt;br&gt;change user&#39;s all message status to read
    /// </summary>
    [DataContract]
    public partial class UpdateUserMsgStatus :  IEquatable<UpdateUserMsgStatus>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateUserMsgStatus" /> class.
        /// </summary>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id.</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type .</param>
        public UpdateUserMsgStatus(Guid receiverUserId = default(Guid), string msgType = default(string))
        {
            this.ReceiverUserId = receiverUserId;
            this.MsgType = msgType;
        }
        
        /// <summary>
        /// 接收人ID  &lt;br&gt;receiver id
        /// </summary>
        /// <value>接收人ID  &lt;br&gt;receiver id</value>
        [DataMember(Name="receiverUserId", EmitDefaultValue=false)]
        public Guid ReceiverUserId { get; set; }

        /// <summary>
        /// 消息类型  &lt;br&gt; message&#39;s type 
        /// </summary>
        /// <value>消息类型  &lt;br&gt; message&#39;s type </value>
        [DataMember(Name="msgType", EmitDefaultValue=true)]
        public string MsgType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UpdateUserMsgStatus {\n");
            sb.Append("  ReceiverUserId: ").Append(ReceiverUserId).Append("\n");
            sb.Append("  MsgType: ").Append(MsgType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateUserMsgStatus);
        }

        /// <summary>
        /// Returns true if UpdateUserMsgStatus instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateUserMsgStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateUserMsgStatus input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ReceiverUserId == input.ReceiverUserId ||
                    (this.ReceiverUserId != null &&
                    this.ReceiverUserId.Equals(input.ReceiverUserId))
                ) && 
                (
                    this.MsgType == input.MsgType ||
                    (this.MsgType != null &&
                    this.MsgType.Equals(input.MsgType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ReceiverUserId != null)
                    hashCode = hashCode * 59 + this.ReceiverUserId.GetHashCode();
                if (this.MsgType != null)
                    hashCode = hashCode * 59 + this.MsgType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
