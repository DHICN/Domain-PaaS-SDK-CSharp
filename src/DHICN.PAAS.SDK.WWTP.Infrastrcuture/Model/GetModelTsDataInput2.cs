/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.WWTP.Infrastrcuture.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.WWTP.Infrastrcuture.Model
{
    /// <summary>
    /// GetModelTsDataInput2
    /// </summary>
    [DataContract]
    public partial class GetModelTsDataInput2 :  IEquatable<GetModelTsDataInput2>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetModelTsDataInput2" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetModelTsDataInput2() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetModelTsDataInput2" /> class.
        /// </summary>
        /// <param name="scenarioId">scenarioId (required).</param>
        /// <param name="startTime">开始时间 start time.</param>
        /// <param name="endTime">结束时间 end time.</param>
        /// <param name="codeAssemblys">模型点位信息 model node codes (required).</param>
        public GetModelTsDataInput2(Guid scenarioId = default(Guid), DateTime startTime = default(DateTime), DateTime endTime = default(DateTime), List<CodeAssembly> codeAssemblys = default(List<CodeAssembly>))
        {
            this.ScenarioId = scenarioId;
            // to ensure "codeAssemblys" is required (not null)
            this.CodeAssemblys = codeAssemblys ?? throw new ArgumentNullException("codeAssemblys is a required property for GetModelTsDataInput2 and cannot be null");
            this.StartTime = startTime;
            this.EndTime = endTime;
        }
        
        /// <summary>
        /// Gets or Sets ScenarioId
        /// </summary>
        [DataMember(Name="scenarioId", EmitDefaultValue=false)]
        public Guid ScenarioId { get; set; }

        /// <summary>
        /// 开始时间 start time
        /// </summary>
        /// <value>开始时间 start time</value>
        [DataMember(Name="startTime", EmitDefaultValue=false)]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// 结束时间 end time
        /// </summary>
        /// <value>结束时间 end time</value>
        [DataMember(Name="endTime", EmitDefaultValue=false)]
        public DateTime EndTime { get; set; }

        /// <summary>
        /// 模型点位信息 model node codes
        /// </summary>
        /// <value>模型点位信息 model node codes</value>
        [DataMember(Name="codeAssemblys", EmitDefaultValue=false)]
        public List<CodeAssembly> CodeAssemblys { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetModelTsDataInput2 {\n");
            sb.Append("  ScenarioId: ").Append(ScenarioId).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  CodeAssemblys: ").Append(CodeAssemblys).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetModelTsDataInput2);
        }

        /// <summary>
        /// Returns true if GetModelTsDataInput2 instances are equal
        /// </summary>
        /// <param name="input">Instance of GetModelTsDataInput2 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetModelTsDataInput2 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ScenarioId == input.ScenarioId ||
                    (this.ScenarioId != null &&
                    this.ScenarioId.Equals(input.ScenarioId))
                ) && 
                (
                    this.StartTime == input.StartTime ||
                    (this.StartTime != null &&
                    this.StartTime.Equals(input.StartTime))
                ) && 
                (
                    this.EndTime == input.EndTime ||
                    (this.EndTime != null &&
                    this.EndTime.Equals(input.EndTime))
                ) && 
                (
                    this.CodeAssemblys == input.CodeAssemblys ||
                    this.CodeAssemblys != null &&
                    input.CodeAssemblys != null &&
                    this.CodeAssemblys.SequenceEqual(input.CodeAssemblys)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ScenarioId != null)
                    hashCode = hashCode * 59 + this.ScenarioId.GetHashCode();
                if (this.StartTime != null)
                    hashCode = hashCode * 59 + this.StartTime.GetHashCode();
                if (this.EndTime != null)
                    hashCode = hashCode * 59 + this.EndTime.GetHashCode();
                if (this.CodeAssemblys != null)
                    hashCode = hashCode * 59 + this.CodeAssemblys.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
