/* 
 * message-center-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.Message.Center.Client;
using DHICN.PAAS.SDK.Message.Center.Model;

namespace DHICN.PAAS.SDK.Message.Center.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IUserMessageCenterApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 取消标记 cancel mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeCancelMarkPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 取消标记 cancel mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeCancelMarkPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 删除用户消息 delete message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeDeleteMessagePost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除用户消息 delete message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeDeleteMessagePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 根据消息类型获取最新的一条未读消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>List&lt;UserMsgOutput&gt;</returns>
        Result<List<UserMsgOutput>> ApiV1MessageTypeGetLastestMessageByTypePost (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput));

        /// <summary>
        /// 根据消息类型获取最新的一条未读消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;UserMsgOutput&gt;</returns>
        ApiResponse<Result<List<UserMsgOutput>>> ApiV1MessageTypeGetLastestMessageByTypePostWithHttpInfo (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput));
        /// <summary>
        /// 获取最新的一条未读消息 get lastest message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>UserMsgOutput</returns>
        Result<UserMsgOutput> ApiV1MessageTypeGetLastestMessagePost (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput));

        /// <summary>
        /// 获取最新的一条未读消息 get lastest message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>ApiResponse of UserMsgOutput</returns>
        ApiResponse<Result<UserMsgOutput>> ApiV1MessageTypeGetLastestMessagePostWithHttpInfo (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput));
        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>int</returns>
        Result<int> ApiV1MessageTypeGetMarkCountGet (string receiverUserId, string msgType = default(string));

        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>ApiResponse of int</returns>
        ApiResponse<Result<int>> ApiV1MessageTypeGetMarkCountGetWithHttpInfo (string receiverUserId, string msgType = default(string));
        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>UserMsgOutputPage</returns>
        Result<UserMsgOutputPage> ApiV1MessageTypeGetMessageByStatusGet (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string));

        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>ApiResponse of UserMsgOutputPage</returns>
        ApiResponse<Result<UserMsgOutputPage>> ApiV1MessageTypeGetMessageByStatusGetWithHttpInfo (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string));
        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>int</returns>
        Result<int> ApiV1MessageTypeGetUnreadCountGet (string receiverUserId, string msgType = default(string));

        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>ApiResponse of int</returns>
        ApiResponse<Result<int>> ApiV1MessageTypeGetUnreadCountGetWithHttpInfo (string receiverUserId, string msgType = default(string));
        /// <summary>
        /// 指定消息为标记消息 mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeMarkMessagePost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 指定消息为标记消息 mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeMarkMessagePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 用户全部消息一键已读 read all message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeReadAllMessagePost (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus));

        /// <summary>
        /// 用户全部消息一键已读 read all message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeReadAllMessagePostWithHttpInfo (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus));
        /// <summary>
        /// 指定消息为已读 read message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeReadMessagePost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 指定消息为已读 read message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeReadMessagePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 发送消息 send message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeSendMessagePost (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>));

        /// <summary>
        /// 发送消息 send message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeSendMessagePostWithHttpInfo (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IUserMessageCenterApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 取消标记 cancel mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeCancelMarkPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 取消标记 cancel mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeCancelMarkPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 删除用户消息 delete message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeDeleteMessagePostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除用户消息 delete message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeDeleteMessagePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 根据消息类型获取最新的一条未读消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>Task of List&lt;UserMsgOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<UserMsgOutput>>> ApiV1MessageTypeGetLastestMessageByTypePostAsync (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput));

        /// <summary>
        /// 根据消息类型获取最新的一条未读消息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;UserMsgOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<UserMsgOutput>>>> ApiV1MessageTypeGetLastestMessageByTypePostAsyncWithHttpInfo (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput));
        /// <summary>
        /// 获取最新的一条未读消息 get lastest message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>Task of UserMsgOutput</returns>
        System.Threading.Tasks.Task<Result<UserMsgOutput>> ApiV1MessageTypeGetLastestMessagePostAsync (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput));

        /// <summary>
        /// 获取最新的一条未读消息 get lastest message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>Task of ApiResponse (UserMsgOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<UserMsgOutput>>> ApiV1MessageTypeGetLastestMessagePostAsyncWithHttpInfo (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput));
        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of int</returns>
        System.Threading.Tasks.Task<Result<int>> ApiV1MessageTypeGetMarkCountGetAsync (string receiverUserId, string msgType = default(string));

        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of ApiResponse (int)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<int>>> ApiV1MessageTypeGetMarkCountGetAsyncWithHttpInfo (string receiverUserId, string msgType = default(string));
        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>Task of UserMsgOutputPage</returns>
        System.Threading.Tasks.Task<Result<UserMsgOutputPage>> ApiV1MessageTypeGetMessageByStatusGetAsync (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string));

        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>Task of ApiResponse (UserMsgOutputPage)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<UserMsgOutputPage>>> ApiV1MessageTypeGetMessageByStatusGetAsyncWithHttpInfo (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string));
        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of int</returns>
        System.Threading.Tasks.Task<Result<int>> ApiV1MessageTypeGetUnreadCountGetAsync (string receiverUserId, string msgType = default(string));

        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of ApiResponse (int)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<int>>> ApiV1MessageTypeGetUnreadCountGetAsyncWithHttpInfo (string receiverUserId, string msgType = default(string));
        /// <summary>
        /// 指定消息为标记消息 mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeMarkMessagePostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 指定消息为标记消息 mark message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeMarkMessagePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 用户全部消息一键已读 read all message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeReadAllMessagePostAsync (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus));

        /// <summary>
        /// 用户全部消息一键已读 read all message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeReadAllMessagePostAsyncWithHttpInfo (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus));
        /// <summary>
        /// 指定消息为已读 read message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeReadMessagePostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 指定消息为已读 read message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeReadMessagePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 发送消息 send message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeSendMessagePostAsync (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>));

        /// <summary>
        /// 发送消息 send message
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeSendMessagePostAsyncWithHttpInfo (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IUserMessageCenterApi : IUserMessageCenterApiSync, IUserMessageCenterApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class UserMessageCenterApi : IUserMessageCenterApi
    {
        private DHICN.PAAS.SDK.Message.Center.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="UserMessageCenterApi"/> class.
        /// </summary>
        /// <returns></returns>
        public UserMessageCenterApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="UserMessageCenterApi"/> class.
        /// </summary>
        /// <returns></returns>
        public UserMessageCenterApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.Message.Center.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Message.Center.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.Message.Center.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="UserMessageCenterApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public UserMessageCenterApi(DHICN.PAAS.SDK.Message.Center.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.Message.Center.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Message.Center.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="UserMessageCenterApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public UserMessageCenterApi(DHICN.PAAS.SDK.Message.Center.Client.ISynchronousClient client,DHICN.PAAS.SDK.Message.Center.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.Message.Center.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.Message.Center.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 取消标记 cancel mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeCancelMarkPost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeCancelMarkPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 取消标记 cancel mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeCancelMarkPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/cancel-mark", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeCancelMarkPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 取消标记 cancel mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeCancelMarkPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeCancelMarkPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 取消标记 cancel mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeCancelMarkPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/cancel-mark", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeCancelMarkPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除用户消息 delete message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeDeleteMessagePost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeDeleteMessagePostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除用户消息 delete message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeDeleteMessagePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/delete-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeDeleteMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除用户消息 delete message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeDeleteMessagePostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeDeleteMessagePostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除用户消息 delete message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeDeleteMessagePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/delete-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeDeleteMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据消息类型获取最新的一条未读消息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>List&lt;UserMsgOutput&gt;</returns>
        public Result<List<UserMsgOutput>> ApiV1MessageTypeGetLastestMessageByTypePost (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<List<UserMsgOutput>>> localVarResponse = ApiV1MessageTypeGetLastestMessageByTypePostWithHttpInfo(lastestMessageByMsgTypeInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据消息类型获取最新的一条未读消息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;UserMsgOutput&gt;</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< List<UserMsgOutput> >> ApiV1MessageTypeGetLastestMessageByTypePostWithHttpInfo (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = lastestMessageByMsgTypeInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<UserMsgOutput> >>("/api/v1/message-type/get-lastest-message-by-type", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetLastestMessageByTypePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据消息类型获取最新的一条未读消息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>Task of List&lt;UserMsgOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<UserMsgOutput>>> ApiV1MessageTypeGetLastestMessageByTypePostAsync (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<List<UserMsgOutput>>> localVarResponse = await ApiV1MessageTypeGetLastestMessageByTypePostAsyncWithHttpInfo(lastestMessageByMsgTypeInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据消息类型获取最新的一条未读消息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="lastestMessageByMsgTypeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;UserMsgOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<List<UserMsgOutput>>>> ApiV1MessageTypeGetLastestMessageByTypePostAsyncWithHttpInfo (LastestMessageByMsgTypeInput lastestMessageByMsgTypeInput = default(LastestMessageByMsgTypeInput))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = lastestMessageByMsgTypeInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<UserMsgOutput>>>("/api/v1/message-type/get-lastest-message-by-type", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetLastestMessageByTypePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取最新的一条未读消息 get lastest message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>UserMsgOutput</returns>
        public Result<UserMsgOutput> ApiV1MessageTypeGetLastestMessagePost (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<UserMsgOutput>> localVarResponse = ApiV1MessageTypeGetLastestMessagePostWithHttpInfo(getLastestMessageInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取最新的一条未读消息 get lastest message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>ApiResponse of UserMsgOutput</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< UserMsgOutput >> ApiV1MessageTypeGetLastestMessagePostWithHttpInfo (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = getLastestMessageInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< UserMsgOutput >>("/api/v1/message-type/get-lastest-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetLastestMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取最新的一条未读消息 get lastest message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>Task of UserMsgOutput</returns>
        public async System.Threading.Tasks.Task<Result<UserMsgOutput>> ApiV1MessageTypeGetLastestMessagePostAsync (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<UserMsgOutput>> localVarResponse = await ApiV1MessageTypeGetLastestMessagePostAsyncWithHttpInfo(getLastestMessageInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取最新的一条未读消息 get lastest message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getLastestMessageInput"> (optional)</param>
        /// <returns>Task of ApiResponse (UserMsgOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<UserMsgOutput>>> ApiV1MessageTypeGetLastestMessagePostAsyncWithHttpInfo (GetLastestMessageInput getLastestMessageInput = default(GetLastestMessageInput))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = getLastestMessageInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<UserMsgOutput>>("/api/v1/message-type/get-lastest-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetLastestMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>int</returns>
        public Result<int> ApiV1MessageTypeGetMarkCountGet (string receiverUserId, string msgType = default(string))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<int>> localVarResponse = ApiV1MessageTypeGetMarkCountGetWithHttpInfo(receiverUserId, msgType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>ApiResponse of int</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< int >> ApiV1MessageTypeGetMarkCountGetWithHttpInfo (string receiverUserId, string msgType = default(string))
        {
            // verify the required parameter 'receiverUserId' is set
            if (receiverUserId == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'receiverUserId' when calling UserMessageCenterApi->ApiV1MessageTypeGetMarkCountGet");

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "ReceiverUserId", receiverUserId));
            if (msgType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "MsgType", msgType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< int >>("/api/v1/message-type/get-mark-count", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetMarkCountGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of int</returns>
        public async System.Threading.Tasks.Task<Result<int>> ApiV1MessageTypeGetMarkCountGetAsync (string receiverUserId, string msgType = default(string))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<int>> localVarResponse = await ApiV1MessageTypeGetMarkCountGetAsyncWithHttpInfo(receiverUserId, msgType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取用户标记消息数量 get user&#39;s remark message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of ApiResponse (int)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<int>>> ApiV1MessageTypeGetMarkCountGetAsyncWithHttpInfo (string receiverUserId, string msgType = default(string))
        {
            // verify the required parameter 'receiverUserId' is set
            if (receiverUserId == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'receiverUserId' when calling UserMessageCenterApi->ApiV1MessageTypeGetMarkCountGet");


            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "ReceiverUserId", receiverUserId));
            if (msgType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "MsgType", msgType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<int>>("/api/v1/message-type/get-mark-count", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetMarkCountGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>UserMsgOutputPage</returns>
        public Result<UserMsgOutputPage> ApiV1MessageTypeGetMessageByStatusGet (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<UserMsgOutputPage>> localVarResponse = ApiV1MessageTypeGetMessageByStatusGetWithHttpInfo(receiverUserId, level, isRead, isMark, pageIndex, pageSize, keyWords);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>ApiResponse of UserMsgOutputPage</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< UserMsgOutputPage >> ApiV1MessageTypeGetMessageByStatusGetWithHttpInfo (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string))
        {
            // verify the required parameter 'receiverUserId' is set
            if (receiverUserId == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'receiverUserId' when calling UserMessageCenterApi->ApiV1MessageTypeGetMessageByStatusGet");

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "ReceiverUserId", receiverUserId));
            if (level != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "Level", level));
            }
            if (isRead != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "IsRead", isRead));
            }
            if (isMark != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "IsMark", isMark));
            }
            if (pageIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageIndex", pageIndex));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageSize", pageSize));
            }
            if (keyWords != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "KeyWords", keyWords));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< UserMsgOutputPage >>("/api/v1/message-type/get-message-by-status", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetMessageByStatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>Task of UserMsgOutputPage</returns>
        public async System.Threading.Tasks.Task<Result<UserMsgOutputPage>> ApiV1MessageTypeGetMessageByStatusGetAsync (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<UserMsgOutputPage>> localVarResponse = await ApiV1MessageTypeGetMessageByStatusGetAsyncWithHttpInfo(receiverUserId, level, isRead, isMark, pageIndex, pageSize, keyWords);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取用户消息-已读/未读/标记/全部 get user&#39;s message by status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="level"> (optional)</param>
        /// <param name="isRead">是否已读  &lt;br&gt; whether the message has been read  (optional)</param>
        /// <param name="isMark">是否已标记  &lt;br&gt; whether the message has been remark  (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <param name="keyWords"> (optional)</param>
        /// <returns>Task of ApiResponse (UserMsgOutputPage)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<UserMsgOutputPage>>> ApiV1MessageTypeGetMessageByStatusGetAsyncWithHttpInfo (string receiverUserId, int? level = default(int?), string isRead = default(string), string isMark = default(string), int? pageIndex = default(int?), int? pageSize = default(int?), string keyWords = default(string))
        {
            // verify the required parameter 'receiverUserId' is set
            if (receiverUserId == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'receiverUserId' when calling UserMessageCenterApi->ApiV1MessageTypeGetMessageByStatusGet");


            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "ReceiverUserId", receiverUserId));
            if (level != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "Level", level));
            }
            if (isRead != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "IsRead", isRead));
            }
            if (isMark != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "IsMark", isMark));
            }
            if (pageIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageIndex", pageIndex));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageSize", pageSize));
            }
            if (keyWords != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "KeyWords", keyWords));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<UserMsgOutputPage>>("/api/v1/message-type/get-message-by-status", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetMessageByStatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>int</returns>
        public Result<int> ApiV1MessageTypeGetUnreadCountGet (string receiverUserId, string msgType = default(string))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<int>> localVarResponse = ApiV1MessageTypeGetUnreadCountGetWithHttpInfo(receiverUserId, msgType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>ApiResponse of int</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< int >> ApiV1MessageTypeGetUnreadCountGetWithHttpInfo (string receiverUserId, string msgType = default(string))
        {
            // verify the required parameter 'receiverUserId' is set
            if (receiverUserId == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'receiverUserId' when calling UserMessageCenterApi->ApiV1MessageTypeGetUnreadCountGet");

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "ReceiverUserId", receiverUserId));
            if (msgType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "MsgType", msgType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< int >>("/api/v1/message-type/get-unread-count", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetUnreadCountGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of int</returns>
        public async System.Threading.Tasks.Task<Result<int>> ApiV1MessageTypeGetUnreadCountGetAsync (string receiverUserId, string msgType = default(string))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<int>> localVarResponse = await ApiV1MessageTypeGetUnreadCountGetAsyncWithHttpInfo(receiverUserId, msgType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取用户未读消息数量 get user&#39;s unread message count 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="receiverUserId">接收人ID  &lt;br&gt;receiver id</param>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type  (optional)</param>
        /// <returns>Task of ApiResponse (int)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<int>>> ApiV1MessageTypeGetUnreadCountGetAsyncWithHttpInfo (string receiverUserId, string msgType = default(string))
        {
            // verify the required parameter 'receiverUserId' is set
            if (receiverUserId == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'receiverUserId' when calling UserMessageCenterApi->ApiV1MessageTypeGetUnreadCountGet");


            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "ReceiverUserId", receiverUserId));
            if (msgType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "MsgType", msgType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<int>>("/api/v1/message-type/get-unread-count", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetUnreadCountGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定消息为标记消息 mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeMarkMessagePost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeMarkMessagePostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 指定消息为标记消息 mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeMarkMessagePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/mark-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeMarkMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定消息为标记消息 mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeMarkMessagePostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeMarkMessagePostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 指定消息为标记消息 mark message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeMarkMessagePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/mark-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeMarkMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 用户全部消息一键已读 read all message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeReadAllMessagePost (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeReadAllMessagePostWithHttpInfo(updateUserMsgStatus);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 用户全部消息一键已读 read all message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeReadAllMessagePostWithHttpInfo (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateUserMsgStatus;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/read-all-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeReadAllMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 用户全部消息一键已读 read all message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeReadAllMessagePostAsync (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeReadAllMessagePostAsyncWithHttpInfo(updateUserMsgStatus);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 用户全部消息一键已读 read all message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateUserMsgStatus"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeReadAllMessagePostAsyncWithHttpInfo (UpdateUserMsgStatus updateUserMsgStatus = default(UpdateUserMsgStatus))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateUserMsgStatus;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/read-all-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeReadAllMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定消息为已读 read message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeReadMessagePost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeReadMessagePostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 指定消息为已读 read message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeReadMessagePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/read-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeReadMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定消息为已读 read message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeReadMessagePostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeReadMessagePostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 指定消息为已读 read message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeReadMessagePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/read-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeReadMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 发送消息 send message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeSendMessagePost (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeSendMessagePostWithHttpInfo(addUserMsg);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 发送消息 send message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeSendMessagePostWithHttpInfo (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addUserMsg;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/send-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeSendMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 发送消息 send message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeSendMessagePostAsync (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeSendMessagePostAsyncWithHttpInfo(addUserMsg);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 发送消息 send message 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addUserMsg"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeSendMessagePostAsyncWithHttpInfo (List<AddUserMsg> addUserMsg = default(List<AddUserMsg>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addUserMsg;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/send-message", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeSendMessagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
