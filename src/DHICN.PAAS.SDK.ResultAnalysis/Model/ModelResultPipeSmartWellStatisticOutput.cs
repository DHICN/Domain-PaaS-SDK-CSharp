/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ResultAnalysis.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ResultAnalysis.Model
{
    /// <summary>
    /// 智能分流井运行统计
    /// </summary>
    [DataContract]
    public partial class ModelResultPipeSmartWellStatisticOutput :  IEquatable<ModelResultPipeSmartWellStatisticOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelResultPipeSmartWellStatisticOutput" /> class.
        /// </summary>
        /// <param name="smartWellValveTS">管网排河阀排污阀统计列表 statistical list of valves of pipe network.</param>
        public ModelResultPipeSmartWellStatisticOutput(List<SmartWellValveTsData> smartWellValveTS = default(List<SmartWellValveTsData>))
        {
            this.SmartWellValveTS = smartWellValveTS;
        }
        
        /// <summary>
        /// 管网排河阀排污阀统计列表 statistical list of valves of pipe network
        /// </summary>
        /// <value>管网排河阀排污阀统计列表 statistical list of valves of pipe network</value>
        [DataMember(Name="smartWellValveTS", EmitDefaultValue=true)]
        public List<SmartWellValveTsData> SmartWellValveTS { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ModelResultPipeSmartWellStatisticOutput {\n");
            sb.Append("  SmartWellValveTS: ").Append(SmartWellValveTS).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ModelResultPipeSmartWellStatisticOutput);
        }

        /// <summary>
        /// Returns true if ModelResultPipeSmartWellStatisticOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of ModelResultPipeSmartWellStatisticOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ModelResultPipeSmartWellStatisticOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SmartWellValveTS == input.SmartWellValveTS ||
                    this.SmartWellValveTS != null &&
                    input.SmartWellValveTS != null &&
                    this.SmartWellValveTS.SequenceEqual(input.SmartWellValveTS)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SmartWellValveTS != null)
                    hashCode = hashCode * 59 + this.SmartWellValveTS.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
