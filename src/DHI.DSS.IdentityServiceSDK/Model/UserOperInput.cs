/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.IdentityServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.IdentityServiceSDK.Model
{
    /// <summary>
    /// UserOperInput
    /// </summary>
    [DataContract]
    public partial class UserOperInput :  IEquatable<UserOperInput>, IValidatableObject
    {
        /// <summary>
        /// 0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) 
        /// </summary>
        /// <value>0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) </value>
        public enum StatusEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2

        }

        /// <summary>
        /// 0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) 
        /// </summary>
        /// <value>0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user) </value>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserOperInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UserOperInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserOperInput" /> class.
        /// </summary>
        /// <param name="userId">用户ID user id (required).</param>
        /// <param name="status">0-Normal(normal user) 1-Frozen(frozen user) 2-Cancelled(cancelled user)  (required).</param>
        public UserOperInput(Guid userId = default(Guid), StatusEnum status = default(StatusEnum))
        {
            this.UserId = userId;
            this.Status = status;
        }
        
        /// <summary>
        /// 用户ID user id
        /// </summary>
        /// <value>用户ID user id</value>
        [DataMember(Name="userId", EmitDefaultValue=false)]
        public Guid UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserOperInput {\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserOperInput);
        }

        /// <summary>
        /// Returns true if UserOperInput instances are equal
        /// </summary>
        /// <param name="input">Instance of UserOperInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserOperInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                hashCode = hashCode * 59 + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
