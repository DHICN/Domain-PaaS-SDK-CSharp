/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.WWTPPaasInfrastructureServiceSDK.Model
{
    /// <summary>
    /// QueryOnlineSourceDatasInput
    /// </summary>
    [DataContract]
    public partial class QueryOnlineSourceDatasInput :  IEquatable<QueryOnlineSourceDatasInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QueryOnlineSourceDatasInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected QueryOnlineSourceDatasInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="QueryOnlineSourceDatasInput" /> class.
        /// </summary>
        /// <param name="startTime">开始时间 start time (required).</param>
        /// <param name="endTime">结束时间 end time (required).</param>
        /// <param name="codes">点位编码 point codes.</param>
        public QueryOnlineSourceDatasInput(string startTime = default(string), string endTime = default(string), List<string> codes = default(List<string>))
        {
            // to ensure "startTime" is required (not null)
            this.StartTime = startTime ?? throw new ArgumentNullException("startTime is a required property for QueryOnlineSourceDatasInput and cannot be null");
            // to ensure "endTime" is required (not null)
            this.EndTime = endTime ?? throw new ArgumentNullException("endTime is a required property for QueryOnlineSourceDatasInput and cannot be null");
            this.Codes = codes;
        }
        
        /// <summary>
        /// 开始时间 start time
        /// </summary>
        /// <value>开始时间 start time</value>
        [DataMember(Name="startTime", EmitDefaultValue=false)]
        public string StartTime { get; set; }

        /// <summary>
        /// 结束时间 end time
        /// </summary>
        /// <value>结束时间 end time</value>
        [DataMember(Name="endTime", EmitDefaultValue=false)]
        public string EndTime { get; set; }

        /// <summary>
        /// 点位编码 point codes
        /// </summary>
        /// <value>点位编码 point codes</value>
        [DataMember(Name="codes", EmitDefaultValue=true)]
        public List<string> Codes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class QueryOnlineSourceDatasInput {\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  Codes: ").Append(Codes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QueryOnlineSourceDatasInput);
        }

        /// <summary>
        /// Returns true if QueryOnlineSourceDatasInput instances are equal
        /// </summary>
        /// <param name="input">Instance of QueryOnlineSourceDatasInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QueryOnlineSourceDatasInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StartTime == input.StartTime ||
                    (this.StartTime != null &&
                    this.StartTime.Equals(input.StartTime))
                ) && 
                (
                    this.EndTime == input.EndTime ||
                    (this.EndTime != null &&
                    this.EndTime.Equals(input.EndTime))
                ) && 
                (
                    this.Codes == input.Codes ||
                    this.Codes != null &&
                    input.Codes != null &&
                    this.Codes.SequenceEqual(input.Codes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StartTime != null)
                    hashCode = hashCode * 59 + this.StartTime.GetHashCode();
                if (this.EndTime != null)
                    hashCode = hashCode * 59 + this.EndTime.GetHashCode();
                if (this.Codes != null)
                    hashCode = hashCode * 59 + this.Codes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
