/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.Identity.Client;
using DHICN.PAAS.SDK.Identity.Model;

namespace DHICN.PAAS.SDK.Identity.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITenantManagerApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 初始化超级管理员 Initialize super administrator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        Result<Object> ApiAppTenantManagerInitSuperAdminPost ();

        /// <summary>
        /// 初始化超级管理员 Initialize super administrator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppTenantManagerInitSuperAdminPostWithHttpInfo ();
        /// <summary>
        /// 生成License数据 Generate licence data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>LicenseData</returns>
        Result<LicenseData> ApiAppTenantManagerLicenseDatasGet (int? tenantNumber = default(int?));

        /// <summary>
        /// 生成License数据 Generate licence data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>ApiResponse of LicenseData</returns>
        ApiResponse<Result<LicenseData>> ApiAppTenantManagerLicenseDatasGetWithHttpInfo (int? tenantNumber = default(int?));
        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        Result<Object> ApiAppTenantManagerRefreshTenantGet ();

        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppTenantManagerRefreshTenantGetWithHttpInfo ();
        /// <summary>
        /// 获取所有的系统 Get all the systems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;GuidStringKeyValue&gt;</returns>
        Result<List<GuidStringKeyValue>> ApiAppTenantManagerSystemsGet ();

        /// <summary>
        /// 获取所有的系统 Get all the systems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;GuidStringKeyValue&gt;</returns>
        ApiResponse<Result<List<GuidStringKeyValue>>> ApiAppTenantManagerSystemsGetWithHttpInfo ();
        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;GetSystemsOutput&gt;</returns>
        Result<List<GetSystemsOutput>> ApiAppTenantManagerSystemsWithTypeGet ();

        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;GetSystemsOutput&gt;</returns>
        ApiResponse<Result<List<GetSystemsOutput>>> ApiAppTenantManagerSystemsWithTypeGetWithHttpInfo ();
        /// <summary>
        /// 删除租户 Delete tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppTenantManagerTenantDelete (string id);

        /// <summary>
        /// 删除租户 Delete tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppTenantManagerTenantDeleteWithHttpInfo (string id);
        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>TenantPersonalizedInfoDto</returns>
        Result<TenantPersonalizedInfoDto> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGet (string tenantId);

        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>ApiResponse of TenantPersonalizedInfoDto</returns>
        ApiResponse<Result<TenantPersonalizedInfoDto>> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetWithHttpInfo (string tenantId);
        /// <summary>
        /// 添加租户 Add tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>Guid</returns>
        Result<Guid> ApiAppTenantManagerTenantPost (AddTenantInput addTenantInput = default(AddTenantInput));

        /// <summary>
        /// 添加租户 Add tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>ApiResponse of Guid</returns>
        ApiResponse<Result<Guid>> ApiAppTenantManagerTenantPostWithHttpInfo (AddTenantInput addTenantInput = default(AddTenantInput));
        /// <summary>
        /// 修改租户信息 Update tenant information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppTenantManagerTenantPut (UpdateTenantInput updateTenantInput = default(UpdateTenantInput));

        /// <summary>
        /// 修改租户信息 Update tenant information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppTenantManagerTenantPutWithHttpInfo (UpdateTenantInput updateTenantInput = default(UpdateTenantInput));
        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>List&lt;GetTenantsBySysOutput&gt;</returns>
        Result<List<GetTenantsBySysOutput>> ApiAppTenantManagerTenantsBySystemIdSystemIdGet (string systemId);

        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>ApiResponse of List&lt;GetTenantsBySysOutput&gt;</returns>
        ApiResponse<Result<List<GetTenantsBySysOutput>>> ApiAppTenantManagerTenantsBySystemIdSystemIdGetWithHttpInfo (string systemId);
        /// <summary>
        /// 查询租户列表 Query tenant list
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>List&lt;GetTenantsOutput&gt;</returns>
        Result<List<GetTenantsOutput>> ApiAppTenantManagerTenantsGet (string name = default(string), string systemId = default(string));

        /// <summary>
        /// 查询租户列表 Query tenant list
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>ApiResponse of List&lt;GetTenantsOutput&gt;</returns>
        ApiResponse<Result<List<GetTenantsOutput>>> ApiAppTenantManagerTenantsGetWithHttpInfo (string name = default(string), string systemId = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITenantManagerApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 初始化超级管理员 Initialize super administrator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerInitSuperAdminPostAsync ();

        /// <summary>
        /// 初始化超级管理员 Initialize super administrator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppTenantManagerInitSuperAdminPostAsyncWithHttpInfo ();
        /// <summary>
        /// 生成License数据 Generate licence data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>Task of LicenseData</returns>
        System.Threading.Tasks.Task<Result<LicenseData>> ApiAppTenantManagerLicenseDatasGetAsync (int? tenantNumber = default(int?));

        /// <summary>
        /// 生成License数据 Generate licence data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>Task of ApiResponse (LicenseData)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<LicenseData>>> ApiAppTenantManagerLicenseDatasGetAsyncWithHttpInfo (int? tenantNumber = default(int?));
        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerRefreshTenantGetAsync ();

        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppTenantManagerRefreshTenantGetAsyncWithHttpInfo ();
        /// <summary>
        /// 获取所有的系统 Get all the systems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;GuidStringKeyValue&gt;</returns>
        System.Threading.Tasks.Task<Result<List<GuidStringKeyValue>>> ApiAppTenantManagerSystemsGetAsync ();

        /// <summary>
        /// 获取所有的系统 Get all the systems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;GuidStringKeyValue&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<GuidStringKeyValue>>>> ApiAppTenantManagerSystemsGetAsyncWithHttpInfo ();
        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;GetSystemsOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<GetSystemsOutput>>> ApiAppTenantManagerSystemsWithTypeGetAsync ();

        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;GetSystemsOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<GetSystemsOutput>>>> ApiAppTenantManagerSystemsWithTypeGetAsyncWithHttpInfo ();
        /// <summary>
        /// 删除租户 Delete tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerTenantDeleteAsync (string id);

        /// <summary>
        /// 删除租户 Delete tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppTenantManagerTenantDeleteAsyncWithHttpInfo (string id);
        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>Task of TenantPersonalizedInfoDto</returns>
        System.Threading.Tasks.Task<Result<TenantPersonalizedInfoDto>> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetAsync (string tenantId);

        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>Task of ApiResponse (TenantPersonalizedInfoDto)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<TenantPersonalizedInfoDto>>> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetAsyncWithHttpInfo (string tenantId);
        /// <summary>
        /// 添加租户 Add tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>Task of Guid</returns>
        System.Threading.Tasks.Task<Result<Guid>> ApiAppTenantManagerTenantPostAsync (AddTenantInput addTenantInput = default(AddTenantInput));

        /// <summary>
        /// 添加租户 Add tenant
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Guid)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Guid>>> ApiAppTenantManagerTenantPostAsyncWithHttpInfo (AddTenantInput addTenantInput = default(AddTenantInput));
        /// <summary>
        /// 修改租户信息 Update tenant information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerTenantPutAsync (UpdateTenantInput updateTenantInput = default(UpdateTenantInput));

        /// <summary>
        /// 修改租户信息 Update tenant information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppTenantManagerTenantPutAsyncWithHttpInfo (UpdateTenantInput updateTenantInput = default(UpdateTenantInput));
        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>Task of List&lt;GetTenantsBySysOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<GetTenantsBySysOutput>>> ApiAppTenantManagerTenantsBySystemIdSystemIdGetAsync (string systemId);

        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>Task of ApiResponse (List&lt;GetTenantsBySysOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<GetTenantsBySysOutput>>>> ApiAppTenantManagerTenantsBySystemIdSystemIdGetAsyncWithHttpInfo (string systemId);
        /// <summary>
        /// 查询租户列表 Query tenant list
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of List&lt;GetTenantsOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<GetTenantsOutput>>> ApiAppTenantManagerTenantsGetAsync (string name = default(string), string systemId = default(string));

        /// <summary>
        /// 查询租户列表 Query tenant list
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;GetTenantsOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<GetTenantsOutput>>>> ApiAppTenantManagerTenantsGetAsyncWithHttpInfo (string name = default(string), string systemId = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITenantManagerApi : ITenantManagerApiSync, ITenantManagerApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TenantManagerApi : ITenantManagerApi
    {
        private DHICN.PAAS.SDK.Identity.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TenantManagerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TenantManagerApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TenantManagerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TenantManagerApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.Identity.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Identity.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.Identity.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TenantManagerApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TenantManagerApi(DHICN.PAAS.SDK.Identity.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.Identity.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Identity.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TenantManagerApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public TenantManagerApi(DHICN.PAAS.SDK.Identity.Client.ISynchronousClient client,DHICN.PAAS.SDK.Identity.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.Identity.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.Identity.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 初始化超级管理员 Initialize super administrator 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        public Result<Object> ApiAppTenantManagerInitSuperAdminPost ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppTenantManagerInitSuperAdminPostWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 初始化超级管理员 Initialize super administrator 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Object >> ApiAppTenantManagerInitSuperAdminPostWithHttpInfo ()
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/app/tenantManager/initSuperAdmin", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerInitSuperAdminPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 初始化超级管理员 Initialize super administrator 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerInitSuperAdminPostAsync ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppTenantManagerInitSuperAdminPostAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 初始化超级管理员 Initialize super administrator 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiAppTenantManagerInitSuperAdminPostAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/app/tenantManager/initSuperAdmin", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerInitSuperAdminPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 生成License数据 Generate licence data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>LicenseData</returns>
        public Result<LicenseData> ApiAppTenantManagerLicenseDatasGet (int? tenantNumber = default(int?))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<LicenseData>> localVarResponse = ApiAppTenantManagerLicenseDatasGetWithHttpInfo(tenantNumber);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 生成License数据 Generate licence data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>ApiResponse of LicenseData</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< LicenseData >> ApiAppTenantManagerLicenseDatasGetWithHttpInfo (int? tenantNumber = default(int?))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "TenantNumber", tenantNumber));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< LicenseData >>("/api/app/tenantManager/licenseDatas", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerLicenseDatasGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 生成License数据 Generate licence data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>Task of LicenseData</returns>
        public async System.Threading.Tasks.Task<Result<LicenseData>> ApiAppTenantManagerLicenseDatasGetAsync (int? tenantNumber = default(int?))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<LicenseData>> localVarResponse = await ApiAppTenantManagerLicenseDatasGetAsyncWithHttpInfo(tenantNumber);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 生成License数据 Generate licence data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantNumber">租户个数 tenant number (optional)</param>
        /// <returns>Task of ApiResponse (LicenseData)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<LicenseData>>> ApiAppTenantManagerLicenseDatasGetAsyncWithHttpInfo (int? tenantNumber = default(int?))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "TenantNumber", tenantNumber));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<LicenseData>>("/api/app/tenantManager/licenseDatas", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerLicenseDatasGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        public Result<Object> ApiAppTenantManagerRefreshTenantGet ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppTenantManagerRefreshTenantGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Object >> ApiAppTenantManagerRefreshTenantGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/app/tenantManager/refreshTenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerRefreshTenantGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerRefreshTenantGetAsync ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppTenantManagerRefreshTenantGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 刷新租户缓存 Refresh tenant cache 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiAppTenantManagerRefreshTenantGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/app/tenantManager/refreshTenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerRefreshTenantGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的系统 Get all the systems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;GuidStringKeyValue&gt;</returns>
        public Result<List<GuidStringKeyValue>> ApiAppTenantManagerSystemsGet ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GuidStringKeyValue>>> localVarResponse = ApiAppTenantManagerSystemsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有的系统 Get all the systems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;GuidStringKeyValue&gt;</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< List<GuidStringKeyValue> >> ApiAppTenantManagerSystemsGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<GuidStringKeyValue> >>("/api/app/tenantManager/systems", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerSystemsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的系统 Get all the systems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;GuidStringKeyValue&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<GuidStringKeyValue>>> ApiAppTenantManagerSystemsGetAsync ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GuidStringKeyValue>>> localVarResponse = await ApiAppTenantManagerSystemsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有的系统 Get all the systems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;GuidStringKeyValue&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GuidStringKeyValue>>>> ApiAppTenantManagerSystemsGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<GuidStringKeyValue>>>("/api/app/tenantManager/systems", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerSystemsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;GetSystemsOutput&gt;</returns>
        public Result<List<GetSystemsOutput>> ApiAppTenantManagerSystemsWithTypeGet ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetSystemsOutput>>> localVarResponse = ApiAppTenantManagerSystemsWithTypeGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;GetSystemsOutput&gt;</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< List<GetSystemsOutput> >> ApiAppTenantManagerSystemsWithTypeGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<GetSystemsOutput> >>("/api/app/tenantManager/systemsWithType", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerSystemsWithTypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;GetSystemsOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<GetSystemsOutput>>> ApiAppTenantManagerSystemsWithTypeGetAsync ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetSystemsOutput>>> localVarResponse = await ApiAppTenantManagerSystemsWithTypeGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有的系统详细信息 Get all the systems detailed information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;GetSystemsOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetSystemsOutput>>>> ApiAppTenantManagerSystemsWithTypeGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<GetSystemsOutput>>>("/api/app/tenantManager/systemsWithType", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerSystemsWithTypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除租户 Delete tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppTenantManagerTenantDelete (string id)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppTenantManagerTenantDeleteWithHttpInfo(id);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除租户 Delete tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Object >> ApiAppTenantManagerTenantDeleteWithHttpInfo (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'id' when calling TenantManagerApi->ApiAppTenantManagerTenantDelete");

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "Id", id));


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Result< Object >>("/api/app/tenantManager/tenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantDelete", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除租户 Delete tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerTenantDeleteAsync (string id)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppTenantManagerTenantDeleteAsyncWithHttpInfo(id);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除租户 Delete tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID id</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiAppTenantManagerTenantDeleteAsyncWithHttpInfo (string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'id' when calling TenantManagerApi->ApiAppTenantManagerTenantDelete");


            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "Id", id));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Result<Object>>("/api/app/tenantManager/tenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantDelete", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>TenantPersonalizedInfoDto</returns>
        public Result<TenantPersonalizedInfoDto> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGet (string tenantId)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<TenantPersonalizedInfoDto>> localVarResponse = ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetWithHttpInfo(tenantId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>ApiResponse of TenantPersonalizedInfoDto</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< TenantPersonalizedInfoDto >> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetWithHttpInfo (string tenantId)
        {
            // verify the required parameter 'tenantId' is set
            if (tenantId == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'tenantId' when calling TenantManagerApi->ApiAppTenantManagerTenantPersonalizedinfoTenantIdGet");

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("tenantId", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(tenantId)); // path parameter


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< TenantPersonalizedInfoDto >>("/api/app/tenantManager/tenantPersonalizedinfo/{tenantId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantPersonalizedinfoTenantIdGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>Task of TenantPersonalizedInfoDto</returns>
        public async System.Threading.Tasks.Task<Result<TenantPersonalizedInfoDto>> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetAsync (string tenantId)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<TenantPersonalizedInfoDto>> localVarResponse = await ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetAsyncWithHttpInfo(tenantId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取租户个性化信息 Get tenant personalized information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id</param>
        /// <returns>Task of ApiResponse (TenantPersonalizedInfoDto)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<TenantPersonalizedInfoDto>>> ApiAppTenantManagerTenantPersonalizedinfoTenantIdGetAsyncWithHttpInfo (string tenantId)
        {
            // verify the required parameter 'tenantId' is set
            if (tenantId == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'tenantId' when calling TenantManagerApi->ApiAppTenantManagerTenantPersonalizedinfoTenantIdGet");


            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("tenantId", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(tenantId)); // path parameter


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<TenantPersonalizedInfoDto>>("/api/app/tenantManager/tenantPersonalizedinfo/{tenantId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantPersonalizedinfoTenantIdGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加租户 Add tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>Guid</returns>
        public Result<Guid> ApiAppTenantManagerTenantPost (AddTenantInput addTenantInput = default(AddTenantInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Guid>> localVarResponse = ApiAppTenantManagerTenantPostWithHttpInfo(addTenantInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 添加租户 Add tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>ApiResponse of Guid</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Guid >> ApiAppTenantManagerTenantPostWithHttpInfo (AddTenantInput addTenantInput = default(AddTenantInput))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addTenantInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Guid >>("/api/app/tenantManager/tenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加租户 Add tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>Task of Guid</returns>
        public async System.Threading.Tasks.Task<Result<Guid>> ApiAppTenantManagerTenantPostAsync (AddTenantInput addTenantInput = default(AddTenantInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Guid>> localVarResponse = await ApiAppTenantManagerTenantPostAsyncWithHttpInfo(addTenantInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 添加租户 Add tenant 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addTenantInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Guid)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Guid>>> ApiAppTenantManagerTenantPostAsyncWithHttpInfo (AddTenantInput addTenantInput = default(AddTenantInput))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addTenantInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Guid>>("/api/app/tenantManager/tenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改租户信息 Update tenant information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppTenantManagerTenantPut (UpdateTenantInput updateTenantInput = default(UpdateTenantInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppTenantManagerTenantPutWithHttpInfo(updateTenantInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 修改租户信息 Update tenant information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Object >> ApiAppTenantManagerTenantPutWithHttpInfo (UpdateTenantInput updateTenantInput = default(UpdateTenantInput))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateTenantInput;


            // make the HTTP request
            var localVarResponse = this.Client.Put<Result< Object >>("/api/app/tenantManager/tenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantPut", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改租户信息 Update tenant information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppTenantManagerTenantPutAsync (UpdateTenantInput updateTenantInput = default(UpdateTenantInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppTenantManagerTenantPutAsyncWithHttpInfo(updateTenantInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 修改租户信息 Update tenant information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateTenantInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiAppTenantManagerTenantPutAsyncWithHttpInfo (UpdateTenantInput updateTenantInput = default(UpdateTenantInput))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateTenantInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PutAsync<Result<Object>>("/api/app/tenantManager/tenant", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantPut", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>List&lt;GetTenantsBySysOutput&gt;</returns>
        public Result<List<GetTenantsBySysOutput>> ApiAppTenantManagerTenantsBySystemIdSystemIdGet (string systemId)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetTenantsBySysOutput>>> localVarResponse = ApiAppTenantManagerTenantsBySystemIdSystemIdGetWithHttpInfo(systemId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>ApiResponse of List&lt;GetTenantsBySysOutput&gt;</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< List<GetTenantsBySysOutput> >> ApiAppTenantManagerTenantsBySystemIdSystemIdGetWithHttpInfo (string systemId)
        {
            // verify the required parameter 'systemId' is set
            if (systemId == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'systemId' when calling TenantManagerApi->ApiAppTenantManagerTenantsBySystemIdSystemIdGet");

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("systemId", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(systemId)); // path parameter


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<GetTenantsBySysOutput> >>("/api/app/tenantManager/tenantsBySystemId/{systemId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantsBySystemIdSystemIdGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>Task of List&lt;GetTenantsBySysOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<GetTenantsBySysOutput>>> ApiAppTenantManagerTenantsBySystemIdSystemIdGetAsync (string systemId)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetTenantsBySysOutput>>> localVarResponse = await ApiAppTenantManagerTenantsBySystemIdSystemIdGetAsyncWithHttpInfo(systemId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取系统下的租户 Get tenants by systerm id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId">系统ID system id</param>
        /// <returns>Task of ApiResponse (List&lt;GetTenantsBySysOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetTenantsBySysOutput>>>> ApiAppTenantManagerTenantsBySystemIdSystemIdGetAsyncWithHttpInfo (string systemId)
        {
            // verify the required parameter 'systemId' is set
            if (systemId == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'systemId' when calling TenantManagerApi->ApiAppTenantManagerTenantsBySystemIdSystemIdGet");


            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("systemId", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(systemId)); // path parameter


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<GetTenantsBySysOutput>>>("/api/app/tenantManager/tenantsBySystemId/{systemId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantsBySystemIdSystemIdGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询租户列表 Query tenant list 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>List&lt;GetTenantsOutput&gt;</returns>
        public Result<List<GetTenantsOutput>> ApiAppTenantManagerTenantsGet (string name = default(string), string systemId = default(string))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetTenantsOutput>>> localVarResponse = ApiAppTenantManagerTenantsGetWithHttpInfo(name, systemId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询租户列表 Query tenant list 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>ApiResponse of List&lt;GetTenantsOutput&gt;</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< List<GetTenantsOutput> >> ApiAppTenantManagerTenantsGetWithHttpInfo (string name = default(string), string systemId = default(string))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (name != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "Name", name));
            }
            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "SystemId", systemId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<GetTenantsOutput> >>("/api/app/tenantManager/tenants", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询租户列表 Query tenant list 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of List&lt;GetTenantsOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<GetTenantsOutput>>> ApiAppTenantManagerTenantsGetAsync (string name = default(string), string systemId = default(string))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetTenantsOutput>>> localVarResponse = await ApiAppTenantManagerTenantsGetAsyncWithHttpInfo(name, systemId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询租户列表 Query tenant list 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="name">租户名称 tenant name (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;GetTenantsOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GetTenantsOutput>>>> ApiAppTenantManagerTenantsGetAsyncWithHttpInfo (string name = default(string), string systemId = default(string))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (name != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "Name", name));
            }
            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "SystemId", systemId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<GetTenantsOutput>>>("/api/app/tenantManager/tenants", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTenantManagerTenantsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
