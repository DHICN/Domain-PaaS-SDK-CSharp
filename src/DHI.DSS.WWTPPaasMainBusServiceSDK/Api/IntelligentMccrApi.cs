/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHI.DSS.WWTPPaasMainBusServiceSDK.Client;
using DHI.DSS.WWTPPaasMainBusServiceSDK.Model;

namespace DHI.DSS.WWTPPaasMainBusServiceSDK.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentMccrApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>CdAdditionRateOutput</returns>
        Result<CdAdditionRateOutput> ApiV2IntelligentMccrAddRatesGet (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of CdAdditionRateOutput</returns>
        ApiResponse<Result<CdAdditionRateOutput>> ApiV2IntelligentMccrAddRatesGetWithHttpInfo (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2IntelligentMccrCalculateMccrDosagePost (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));

        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2IntelligentMccrCalculateMccrDosagePostWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));
        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;CatalysisBfOutput&gt;</returns>
        Result<List<CatalysisBfOutput>> ApiV2IntelligentMccrCatalysisBeforeAfterGet (string productLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;CatalysisBfOutput&gt;</returns>
        ApiResponse<Result<List<CatalysisBfOutput>>> ApiV2IntelligentMccrCatalysisBeforeAfterGetWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;CatalysisTankOutput&gt;</returns>
        Result<List<CatalysisTankOutput>> ApiV2IntelligentMccrCatalysisTankDataGet (string productLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;CatalysisTankOutput&gt;</returns>
        ApiResponse<Result<List<CatalysisTankOutput>>> ApiV2IntelligentMccrCatalysisTankDataGetWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns></returns>
        void ApiV2IntelligentMccrDailyStatisticsExportGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiV2IntelligentMccrDailyStatisticsExportGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;DosingStatisticDailysOutput&gt;</returns>
        Result<List<DosingStatisticDailysOutput>> ApiV2IntelligentMccrDailyStatisticsGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticDailysOutput&gt;</returns>
        ApiResponse<Result<List<DosingStatisticDailysOutput>>> ApiV2IntelligentMccrDailyStatisticsGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns></returns>
        void ApiV2IntelligentMccrDosingLogExportGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiV2IntelligentMccrDosingLogExportGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2IntelligentMccrPlcControlByProductLinePost (ExecutePlcInput executePlcInput = default(ExecutePlcInput));

        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2IntelligentMccrPlcControlByProductLinePostWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput));
        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2IntelligentMccrPlcControlGet (string currentTime = default(string));

        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2IntelligentMccrPlcControlGetWithHttpInfo (string currentTime = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentMccrApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of CdAdditionRateOutput</returns>
        System.Threading.Tasks.Task<Result<CdAdditionRateOutput>> ApiV2IntelligentMccrAddRatesGetAsync (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (CdAdditionRateOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<CdAdditionRateOutput>>> ApiV2IntelligentMccrAddRatesGetAsyncWithHttpInfo (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2IntelligentMccrCalculateMccrDosagePostAsync (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));

        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2IntelligentMccrCalculateMccrDosagePostAsyncWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));
        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;CatalysisBfOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<CatalysisBfOutput>>> ApiV2IntelligentMccrCatalysisBeforeAfterGetAsync (string productLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;CatalysisBfOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<CatalysisBfOutput>>>> ApiV2IntelligentMccrCatalysisBeforeAfterGetAsyncWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;CatalysisTankOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<CatalysisTankOutput>>> ApiV2IntelligentMccrCatalysisTankDataGetAsync (string productLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;CatalysisTankOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<CatalysisTankOutput>>>> ApiV2IntelligentMccrCatalysisTankDataGetAsyncWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV2IntelligentMccrDailyStatisticsExportGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2IntelligentMccrDailyStatisticsExportGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticDailysOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DosingStatisticDailysOutput>>> ApiV2IntelligentMccrDailyStatisticsGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticDailysOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DosingStatisticDailysOutput>>>> ApiV2IntelligentMccrDailyStatisticsGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV2IntelligentMccrDosingLogExportGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2IntelligentMccrDosingLogExportGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2IntelligentMccrPlcControlByProductLinePostAsync (ExecutePlcInput executePlcInput = default(ExecutePlcInput));

        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2IntelligentMccrPlcControlByProductLinePostAsyncWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput));
        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2IntelligentMccrPlcControlGetAsync (string currentTime = default(string));

        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2IntelligentMccrPlcControlGetAsyncWithHttpInfo (string currentTime = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentMccrApi : IIntelligentMccrApiSync, IIntelligentMccrApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class IntelligentMccrApi : IIntelligentMccrApi
    {
        private DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentMccrApi"/> class.
        /// </summary>
        /// <returns></returns>
        public IntelligentMccrApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentMccrApi"/> class.
        /// </summary>
        /// <returns></returns>
        public IntelligentMccrApi(String basePath)
        {
            this.Configuration = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasMainBusServiceSDK.Client.GlobalConfiguration.Instance,
                new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentMccrApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public IntelligentMccrApi(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasMainBusServiceSDK.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentMccrApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public IntelligentMccrApi(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ISynchronousClient client,DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IAsynchronousClient asyncClient, DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>CdAdditionRateOutput</returns>
        public Result<CdAdditionRateOutput> ApiV2IntelligentMccrAddRatesGet (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<CdAdditionRateOutput>> localVarResponse = ApiV2IntelligentMccrAddRatesGetWithHttpInfo(productionLine, category, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of CdAdditionRateOutput</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< CdAdditionRateOutput >> ApiV2IntelligentMccrAddRatesGetWithHttpInfo (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< CdAdditionRateOutput >>("/api/v2/intelligent-mccr/add-rates", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrAddRatesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of CdAdditionRateOutput</returns>
        public async System.Threading.Tasks.Task<Result<CdAdditionRateOutput>> ApiV2IntelligentMccrAddRatesGetAsync (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<CdAdditionRateOutput>> localVarResponse = await ApiV2IntelligentMccrAddRatesGetAsyncWithHttpInfo(productionLine, category, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取铁催化剂加药，或者双氧水加药的实际投加速率与计算投加速率 Get actual and calculated dosing rate data of iron catalysts or hydrogen peroxide 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (CdAdditionRateOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<CdAdditionRateOutput>>> ApiV2IntelligentMccrAddRatesGetAsyncWithHttpInfo (string productionLine = default(string), int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<CdAdditionRateOutput>>("/api/v2/intelligent-mccr/add-rates", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrAddRatesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2IntelligentMccrCalculateMccrDosagePost (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2IntelligentMccrCalculateMccrDosagePostWithHttpInfo(dosingParamSettingDto);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< Object >> ApiV2IntelligentMccrCalculateMccrDosagePostWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dosingParamSettingDto;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v2/intelligent-mccr/calculate-mccr-dosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrCalculateMccrDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2IntelligentMccrCalculateMccrDosagePostAsync (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2IntelligentMccrCalculateMccrDosagePostAsyncWithHttpInfo(dosingParamSettingDto);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 计算指定产线的MCCR加药量 calculate MCCR&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiV2IntelligentMccrCalculateMccrDosagePostAsyncWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dosingParamSettingDto;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/intelligent-mccr/calculate-mccr-dosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrCalculateMccrDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;CatalysisBfOutput&gt;</returns>
        public Result<List<CatalysisBfOutput>> ApiV2IntelligentMccrCatalysisBeforeAfterGet (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<CatalysisBfOutput>>> localVarResponse = ApiV2IntelligentMccrCatalysisBeforeAfterGetWithHttpInfo(productLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;CatalysisBfOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<CatalysisBfOutput> >> ApiV2IntelligentMccrCatalysisBeforeAfterGetWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<CatalysisBfOutput> >>("/api/v2/intelligent-mccr/catalysis-before-after", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrCatalysisBeforeAfterGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;CatalysisBfOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<CatalysisBfOutput>>> ApiV2IntelligentMccrCatalysisBeforeAfterGetAsync (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<CatalysisBfOutput>>> localVarResponse = await ApiV2IntelligentMccrCatalysisBeforeAfterGetAsyncWithHttpInfo(productLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取催化反应前后的浊度、电导 Get online turbidity and conductivity data before and after catalysis 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;CatalysisBfOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<CatalysisBfOutput>>>> ApiV2IntelligentMccrCatalysisBeforeAfterGetAsyncWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<CatalysisBfOutput>>>("/api/v2/intelligent-mccr/catalysis-before-after", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrCatalysisBeforeAfterGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;CatalysisTankOutput&gt;</returns>
        public Result<List<CatalysisTankOutput>> ApiV2IntelligentMccrCatalysisTankDataGet (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<CatalysisTankOutput>>> localVarResponse = ApiV2IntelligentMccrCatalysisTankDataGetWithHttpInfo(productLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;CatalysisTankOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<CatalysisTankOutput> >> ApiV2IntelligentMccrCatalysisTankDataGetWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<CatalysisTankOutput> >>("/api/v2/intelligent-mccr/catalysis-tank-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrCatalysisTankDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;CatalysisTankOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<CatalysisTankOutput>>> ApiV2IntelligentMccrCatalysisTankDataGetAsync (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<CatalysisTankOutput>>> localVarResponse = await ApiV2IntelligentMccrCatalysisTankDataGetAsyncWithHttpInfo(productLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取催化池的进水量、pH、ORP数据 Get online inflow, pH, ORP data in the catalysis pool 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productLine"> (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;CatalysisTankOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<CatalysisTankOutput>>>> ApiV2IntelligentMccrCatalysisTankDataGetAsyncWithHttpInfo (string productLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<CatalysisTankOutput>>>("/api/v2/intelligent-mccr/catalysis-tank-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrCatalysisTankDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns></returns>
        public void ApiV2IntelligentMccrDailyStatisticsExportGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             ApiV2IntelligentMccrDailyStatisticsExportGetWithHttpInfo(productionLine, startTime, endTime);
        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> ApiV2IntelligentMccrDailyStatisticsExportGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result<Object>>("/api/v2/intelligent-mccr/daily-statistics/export", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrDailyStatisticsExportGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV2IntelligentMccrDailyStatisticsExportGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             await ApiV2IntelligentMccrDailyStatisticsExportGetAsyncWithHttpInfo(productionLine, startTime, endTime);

        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiV2IntelligentMccrDailyStatisticsExportGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/v2/intelligent-mccr/daily-statistics/export", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrDailyStatisticsExportGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;DosingStatisticDailysOutput&gt;</returns>
        public Result<List<DosingStatisticDailysOutput>> ApiV2IntelligentMccrDailyStatisticsGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingStatisticDailysOutput>>> localVarResponse = ApiV2IntelligentMccrDailyStatisticsGetWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticDailysOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<DosingStatisticDailysOutput> >> ApiV2IntelligentMccrDailyStatisticsGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DosingStatisticDailysOutput> >>("/api/v2/intelligent-mccr/daily-statistics", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrDailyStatisticsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticDailysOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DosingStatisticDailysOutput>>> ApiV2IntelligentMccrDailyStatisticsGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingStatisticDailysOutput>>> localVarResponse = await ApiV2IntelligentMccrDailyStatisticsGetAsyncWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticDailysOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingStatisticDailysOutput>>>> ApiV2IntelligentMccrDailyStatisticsGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DosingStatisticDailysOutput>>>("/api/v2/intelligent-mccr/daily-statistics", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrDailyStatisticsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns></returns>
        public void ApiV2IntelligentMccrDosingLogExportGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             ApiV2IntelligentMccrDosingLogExportGetWithHttpInfo(productionLine, startTime, endTime);
        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> ApiV2IntelligentMccrDosingLogExportGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result<Object>>("/api/v2/intelligent-mccr/dosing-log/export", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrDosingLogExportGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV2IntelligentMccrDosingLogExportGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             await ApiV2IntelligentMccrDosingLogExportGetAsyncWithHttpInfo(productionLine, startTime, endTime);

        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">工艺线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiV2IntelligentMccrDosingLogExportGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/v2/intelligent-mccr/dosing-log/export", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrDosingLogExportGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2IntelligentMccrPlcControlByProductLinePost (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2IntelligentMccrPlcControlByProductLinePostWithHttpInfo(executePlcInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< Object >> ApiV2IntelligentMccrPlcControlByProductLinePostWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = executePlcInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v2/intelligent-mccr/plc-control-by-product-line", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrPlcControlByProductLinePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2IntelligentMccrPlcControlByProductLinePostAsync (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2IntelligentMccrPlcControlByProductLinePostAsyncWithHttpInfo(executePlcInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 执行指定产线的MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs for one product line 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiV2IntelligentMccrPlcControlByProductLinePostAsyncWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = executePlcInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/intelligent-mccr/plc-control-by-product-line", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrPlcControlByProductLinePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2IntelligentMccrPlcControlGet (string currentTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2IntelligentMccrPlcControlGetWithHttpInfo(currentTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< Object >> ApiV2IntelligentMccrPlcControlGetWithHttpInfo (string currentTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (currentTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "currentTime", currentTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/v2/intelligent-mccr/plc-control", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrPlcControlGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2IntelligentMccrPlcControlGetAsync (string currentTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2IntelligentMccrPlcControlGetAsyncWithHttpInfo(currentTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 执行MCCR加药plc控制，同时写入加药日志 Execute MCCR dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时刻 current time (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiV2IntelligentMccrPlcControlGetAsyncWithHttpInfo (string currentTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (currentTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "currentTime", currentTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/v2/intelligent-mccr/plc-control", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2IntelligentMccrPlcControlGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
