/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ResultAnalysis.Client;
using DHICN.PAAS.SDK.ResultAnalysis.Model;

namespace DHICN.PAAS.SDK.ResultAnalysis.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IM2DApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1Result2dByRangeTimePost (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1Result2dByRangeTimePostWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));
        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1Result2dByRangeTimeWithElementsPost (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1Result2dByRangeTimeWithElementsPostWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));
        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1Result2dByTimeGet (string time, string scenarioId, List<string> elementIds = default(List<string>));

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1Result2dByTimeGetWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>));
        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns></returns>
        void ApiV1Result2dByTimeStreamGet (string time, string scenarioId, List<string> elementIds = default(List<string>));

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiV1Result2dByTimeStreamGetWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>));
        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results
        /// </summary>
        /// <remarks>
        /// 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1Result2dDynamicGet (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>));

        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results
        /// </summary>
        /// <remarks>
        /// 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1Result2dDynamicGetWithHttpInfo (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>));
        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids
        /// </summary>
        /// <remarks>
        /// 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>List&lt;string&gt;</returns>
        Result<List<string>> ApiV1Result2dMuidsGet (string scenarioId);

        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids
        /// </summary>
        /// <remarks>
        /// 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>ApiResponse of List&lt;string&gt;</returns>
        ApiResponse<Result<List<string>>> ApiV1Result2dMuidsGetWithHttpInfo (string scenarioId);
        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results
        /// </summary>
        /// <remarks>
        /// 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns></returns>
        void ApiV1Result2dStaticStreamGet (string m2DStatisticType, string scenarioId);

        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results
        /// </summary>
        /// <remarks>
        /// 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiV1Result2dStaticStreamGetWithHttpInfo (string m2DStatisticType, string scenarioId);
        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell
        /// </summary>
        /// <remarks>
        /// 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>BaseTimeseriesOutput</returns>
        Result<BaseTimeseriesOutput> ApiV1Result2dTimeseriesGet (string m2DDataType, string elementID, string scenarioId);

        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell
        /// </summary>
        /// <remarks>
        /// 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        ApiResponse<Result<BaseTimeseriesOutput>> ApiV1Result2dTimeseriesGetWithHttpInfo (string m2DDataType, string elementID, string scenarioId);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IM2DApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dByRangeTimePostAsync (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dByRangeTimePostAsyncWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));
        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dByRangeTimeWithElementsPostAsync (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range
        /// </summary>
        /// <remarks>
        /// 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dByRangeTimeWithElementsPostAsyncWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput));
        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dByTimeGetAsync (string time, string scenarioId, List<string> elementIds = default(List<string>));

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dByTimeGetAsyncWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>));
        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV1Result2dByTimeStreamGetAsync (string time, string scenarioId, List<string> elementIds = default(List<string>));

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step
        /// </summary>
        /// <remarks>
        /// 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1Result2dByTimeStreamGetAsyncWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>));
        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results
        /// </summary>
        /// <remarks>
        /// 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dDynamicGetAsync (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>));

        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results
        /// </summary>
        /// <remarks>
        /// 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dDynamicGetAsyncWithHttpInfo (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>));
        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids
        /// </summary>
        /// <remarks>
        /// 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of List&lt;string&gt;</returns>
        System.Threading.Tasks.Task<Result<List<string>>> ApiV1Result2dMuidsGetAsync (string scenarioId);

        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids
        /// </summary>
        /// <remarks>
        /// 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of ApiResponse (List&lt;string&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<string>>>> ApiV1Result2dMuidsGetAsyncWithHttpInfo (string scenarioId);
        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results
        /// </summary>
        /// <remarks>
        /// 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV1Result2dStaticStreamGetAsync (string m2DStatisticType, string scenarioId);

        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results
        /// </summary>
        /// <remarks>
        /// 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1Result2dStaticStreamGetAsyncWithHttpInfo (string m2DStatisticType, string scenarioId);
        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell
        /// </summary>
        /// <remarks>
        /// 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1Result2dTimeseriesGetAsync (string m2DDataType, string elementID, string scenarioId);

        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell
        /// </summary>
        /// <remarks>
        /// 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1Result2dTimeseriesGetAsyncWithHttpInfo (string m2DDataType, string elementID, string scenarioId);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IM2DApi : IM2DApiSync, IM2DApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class M2DApi : IM2DApi
    {
        private DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="M2DApi"/> class.
        /// </summary>
        /// <returns></returns>
        public M2DApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="M2DApi"/> class.
        /// </summary>
        /// <returns></returns>
        public M2DApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="M2DApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public M2DApi(DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="M2DApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public M2DApi(DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient client,DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1Result2dByRangeTimePost (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1Result2dByRangeTimePostWithHttpInfo(m2DByRangeTimeInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1Result2dByRangeTimePostWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = m2DByRangeTimeInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< BaseDynamicOutput >>("/api/v1/result/2d/by-range-time", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByRangeTimePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dByRangeTimePostAsync (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1Result2dByRangeTimePostAsyncWithHttpInfo(m2DByRangeTimeInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dByRangeTimePostAsyncWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = m2DByRangeTimeInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<BaseDynamicOutput>>("/api/v1/result/2d/by-range-time", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByRangeTimePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1Result2dByRangeTimeWithElementsPost (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1Result2dByRangeTimeWithElementsPostWithHttpInfo(m2DByRangeTimeInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1Result2dByRangeTimeWithElementsPostWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = m2DByRangeTimeInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< BaseDynamicOutput >>("/api/v1/result/2d/by-range-time-with-elements", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByRangeTimeWithElementsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dByRangeTimeWithElementsPostAsync (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1Result2dByRangeTimeWithElementsPostAsyncWithHttpInfo(m2DByRangeTimeInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取时间段内的二维动态结果 Get 2D dynamic results for a specified time range 获取特定时间段内的二维动态结果，其中ElementIds用于进一步过滤结果，单次查询不能超过1000个网格，以减少单次访问返回的数据量 Get 2D dynamic results for a specified time range, and ElementIds must be used to filter the result to no more than 1000 elements, thus reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DByRangeTimeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dByRangeTimeWithElementsPostAsyncWithHttpInfo (M2DByRangeTimeInput m2DByRangeTimeInput = default(M2DByRangeTimeInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = m2DByRangeTimeInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<BaseDynamicOutput>>("/api/v1/result/2d/by-range-time-with-elements", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByRangeTimeWithElementsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1Result2dByTimeGet (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1Result2dByTimeGetWithHttpInfo(time, scenarioId, elementIds);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1Result2dByTimeGetWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
            // verify the required parameter 'time' is set
            if (time == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'time' when calling M2DApi->ApiV1Result2dByTimeGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dByTimeGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Time", time));
            if (elementIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "ElementIds", elementIds));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result/2d/by-time", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByTimeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dByTimeGetAsync (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1Result2dByTimeGetAsyncWithHttpInfo(time, scenarioId, elementIds);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dByTimeGetAsyncWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
            // verify the required parameter 'time' is set
            if (time == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'time' when calling M2DApi->ApiV1Result2dByTimeGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dByTimeGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Time", time));
            if (elementIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "ElementIds", elementIds));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result/2d/by-time", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByTimeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns></returns>
        public void ApiV1Result2dByTimeStreamGet (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
             ApiV1Result2dByTimeStreamGetWithHttpInfo(time, scenarioId, elementIds);
        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<Object>> ApiV1Result2dByTimeStreamGetWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
            // verify the required parameter 'time' is set
            if (time == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'time' when calling M2DApi->ApiV1Result2dByTimeStreamGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dByTimeStreamGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Time", time));
            if (elementIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "ElementIds", elementIds));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result<Object>>("/api/v1/result/2d/by-time/stream", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByTimeStreamGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV1Result2dByTimeStreamGetAsync (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
             await ApiV1Result2dByTimeStreamGetAsyncWithHttpInfo(time, scenarioId, elementIds);

        }

        /// <summary>
        /// 获取单个时刻的二维动态结果 Get 2D dynamic results of a single time step 获取单个时刻的二维动态结果，其中ElementIds可用于进一步过滤结果以减少单次访问返回的数据量，结果以文件流的形式返回 Get 2D dynamic results of a single time step, meanwhile element ids can be used to filter the result and reduce the data amount returned one time. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">结果查询的时刻 time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<Object>>> ApiV1Result2dByTimeStreamGetAsyncWithHttpInfo (string time, string scenarioId, List<string> elementIds = default(List<string>))
        {
            // verify the required parameter 'time' is set
            if (time == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'time' when calling M2DApi->ApiV1Result2dByTimeStreamGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dByTimeStreamGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Time", time));
            if (elementIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "ElementIds", elementIds));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/v1/result/2d/by-time/stream", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dByTimeStreamGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1Result2dDynamicGet (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1Result2dDynamicGetWithHttpInfo(m2DDataType, frequency, startTime, endTime, scenarioId, elementIds);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1Result2dDynamicGetWithHttpInfo (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>))
        {
            // verify the required parameter 'm2DDataType' is set
            if (m2DDataType == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'm2DDataType' when calling M2DApi->ApiV1Result2dDynamicGet");

            // verify the required parameter 'startTime' is set
            if (startTime == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'startTime' when calling M2DApi->ApiV1Result2dDynamicGet");

            // verify the required parameter 'endTime' is set
            if (endTime == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'endTime' when calling M2DApi->ApiV1Result2dDynamicGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "M2DDataType", m2DDataType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            if (elementIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "ElementIds", elementIds));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result/2d/dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1Result2dDynamicGetAsync (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1Result2dDynamicGetAsyncWithHttpInfo(m2DDataType, frequency, startTime, endTime, scenarioId, elementIds);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取二维动态结果 Get 2D dynamic results 已弃用，可使用by-time或by-range-time来替代 Use by-time or by-range-time instead.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="frequency">查询结果的时间频率 time frequency used to get result</param>
        /// <param name="startTime">查询结果的开始时间 start time used to get result</param>
        /// <param name="endTime">查询结果的结束时间 end time used to get result</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="elementIds">搜索的网格编号列表 search element ids or grid ids (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1Result2dDynamicGetAsyncWithHttpInfo (string m2DDataType, int frequency, string startTime, string endTime, string scenarioId, List<string> elementIds = default(List<string>))
        {
            // verify the required parameter 'm2DDataType' is set
            if (m2DDataType == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'm2DDataType' when calling M2DApi->ApiV1Result2dDynamicGet");

            // verify the required parameter 'startTime' is set
            if (startTime == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'startTime' when calling M2DApi->ApiV1Result2dDynamicGet");

            // verify the required parameter 'endTime' is set
            if (endTime == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'endTime' when calling M2DApi->ApiV1Result2dDynamicGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "M2DDataType", m2DDataType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            if (elementIds != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "ElementIds", elementIds));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result/2d/dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>List&lt;string&gt;</returns>
        public Result<List<string>> ApiV1Result2dMuidsGet (string scenarioId)
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<string>>> localVarResponse = ApiV1Result2dMuidsGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>ApiResponse of List&lt;string&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<string> >> ApiV1Result2dMuidsGetWithHttpInfo (string scenarioId)
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dMuidsGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<string> >>("/api/v1/result/2d/muids", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dMuidsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of List&lt;string&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<string>>> ApiV1Result2dMuidsGetAsync (string scenarioId)
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<string>>> localVarResponse = await ApiV1Result2dMuidsGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取有积水的二维网格的ID列表 Get 2d result model feature ids 获取所有有出现积水的网格ID列表（三角网格dfsu文件返回的是elementid，正交网格dfs2文件返回的是j,k）Get all element ids(for dfsu) or grid ids (for dfs2,format:j,k), water depth of which are above 0
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of ApiResponse (List&lt;string&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<string>>>> ApiV1Result2dMuidsGetAsyncWithHttpInfo (string scenarioId)
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dMuidsGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<string>>>("/api/v1/result/2d/muids", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dMuidsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns></returns>
        public void ApiV1Result2dStaticStreamGet (string m2DStatisticType, string scenarioId)
        {
             ApiV1Result2dStaticStreamGetWithHttpInfo(m2DStatisticType, scenarioId);
        }

        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<Object>> ApiV1Result2dStaticStreamGetWithHttpInfo (string m2DStatisticType, string scenarioId)
        {
            // verify the required parameter 'm2DStatisticType' is set
            if (m2DStatisticType == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'm2DStatisticType' when calling M2DApi->ApiV1Result2dStaticStreamGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dStaticStreamGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "M2DStatisticType", m2DStatisticType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result<Object>>("/api/v1/result/2d/static/stream", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dStaticStreamGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV1Result2dStaticStreamGetAsync (string m2DStatisticType, string scenarioId)
        {
             await ApiV1Result2dStaticStreamGetAsyncWithHttpInfo(m2DStatisticType, scenarioId);

        }

        /// <summary>
        /// 获取二维统计结果 Get 2D statistic results 获取二维网格上的统计结果，包括最大积水深度（单位：米）、积水历时（单位：小时）、最大内涝风险等，结果以文件流的形式返回 Get 2D statistic results including max water depth (unit: m), waterlogging duration (unit: hour), max flood risk, of a flood scenario, return statistic value for each grid. Result will be returned as file stream.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DStatisticType">二维统计结果类型 2D statistic type:  0-MaxWaterDepth;  1-FloodDuration;  2-FloodRisk;</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<Object>>> ApiV1Result2dStaticStreamGetAsyncWithHttpInfo (string m2DStatisticType, string scenarioId)
        {
            // verify the required parameter 'm2DStatisticType' is set
            if (m2DStatisticType == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'm2DStatisticType' when calling M2DApi->ApiV1Result2dStaticStreamGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dStaticStreamGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "M2DStatisticType", m2DStatisticType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/v1/result/2d/static/stream", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dStaticStreamGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>BaseTimeseriesOutput</returns>
        public Result<BaseTimeseriesOutput> ApiV1Result2dTimeseriesGet (string m2DDataType, string elementID, string scenarioId)
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = ApiV1Result2dTimeseriesGetWithHttpInfo(m2DDataType, elementID, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseTimeseriesOutput >> ApiV1Result2dTimeseriesGetWithHttpInfo (string m2DDataType, string elementID, string scenarioId)
        {
            // verify the required parameter 'm2DDataType' is set
            if (m2DDataType == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'm2DDataType' when calling M2DApi->ApiV1Result2dTimeseriesGet");

            // verify the required parameter 'elementID' is set
            if (elementID == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'elementID' when calling M2DApi->ApiV1Result2dTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dTimeseriesGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "M2DDataType", m2DDataType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ElementID", elementID));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseTimeseriesOutput >>("/api/v1/result/2d/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1Result2dTimeseriesGetAsync (string m2DDataType, string elementID, string scenarioId)
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = await ApiV1Result2dTimeseriesGetAsyncWithHttpInfo(m2DDataType, elementID, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取单个网格的时间序列结果 Get time series result on a single cell 获取单个网格上的水深时间序列结果数据 Get water depth time series result on a single mesh cell of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="m2DDataType">二维结果类型 2D result type:  0-WaterDepth</param>
        /// <param name="elementID">网格编号 element id or grid id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1Result2dTimeseriesGetAsyncWithHttpInfo (string m2DDataType, string elementID, string scenarioId)
        {
            // verify the required parameter 'm2DDataType' is set
            if (m2DDataType == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'm2DDataType' when calling M2DApi->ApiV1Result2dTimeseriesGet");

            // verify the required parameter 'elementID' is set
            if (elementID == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'elementID' when calling M2DApi->ApiV1Result2dTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling M2DApi->ApiV1Result2dTimeseriesGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "M2DDataType", m2DDataType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ElementID", elementID));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseTimeseriesOutput>>("/api/v1/result/2d/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1Result2dTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
