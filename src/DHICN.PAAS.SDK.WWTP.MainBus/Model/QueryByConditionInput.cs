/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.WWTP.MainBus.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.WWTP.MainBus.Model
{
    /// <summary>
    /// QueryByConditionInput
    /// </summary>
    [DataContract]
    public partial class QueryByConditionInput :  IEquatable<QueryByConditionInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QueryByConditionInput" /> class.
        /// </summary>
        /// <param name="startTime">开始时间 start time.</param>
        /// <param name="endTime">结束时间 end time.</param>
        /// <param name="onlineCodes">在线点位代码列表 online point code list.</param>
        /// <param name="modelCodes">模型节点代码列表 model node code list.</param>
        public QueryByConditionInput(DateTime startTime = default(DateTime), DateTime endTime = default(DateTime), List<string> onlineCodes = default(List<string>), List<string> modelCodes = default(List<string>))
        {
            this.StartTime = startTime;
            this.EndTime = endTime;
            this.OnlineCodes = onlineCodes;
            this.ModelCodes = modelCodes;
        }
        
        /// <summary>
        /// 开始时间 start time
        /// </summary>
        /// <value>开始时间 start time</value>
        [DataMember(Name="startTime", EmitDefaultValue=false)]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// 结束时间 end time
        /// </summary>
        /// <value>结束时间 end time</value>
        [DataMember(Name="endTime", EmitDefaultValue=false)]
        public DateTime EndTime { get; set; }

        /// <summary>
        /// 在线点位代码列表 online point code list
        /// </summary>
        /// <value>在线点位代码列表 online point code list</value>
        [DataMember(Name="onlineCodes", EmitDefaultValue=true)]
        public List<string> OnlineCodes { get; set; }

        /// <summary>
        /// 模型节点代码列表 model node code list
        /// </summary>
        /// <value>模型节点代码列表 model node code list</value>
        [DataMember(Name="modelCodes", EmitDefaultValue=true)]
        public List<string> ModelCodes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class QueryByConditionInput {\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  OnlineCodes: ").Append(OnlineCodes).Append("\n");
            sb.Append("  ModelCodes: ").Append(ModelCodes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QueryByConditionInput);
        }

        /// <summary>
        /// Returns true if QueryByConditionInput instances are equal
        /// </summary>
        /// <param name="input">Instance of QueryByConditionInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QueryByConditionInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StartTime == input.StartTime ||
                    (this.StartTime != null &&
                    this.StartTime.Equals(input.StartTime))
                ) && 
                (
                    this.EndTime == input.EndTime ||
                    (this.EndTime != null &&
                    this.EndTime.Equals(input.EndTime))
                ) && 
                (
                    this.OnlineCodes == input.OnlineCodes ||
                    this.OnlineCodes != null &&
                    input.OnlineCodes != null &&
                    this.OnlineCodes.SequenceEqual(input.OnlineCodes)
                ) && 
                (
                    this.ModelCodes == input.ModelCodes ||
                    this.ModelCodes != null &&
                    input.ModelCodes != null &&
                    this.ModelCodes.SequenceEqual(input.ModelCodes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StartTime != null)
                    hashCode = hashCode * 59 + this.StartTime.GetHashCode();
                if (this.EndTime != null)
                    hashCode = hashCode * 59 + this.EndTime.GetHashCode();
                if (this.OnlineCodes != null)
                    hashCode = hashCode * 59 + this.OnlineCodes.GetHashCode();
                if (this.ModelCodes != null)
                    hashCode = hashCode * 59 + this.ModelCodes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
