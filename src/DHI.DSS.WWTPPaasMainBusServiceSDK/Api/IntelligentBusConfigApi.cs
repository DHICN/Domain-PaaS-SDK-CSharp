/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHI.DSS.WWTPPaasMainBusServiceSDK.Client;
using DHI.DSS.WWTPPaasMainBusServiceSDK.Model;

namespace DHI.DSS.WWTPPaasMainBusServiceSDK.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentBusConfigApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPost (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));

        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));
        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;IntelligentDeniConfigInOut&gt;</returns>
        Result<List<IntelligentDeniConfigInOut>> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGet ();

        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        ApiResponse<Result<List<IntelligentDeniConfigInOut>>> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetWithHttpInfo ();
        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>List&lt;IntelligentDeniConfigInOut&gt;</returns>
        Result<List<IntelligentDeniConfigInOut>> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGet (int? displayType = default(int?));

        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>ApiResponse of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        ApiResponse<Result<List<IntelligentDeniConfigInOut>>> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetWithHttpInfo (int? displayType = default(int?));
        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPost (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));

        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentBusConfigApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostAsync (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));

        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));
        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<IntelligentDeniConfigInOut>>> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetAsync ();

        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;IntelligentDeniConfigInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<IntelligentDeniConfigInOut>>>> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetAsyncWithHttpInfo ();
        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>Task of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<IntelligentDeniConfigInOut>>> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetAsync (int? displayType = default(int?));

        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;IntelligentDeniConfigInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<IntelligentDeniConfigInOut>>>> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetAsyncWithHttpInfo (int? displayType = default(int?));
        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostAsync (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));

        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentBusConfigApi : IIntelligentBusConfigApiSync, IIntelligentBusConfigApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class IntelligentBusConfigApi : IIntelligentBusConfigApi
    {
        private DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentBusConfigApi"/> class.
        /// </summary>
        /// <returns></returns>
        public IntelligentBusConfigApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentBusConfigApi"/> class.
        /// </summary>
        /// <returns></returns>
        public IntelligentBusConfigApi(String basePath)
        {
            this.Configuration = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasMainBusServiceSDK.Client.GlobalConfiguration.Instance,
                new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentBusConfigApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public IntelligentBusConfigApi(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasMainBusServiceSDK.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentBusConfigApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public IntelligentBusConfigApi(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ISynchronousClient client,DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IAsynchronousClient asyncClient, DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPost (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostWithHttpInfo(intelligentDeniConfigInOut);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< Object >> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = intelligentDeniConfigInOut;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/IntelligentBusConfig/AddIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostAsync (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo(intelligentDeniConfigInOut);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 添加智能加药展示配置信息 Add intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = intelligentDeniConfigInOut;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/IntelligentBusConfig/AddIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigAddIntelligentDeniDisplayConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPost (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< Object >> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/IntelligentBusConfig/DeleteIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据ID删除智能加药展示配置信息 Delete intelligent dosage page display config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/IntelligentBusConfig/DeleteIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigDeleteIntelligentDeniDisplayConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;IntelligentDeniConfigInOut&gt;</returns>
        public Result<List<IntelligentDeniConfigInOut>> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGet ()
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<IntelligentDeniConfigInOut>>> localVarResponse = ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<IntelligentDeniConfigInOut> >> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetWithHttpInfo ()
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<IntelligentDeniConfigInOut> >>("/api/IntelligentBusConfig/GetAllIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<IntelligentDeniConfigInOut>>> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetAsync ()
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<IntelligentDeniConfigInOut>>> localVarResponse = await ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有的智能加药展示配置信息 Get all intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;IntelligentDeniConfigInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<IntelligentDeniConfigInOut>>>> ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGetAsyncWithHttpInfo ()
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<IntelligentDeniConfigInOut>>>("/api/IntelligentBusConfig/GetAllIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigGetAllIntelligentDeniDisplayConfigsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>List&lt;IntelligentDeniConfigInOut&gt;</returns>
        public Result<List<IntelligentDeniConfigInOut>> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGet (int? displayType = default(int?))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<IntelligentDeniConfigInOut>>> localVarResponse = ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetWithHttpInfo(displayType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>ApiResponse of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<IntelligentDeniConfigInOut> >> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetWithHttpInfo (int? displayType = default(int?))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (displayType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "displayType", displayType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<IntelligentDeniConfigInOut> >>("/api/IntelligentBusConfig/GetIntelligentDeniDisplayConfigByType", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>Task of List&lt;IntelligentDeniConfigInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<IntelligentDeniConfigInOut>>> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetAsync (int? displayType = default(int?))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<IntelligentDeniConfigInOut>>> localVarResponse = await ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetAsyncWithHttpInfo(displayType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过展示类型枚举获取配置信息 Get intelligent dosage page display config data by display type 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayType">展示类型枚举 display type (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;IntelligentDeniConfigInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<IntelligentDeniConfigInOut>>>> ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGetAsyncWithHttpInfo (int? displayType = default(int?))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (displayType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "displayType", displayType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<IntelligentDeniConfigInOut>>>("/api/IntelligentBusConfig/GetIntelligentDeniDisplayConfigByType", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigGetIntelligentDeniDisplayConfigByTypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPost (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostWithHttpInfo(intelligentDeniConfigInOut);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< Object >> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = intelligentDeniConfigInOut;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/IntelligentBusConfig/UpdateIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostAsync (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo(intelligentDeniConfigInOut);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新智能加药展示配置信息 Update intelligent dosage page display config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="intelligentDeniConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPostAsyncWithHttpInfo (List<IntelligentDeniConfigInOut> intelligentDeniConfigInOut = default(List<IntelligentDeniConfigInOut>))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = intelligentDeniConfigInOut;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/IntelligentBusConfig/UpdateIntelligentDeniDisplayConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentBusConfigUpdateIntelligentDeniDisplayConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
