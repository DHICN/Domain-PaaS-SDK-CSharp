/* 
 * message-center-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.Message.Center.Client;
using DHICN.PAAS.SDK.Message.Center.Model;

namespace DHICN.PAAS.SDK.Message.Center.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMessageTypeApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 批量添加消息类型 | batch add message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeAddPost (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>));

        /// <summary>
        /// 批量添加消息类型 | batch add message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeAddPostWithHttpInfo (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>));
        /// <summary>
        /// 删除消息类型 | delete message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeDeletePost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除消息类型 | delete message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>List&lt;UnreadCountQueryOutput&gt;</returns>
        Result<List<UnreadCountQueryOutput>> ApiV1MessageTypeGetAllTypeUnreadCountPost (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput));

        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;UnreadCountQueryOutput&gt;</returns>
        ApiResponse<Result<List<UnreadCountQueryOutput>>> ApiV1MessageTypeGetAllTypeUnreadCountPostWithHttpInfo (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput));
        /// <summary>
        /// 查询消息类型 | query message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>MessageTypeOutputPage</returns>
        Result<MessageTypeOutputPage> ApiV1MessageTypeListGet (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));

        /// <summary>
        /// 查询消息类型 | query message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>ApiResponse of MessageTypeOutputPage</returns>
        ApiResponse<Result<MessageTypeOutputPage>> ApiV1MessageTypeListGetWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));
        /// <summary>
        /// 修改消息类型 | update message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeUpdatePost (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>));

        /// <summary>
        /// 修改消息类型 | update message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeUpdatePostWithHttpInfo (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMessageTypeApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 批量添加消息类型 | batch add message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeAddPostAsync (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>));

        /// <summary>
        /// 批量添加消息类型 | batch add message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeAddPostAsyncWithHttpInfo (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>));
        /// <summary>
        /// 删除消息类型 | delete message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeDeletePostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除消息类型 | delete message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>Task of List&lt;UnreadCountQueryOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<UnreadCountQueryOutput>>> ApiV1MessageTypeGetAllTypeUnreadCountPostAsync (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput));

        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;UnreadCountQueryOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<UnreadCountQueryOutput>>>> ApiV1MessageTypeGetAllTypeUnreadCountPostAsyncWithHttpInfo (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput));
        /// <summary>
        /// 查询消息类型 | query message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of MessageTypeOutputPage</returns>
        System.Threading.Tasks.Task<Result<MessageTypeOutputPage>> ApiV1MessageTypeListGetAsync (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));

        /// <summary>
        /// 查询消息类型 | query message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of ApiResponse (MessageTypeOutputPage)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<MessageTypeOutputPage>>> ApiV1MessageTypeListGetAsyncWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));
        /// <summary>
        /// 修改消息类型 | update message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeUpdatePostAsync (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>));

        /// <summary>
        /// 修改消息类型 | update message type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeUpdatePostAsyncWithHttpInfo (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMessageTypeApi : IMessageTypeApiSync, IMessageTypeApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class MessageTypeApi : IMessageTypeApi
    {
        private DHICN.PAAS.SDK.Message.Center.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MessageTypeApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MessageTypeApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.Message.Center.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Message.Center.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.Message.Center.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public MessageTypeApi(DHICN.PAAS.SDK.Message.Center.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.Message.Center.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Message.Center.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public MessageTypeApi(DHICN.PAAS.SDK.Message.Center.Client.ISynchronousClient client,DHICN.PAAS.SDK.Message.Center.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.Message.Center.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.Message.Center.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 批量添加消息类型 | batch add message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeAddPost (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeAddPostWithHttpInfo(addMessageTypeInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 批量添加消息类型 | batch add message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeAddPostWithHttpInfo (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addMessageTypeInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 批量添加消息类型 | batch add message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeAddPostAsync (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeAddPostAsyncWithHttpInfo(addMessageTypeInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 批量添加消息类型 | batch add message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMessageTypeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeAddPostAsyncWithHttpInfo (List<AddMessageTypeInput> addMessageTypeInput = default(List<AddMessageTypeInput>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addMessageTypeInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除消息类型 | delete message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeDeletePost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeDeletePostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除消息类型 | delete message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除消息类型 | delete message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeDeletePostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeDeletePostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除消息类型 | delete message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>List&lt;UnreadCountQueryOutput&gt;</returns>
        public Result<List<UnreadCountQueryOutput>> ApiV1MessageTypeGetAllTypeUnreadCountPost (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<List<UnreadCountQueryOutput>>> localVarResponse = ApiV1MessageTypeGetAllTypeUnreadCountPostWithHttpInfo(unreadCountQueryInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;UnreadCountQueryOutput&gt;</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< List<UnreadCountQueryOutput> >> ApiV1MessageTypeGetAllTypeUnreadCountPostWithHttpInfo (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = unreadCountQueryInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<UnreadCountQueryOutput> >>("/api/v1/message-type/get-all-type-unread-count", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetAllTypeUnreadCountPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>Task of List&lt;UnreadCountQueryOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<UnreadCountQueryOutput>>> ApiV1MessageTypeGetAllTypeUnreadCountPostAsync (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<List<UnreadCountQueryOutput>>> localVarResponse = await ApiV1MessageTypeGetAllTypeUnreadCountPostAsyncWithHttpInfo(unreadCountQueryInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取用户所有的消息类型和每种消息类型的最新一条消息 | Get all the message types of the user and the latest message of each message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="unreadCountQueryInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;UnreadCountQueryOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<List<UnreadCountQueryOutput>>>> ApiV1MessageTypeGetAllTypeUnreadCountPostAsyncWithHttpInfo (UnreadCountQueryInput unreadCountQueryInput = default(UnreadCountQueryInput))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = unreadCountQueryInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<UnreadCountQueryOutput>>>("/api/v1/message-type/get-all-type-unread-count", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeGetAllTypeUnreadCountPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询消息类型 | query message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>MessageTypeOutputPage</returns>
        public Result<MessageTypeOutputPage> ApiV1MessageTypeListGet (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MessageTypeOutputPage>> localVarResponse = ApiV1MessageTypeListGetWithHttpInfo(keyWords, pageIndex, pageSize);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询消息类型 | query message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>ApiResponse of MessageTypeOutputPage</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< MessageTypeOutputPage >> ApiV1MessageTypeListGetWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (keyWords != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "KeyWords", keyWords));
            }
            if (pageIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageIndex", pageIndex));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageSize", pageSize));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< MessageTypeOutputPage >>("/api/v1/message-type/list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询消息类型 | query message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of MessageTypeOutputPage</returns>
        public async System.Threading.Tasks.Task<Result<MessageTypeOutputPage>> ApiV1MessageTypeListGetAsync (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MessageTypeOutputPage>> localVarResponse = await ApiV1MessageTypeListGetAsyncWithHttpInfo(keyWords, pageIndex, pageSize);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询消息类型 | query message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of ApiResponse (MessageTypeOutputPage)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MessageTypeOutputPage>>> ApiV1MessageTypeListGetAsyncWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (keyWords != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "KeyWords", keyWords));
            }
            if (pageIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageIndex", pageIndex));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageSize", pageSize));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<MessageTypeOutputPage>>("/api/v1/message-type/list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改消息类型 | update message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeUpdatePost (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeUpdatePostWithHttpInfo(updateMessageTypeInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 修改消息类型 | update message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeUpdatePostWithHttpInfo (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateMessageTypeInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改消息类型 | update message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeUpdatePostAsync (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeUpdatePostAsyncWithHttpInfo(updateMessageTypeInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 修改消息类型 | update message type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMessageTypeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeUpdatePostAsyncWithHttpInfo (List<UpdateMessageTypeInput> updateMessageTypeInput = default(List<UpdateMessageTypeInput>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateMessageTypeInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
