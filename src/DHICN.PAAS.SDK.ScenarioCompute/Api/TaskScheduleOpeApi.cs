/* 
 * scenario-compute-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ScenarioCompute.Client;
using DHICN.PAAS.SDK.ScenarioCompute.Model;

namespace DHICN.PAAS.SDK.ScenarioCompute.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITaskScheduleOpeApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 2.2 注册自动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppTaskScheduleOpeRegisterAutoJobPost (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));

        /// <summary>
        /// 2.2 注册自动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppTaskScheduleOpeRegisterAutoJobPostWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));
        /// <summary>
        /// 2.1 注册滚动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppTaskScheduleOpeRegisterScallJobPost (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));

        /// <summary>
        /// 2.1 注册滚动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppTaskScheduleOpeRegisterScallJobPostWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));
        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        Result<Object> ResgisterScheduleTaskPost ();

        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ResgisterScheduleTaskPostWithHttpInfo ();
        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ScanAutoForecastConfigGet (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string));

        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ScanAutoForecastConfigGetWithHttpInfo (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string));
        /// <summary>
        /// 3 调度服务回调,创建对应的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ScheduleInvokeMethodGet (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string));

        /// <summary>
        /// 3 调度服务回调,创建对应的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ScheduleInvokeMethodGetWithHttpInfo (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITaskScheduleOpeApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 2.2 注册自动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppTaskScheduleOpeRegisterAutoJobPostAsync (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));

        /// <summary>
        /// 2.2 注册自动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppTaskScheduleOpeRegisterAutoJobPostAsyncWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));
        /// <summary>
        /// 2.1 注册滚动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppTaskScheduleOpeRegisterScallJobPostAsync (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));

        /// <summary>
        /// 2.1 注册滚动预报任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppTaskScheduleOpeRegisterScallJobPostAsyncWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo));
        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ResgisterScheduleTaskPostAsync ();

        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ResgisterScheduleTaskPostAsyncWithHttpInfo ();
        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ScanAutoForecastConfigGetAsync (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string));

        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ScanAutoForecastConfigGetAsyncWithHttpInfo (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string));
        /// <summary>
        /// 3 调度服务回调,创建对应的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ScheduleInvokeMethodGetAsync (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string));

        /// <summary>
        /// 3 调度服务回调,创建对应的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ScheduleInvokeMethodGetAsyncWithHttpInfo (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITaskScheduleOpeApi : ITaskScheduleOpeApiSync, ITaskScheduleOpeApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TaskScheduleOpeApi : ITaskScheduleOpeApi
    {
        private DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TaskScheduleOpeApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TaskScheduleOpeApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TaskScheduleOpeApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TaskScheduleOpeApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TaskScheduleOpeApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TaskScheduleOpeApi(DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TaskScheduleOpeApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public TaskScheduleOpeApi(DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient client,DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 2.2 注册自动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppTaskScheduleOpeRegisterAutoJobPost (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppTaskScheduleOpeRegisterAutoJobPostWithHttpInfo(jobGroupKey, projectName, dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 2.2 注册自动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ApiAppTaskScheduleOpeRegisterAutoJobPostWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (jobGroupKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "jobGroupKey", jobGroupKey));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }
            localVarRequestOptions.Data = dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/app/task-schedule-ope/register-auto-job", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTaskScheduleOpeRegisterAutoJobPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2.2 注册自动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppTaskScheduleOpeRegisterAutoJobPostAsync (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppTaskScheduleOpeRegisterAutoJobPostAsyncWithHttpInfo(jobGroupKey, projectName, dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 2.2 注册自动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ApiAppTaskScheduleOpeRegisterAutoJobPostAsyncWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (jobGroupKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "jobGroupKey", jobGroupKey));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }
            localVarRequestOptions.Data = dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/app/task-schedule-ope/register-auto-job", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTaskScheduleOpeRegisterAutoJobPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2.1 注册滚动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppTaskScheduleOpeRegisterScallJobPost (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppTaskScheduleOpeRegisterScallJobPostWithHttpInfo(jobGroupKey, projectName, dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 2.1 注册滚动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ApiAppTaskScheduleOpeRegisterScallJobPostWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (jobGroupKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "jobGroupKey", jobGroupKey));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }
            localVarRequestOptions.Data = dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/app/task-schedule-ope/register-scall-job", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTaskScheduleOpeRegisterScallJobPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2.1 注册滚动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppTaskScheduleOpeRegisterScallJobPostAsync (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppTaskScheduleOpeRegisterScallJobPostAsyncWithHttpInfo(jobGroupKey, projectName, dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 2.1 注册滚动预报任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ApiAppTaskScheduleOpeRegisterScallJobPostAsyncWithHttpInfo (string jobGroupKey = default(string), string projectName = default(string), DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo = default(DhiDssScenarioComputeDaprServicesDtosAutoForecastInfo))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (jobGroupKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "jobGroupKey", jobGroupKey));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }
            localVarRequestOptions.Data = dhiDssScenarioComputeDaprServicesDtosAutoForecastInfo;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/app/task-schedule-ope/register-scall-job", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppTaskScheduleOpeRegisterScallJobPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        public Result<Object> ResgisterScheduleTaskPost ()
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ResgisterScheduleTaskPostWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ResgisterScheduleTaskPostWithHttpInfo ()
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/ResgisterScheduleTask", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ResgisterScheduleTaskPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ResgisterScheduleTaskPostAsync ()
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ResgisterScheduleTaskPostAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 1 注册调度服务，定时一分钟的任务 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ResgisterScheduleTaskPostAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/ResgisterScheduleTask", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ResgisterScheduleTaskPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ScanAutoForecastConfigGet (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ScanAutoForecastConfigGetWithHttpInfo(systemId, jobGroupKey, projectName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ScanAutoForecastConfigGetWithHttpInfo (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "systemId", systemId));
            }
            if (jobGroupKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "jobGroupKey", jobGroupKey));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/ScanAutoForecastConfig", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ScanAutoForecastConfigGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ScanAutoForecastConfigGetAsync (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ScanAutoForecastConfigGetAsyncWithHttpInfo(systemId, jobGroupKey, projectName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 2 执行回调，扫描租户配置数据，按注册时的频率来扫描 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="systemId"> (optional)</param>
        /// <param name="jobGroupKey"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ScanAutoForecastConfigGetAsyncWithHttpInfo (string systemId = default(string), string jobGroupKey = default(string), string projectName = default(string))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "systemId", systemId));
            }
            if (jobGroupKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "jobGroupKey", jobGroupKey));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/ScanAutoForecastConfig", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ScanAutoForecastConfigGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 3 调度服务回调,创建对应的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ScheduleInvokeMethodGet (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ScheduleInvokeMethodGetWithHttpInfo(tenantId, businessType, libraryType, projectName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 3 调度服务回调,创建对应的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ScheduleInvokeMethodGetWithHttpInfo (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "TenantId", tenantId));
            }
            if (businessType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "BusinessType", businessType));
            }
            if (libraryType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "LibraryType", libraryType));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/ScheduleInvokeMethod", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ScheduleInvokeMethodGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 3 调度服务回调,创建对应的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ScheduleInvokeMethodGetAsync (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ScheduleInvokeMethodGetAsyncWithHttpInfo(tenantId, businessType, libraryType, projectName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 3 调度服务回调,创建对应的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="libraryType"> (optional)</param>
        /// <param name="projectName"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ScheduleInvokeMethodGetAsyncWithHttpInfo (string tenantId = default(string), int? businessType = default(int?), int? libraryType = default(int?), string projectName = default(string))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "TenantId", tenantId));
            }
            if (businessType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "BusinessType", businessType));
            }
            if (libraryType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "LibraryType", libraryType));
            }
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/ScheduleInvokeMethod", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ScheduleInvokeMethodGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
