/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.Identity.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.Identity.Model
{
    /// <summary>
    /// ButtonPerUnderMenuInput
    /// </summary>
    [DataContract]
    public partial class ButtonPerUnderMenuInput :  IEquatable<ButtonPerUnderMenuInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ButtonPerUnderMenuInput" /> class.
        /// </summary>
        /// <param name="menuIds">菜单下的按钮权限 button permission ids.</param>
        public ButtonPerUnderMenuInput(List<Guid> menuIds = default(List<Guid>))
        {
            this.MenuIds = menuIds;
        }
        
        /// <summary>
        /// 菜单下的按钮权限 button permission ids
        /// </summary>
        /// <value>菜单下的按钮权限 button permission ids</value>
        [DataMember(Name="menuIds", EmitDefaultValue=true)]
        public List<Guid> MenuIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ButtonPerUnderMenuInput {\n");
            sb.Append("  MenuIds: ").Append(MenuIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ButtonPerUnderMenuInput);
        }

        /// <summary>
        /// Returns true if ButtonPerUnderMenuInput instances are equal
        /// </summary>
        /// <param name="input">Instance of ButtonPerUnderMenuInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ButtonPerUnderMenuInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MenuIds == input.MenuIds ||
                    this.MenuIds != null &&
                    input.MenuIds != null &&
                    this.MenuIds.SequenceEqual(input.MenuIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MenuIds != null)
                    hashCode = hashCode * 59 + this.MenuIds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
