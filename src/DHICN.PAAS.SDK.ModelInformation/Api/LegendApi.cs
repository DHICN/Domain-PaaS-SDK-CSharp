/* 
 * model-configuration-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ModelInformation.Client;
using DHICN.PAAS.SDK.ModelInformation.Model;

namespace DHICN.PAAS.SDK.ModelInformation.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ILegendApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取所有的图例项 Get all legend items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;LegendItemDto&gt;</returns>
        Result<List<LegendItemDto>> ApiV1ModelConfigurationLegendAllLegendGet ();

        /// <summary>
        /// 获取所有的图例项 Get all legend items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;LegendItemDto&gt;</returns>
        ApiResponse<Result<List<LegendItemDto>>> ApiV1ModelConfigurationLegendAllLegendGetWithHttpInfo ();
        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>List&lt;ClassifyLegendInfo&gt;</returns>
        Result<List<ClassifyLegendInfo>> ApiV1ModelConfigurationLegendClassifyLegendGet (string modelType = default(string), string dataType = default(string));

        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>ApiResponse of List&lt;ClassifyLegendInfo&gt;</returns>
        ApiResponse<Result<List<ClassifyLegendInfo>>> ApiV1ModelConfigurationLegendClassifyLegendGetWithHttpInfo (string modelType = default(string), string dataType = default(string));
        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>LegendItemDto</returns>
        Result<LegendItemDto> ApiV1ModelConfigurationLegendLegendItemGet (string modelType = default(string), string dataType = default(string));

        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>ApiResponse of LegendItemDto</returns>
        ApiResponse<Result<LegendItemDto>> ApiV1ModelConfigurationLegendLegendItemGetWithHttpInfo (string modelType = default(string), string dataType = default(string));
        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ModelConfigurationLegendSaveClassifyPost (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput));

        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ModelConfigurationLegendSaveClassifyPostWithHttpInfo (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput));
        /// <summary>
        /// 保存图例项信息 Save legend items
        /// </summary>
        /// <remarks>
        /// 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ModelConfigurationLegendSaveLegendTypePost (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>));

        /// <summary>
        /// 保存图例项信息 Save legend items
        /// </summary>
        /// <remarks>
        /// 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ModelConfigurationLegendSaveLegendTypePostWithHttpInfo (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ILegendApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取所有的图例项 Get all legend items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;LegendItemDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<LegendItemDto>>> ApiV1ModelConfigurationLegendAllLegendGetAsync ();

        /// <summary>
        /// 获取所有的图例项 Get all legend items
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;LegendItemDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<LegendItemDto>>>> ApiV1ModelConfigurationLegendAllLegendGetAsyncWithHttpInfo ();
        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of List&lt;ClassifyLegendInfo&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ClassifyLegendInfo>>> ApiV1ModelConfigurationLegendClassifyLegendGetAsync (string modelType = default(string), string dataType = default(string));

        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ClassifyLegendInfo&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ClassifyLegendInfo>>>> ApiV1ModelConfigurationLegendClassifyLegendGetAsyncWithHttpInfo (string modelType = default(string), string dataType = default(string));
        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of LegendItemDto</returns>
        System.Threading.Tasks.Task<Result<LegendItemDto>> ApiV1ModelConfigurationLegendLegendItemGetAsync (string modelType = default(string), string dataType = default(string));

        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of ApiResponse (LegendItemDto)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<LegendItemDto>>> ApiV1ModelConfigurationLegendLegendItemGetAsyncWithHttpInfo (string modelType = default(string), string dataType = default(string));
        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ModelConfigurationLegendSaveClassifyPostAsync (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput));

        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications
        /// </summary>
        /// <remarks>
        /// 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ModelConfigurationLegendSaveClassifyPostAsyncWithHttpInfo (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput));
        /// <summary>
        /// 保存图例项信息 Save legend items
        /// </summary>
        /// <remarks>
        /// 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ModelConfigurationLegendSaveLegendTypePostAsync (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>));

        /// <summary>
        /// 保存图例项信息 Save legend items
        /// </summary>
        /// <remarks>
        /// 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ModelConfigurationLegendSaveLegendTypePostAsyncWithHttpInfo (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ILegendApi : ILegendApiSync, ILegendApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class LegendApi : ILegendApi
    {
        private DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="LegendApi"/> class.
        /// </summary>
        /// <returns></returns>
        public LegendApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="LegendApi"/> class.
        /// </summary>
        /// <returns></returns>
        public LegendApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ModelInformation.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="LegendApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public LegendApi(DHICN.PAAS.SDK.ModelInformation.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="LegendApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public LegendApi(DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient client,DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取所有的图例项 Get all legend items 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;LegendItemDto&gt;</returns>
        public Result<List<LegendItemDto>> ApiV1ModelConfigurationLegendAllLegendGet ()
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LegendItemDto>>> localVarResponse = ApiV1ModelConfigurationLegendAllLegendGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有的图例项 Get all legend items 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;LegendItemDto&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<LegendItemDto> >> ApiV1ModelConfigurationLegendAllLegendGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<LegendItemDto> >>("/api/v1/model-configuration/legend/all-legend", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendAllLegendGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的图例项 Get all legend items 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;LegendItemDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<LegendItemDto>>> ApiV1ModelConfigurationLegendAllLegendGetAsync ()
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LegendItemDto>>> localVarResponse = await ApiV1ModelConfigurationLegendAllLegendGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有的图例项 Get all legend items 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;LegendItemDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<LegendItemDto>>>> ApiV1ModelConfigurationLegendAllLegendGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<LegendItemDto>>>("/api/v1/model-configuration/legend/all-legend", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendAllLegendGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>List&lt;ClassifyLegendInfo&gt;</returns>
        public Result<List<ClassifyLegendInfo>> ApiV1ModelConfigurationLegendClassifyLegendGet (string modelType = default(string), string dataType = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<ClassifyLegendInfo>>> localVarResponse = ApiV1ModelConfigurationLegendClassifyLegendGetWithHttpInfo(modelType, dataType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>ApiResponse of List&lt;ClassifyLegendInfo&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<ClassifyLegendInfo> >> ApiV1ModelConfigurationLegendClassifyLegendGetWithHttpInfo (string modelType = default(string), string dataType = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "dataType", dataType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ClassifyLegendInfo> >>("/api/v1/model-configuration/legend/classify-legend", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendClassifyLegendGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of List&lt;ClassifyLegendInfo&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ClassifyLegendInfo>>> ApiV1ModelConfigurationLegendClassifyLegendGetAsync (string modelType = default(string), string dataType = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<ClassifyLegendInfo>>> localVarResponse = await ApiV1ModelConfigurationLegendClassifyLegendGetAsyncWithHttpInfo(modelType, dataType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取某个图例项的等级设置信息 Get legend classifications 根据模型类型和数据类型，获取对应的图例项的等级设置信息，包括等级范围、颜色、描述等信息 Get the legend classifications, including information like classification data range, color, description, etc. by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ClassifyLegendInfo&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<ClassifyLegendInfo>>>> ApiV1ModelConfigurationLegendClassifyLegendGetAsyncWithHttpInfo (string modelType = default(string), string dataType = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "dataType", dataType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ClassifyLegendInfo>>>("/api/v1/model-configuration/legend/classify-legend", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendClassifyLegendGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>LegendItemDto</returns>
        public Result<LegendItemDto> ApiV1ModelConfigurationLegendLegendItemGet (string modelType = default(string), string dataType = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<LegendItemDto>> localVarResponse = ApiV1ModelConfigurationLegendLegendItemGetWithHttpInfo(modelType, dataType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>ApiResponse of LegendItemDto</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< LegendItemDto >> ApiV1ModelConfigurationLegendLegendItemGetWithHttpInfo (string modelType = default(string), string dataType = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "dataType", dataType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< LegendItemDto >>("/api/v1/model-configuration/legend/legend-item", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendLegendItemGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of LegendItemDto</returns>
        public async System.Threading.Tasks.Task<Result<LegendItemDto>> ApiV1ModelConfigurationLegendLegendItemGetAsync (string modelType = default(string), string dataType = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<LegendItemDto>> localVarResponse = await ApiV1ModelConfigurationLegendLegendItemGetAsyncWithHttpInfo(modelType, dataType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据模型类型和数据类型获取对应的图例项 Get legend item by model type and data type 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelType">图例项对应的模型类型 model type of the legend item (optional)</param>
        /// <param name="dataType">图例项对应的数据类型 data type of the legend item (optional)</param>
        /// <returns>Task of ApiResponse (LegendItemDto)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<LegendItemDto>>> ApiV1ModelConfigurationLegendLegendItemGetAsyncWithHttpInfo (string modelType = default(string), string dataType = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "dataType", dataType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<LegendItemDto>>("/api/v1/model-configuration/legend/legend-item", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendLegendItemGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ModelConfigurationLegendSaveClassifyPost (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ModelConfigurationLegendSaveClassifyPostWithHttpInfo(classifyLegendInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV1ModelConfigurationLegendSaveClassifyPostWithHttpInfo (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = classifyLegendInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/model-configuration/legend/save-classify", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendSaveClassifyPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ModelConfigurationLegendSaveClassifyPostAsync (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ModelConfigurationLegendSaveClassifyPostAsyncWithHttpInfo(classifyLegendInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 保存图例项对应的等级设置信息 Save legend classifications 根据模型类型和数据类型，添加或更新图例项对应的等级设置信息 Save or update legend classifications by model type and data type.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="classifyLegendInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV1ModelConfigurationLegendSaveClassifyPostAsyncWithHttpInfo (ClassifyLegendInput classifyLegendInput = default(ClassifyLegendInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = classifyLegendInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/model-configuration/legend/save-classify", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendSaveClassifyPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存图例项信息 Save legend items 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ModelConfigurationLegendSaveLegendTypePost (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ModelConfigurationLegendSaveLegendTypePostWithHttpInfo(legendItemDto);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 保存图例项信息 Save legend items 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< bool >> ApiV1ModelConfigurationLegendSaveLegendTypePostWithHttpInfo (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = legendItemDto;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/model-configuration/legend/save-legend-type", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendSaveLegendTypePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存图例项信息 Save legend items 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ModelConfigurationLegendSaveLegendTypePostAsync (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ModelConfigurationLegendSaveLegendTypePostAsyncWithHttpInfo(legendItemDto);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 保存图例项信息 Save legend items 添加或者更新图例项信息，在输入参数中，modelType可以是River, Network, M2D等代表模型类型的值，resultType可以是结果文件（res1d，dfsu等）中的数据项 Add or update legend items. Among the augments, modelType can be River, Network, M2D, etc., and resultType is data items in the result files (res1d, dfsu, etc.).
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="legendItemDto"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<bool>>> ApiV1ModelConfigurationLegendSaveLegendTypePostAsyncWithHttpInfo (List<LegendItemDto> legendItemDto = default(List<LegendItemDto>))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = legendItemDto;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/model-configuration/legend/save-legend-type", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelConfigurationLegendSaveLegendTypePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
