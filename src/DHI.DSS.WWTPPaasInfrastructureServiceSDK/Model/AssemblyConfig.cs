/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.WWTPPaasInfrastructureServiceSDK.Model
{
    /// <summary>
    /// AssemblyConfig
    /// </summary>
    [DataContract]
    public partial class AssemblyConfig :  IEquatable<AssemblyConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AssemblyConfig" /> class.
        /// </summary>
        /// <param name="sysInputOutputCodeConfigs">sysInputOutputCodeConfigs.</param>
        /// <param name="onlinePointConfigs">onlinePointConfigs.</param>
        /// <param name="modelNodeConfigs">modelNodeConfigs.</param>
        /// <param name="mappingConfigs">mappingConfigs.</param>
        /// <param name="mappingDic">mappingDic.</param>
        /// <param name="onlinePointDic">onlinePointDic.</param>
        /// <param name="modelNodesDic">modelNodesDic.</param>
        public AssemblyConfig(List<SysCodeConfigInputOutput> sysInputOutputCodeConfigs = default(List<SysCodeConfigInputOutput>), List<OnlinePointConfig> onlinePointConfigs = default(List<OnlinePointConfig>), List<ModelNodeConfig> modelNodeConfigs = default(List<ModelNodeConfig>), List<MappingConfig> mappingConfigs = default(List<MappingConfig>), Dictionary<string, MappingConfig> mappingDic = default(Dictionary<string, MappingConfig>), Dictionary<string, OnlinePointConfig> onlinePointDic = default(Dictionary<string, OnlinePointConfig>), Dictionary<string, ModelNodeConfig> modelNodesDic = default(Dictionary<string, ModelNodeConfig>))
        {
            this.SysInputOutputCodeConfigs = sysInputOutputCodeConfigs;
            this.OnlinePointConfigs = onlinePointConfigs;
            this.ModelNodeConfigs = modelNodeConfigs;
            this.MappingConfigs = mappingConfigs;
            this.MappingDic = mappingDic;
            this.OnlinePointDic = onlinePointDic;
            this.ModelNodesDic = modelNodesDic;
        }
        
        /// <summary>
        /// Gets or Sets SysInputOutputCodeConfigs
        /// </summary>
        [DataMember(Name="sysInputOutputCodeConfigs", EmitDefaultValue=true)]
        public List<SysCodeConfigInputOutput> SysInputOutputCodeConfigs { get; set; }

        /// <summary>
        /// Gets or Sets OnlinePointConfigs
        /// </summary>
        [DataMember(Name="onlinePointConfigs", EmitDefaultValue=true)]
        public List<OnlinePointConfig> OnlinePointConfigs { get; set; }

        /// <summary>
        /// Gets or Sets ModelNodeConfigs
        /// </summary>
        [DataMember(Name="modelNodeConfigs", EmitDefaultValue=true)]
        public List<ModelNodeConfig> ModelNodeConfigs { get; set; }

        /// <summary>
        /// Gets or Sets MappingConfigs
        /// </summary>
        [DataMember(Name="mappingConfigs", EmitDefaultValue=true)]
        public List<MappingConfig> MappingConfigs { get; set; }

        /// <summary>
        /// Gets or Sets MappingDic
        /// </summary>
        [DataMember(Name="mappingDic", EmitDefaultValue=true)]
        public Dictionary<string, MappingConfig> MappingDic { get; set; }

        /// <summary>
        /// Gets or Sets OnlinePointDic
        /// </summary>
        [DataMember(Name="onlinePointDic", EmitDefaultValue=true)]
        public Dictionary<string, OnlinePointConfig> OnlinePointDic { get; set; }

        /// <summary>
        /// Gets or Sets ModelNodesDic
        /// </summary>
        [DataMember(Name="modelNodesDic", EmitDefaultValue=true)]
        public Dictionary<string, ModelNodeConfig> ModelNodesDic { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AssemblyConfig {\n");
            sb.Append("  SysInputOutputCodeConfigs: ").Append(SysInputOutputCodeConfigs).Append("\n");
            sb.Append("  OnlinePointConfigs: ").Append(OnlinePointConfigs).Append("\n");
            sb.Append("  ModelNodeConfigs: ").Append(ModelNodeConfigs).Append("\n");
            sb.Append("  MappingConfigs: ").Append(MappingConfigs).Append("\n");
            sb.Append("  MappingDic: ").Append(MappingDic).Append("\n");
            sb.Append("  OnlinePointDic: ").Append(OnlinePointDic).Append("\n");
            sb.Append("  ModelNodesDic: ").Append(ModelNodesDic).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AssemblyConfig);
        }

        /// <summary>
        /// Returns true if AssemblyConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of AssemblyConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AssemblyConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SysInputOutputCodeConfigs == input.SysInputOutputCodeConfigs ||
                    this.SysInputOutputCodeConfigs != null &&
                    input.SysInputOutputCodeConfigs != null &&
                    this.SysInputOutputCodeConfigs.SequenceEqual(input.SysInputOutputCodeConfigs)
                ) && 
                (
                    this.OnlinePointConfigs == input.OnlinePointConfigs ||
                    this.OnlinePointConfigs != null &&
                    input.OnlinePointConfigs != null &&
                    this.OnlinePointConfigs.SequenceEqual(input.OnlinePointConfigs)
                ) && 
                (
                    this.ModelNodeConfigs == input.ModelNodeConfigs ||
                    this.ModelNodeConfigs != null &&
                    input.ModelNodeConfigs != null &&
                    this.ModelNodeConfigs.SequenceEqual(input.ModelNodeConfigs)
                ) && 
                (
                    this.MappingConfigs == input.MappingConfigs ||
                    this.MappingConfigs != null &&
                    input.MappingConfigs != null &&
                    this.MappingConfigs.SequenceEqual(input.MappingConfigs)
                ) && 
                (
                    this.MappingDic == input.MappingDic ||
                    this.MappingDic != null &&
                    input.MappingDic != null &&
                    this.MappingDic.SequenceEqual(input.MappingDic)
                ) && 
                (
                    this.OnlinePointDic == input.OnlinePointDic ||
                    this.OnlinePointDic != null &&
                    input.OnlinePointDic != null &&
                    this.OnlinePointDic.SequenceEqual(input.OnlinePointDic)
                ) && 
                (
                    this.ModelNodesDic == input.ModelNodesDic ||
                    this.ModelNodesDic != null &&
                    input.ModelNodesDic != null &&
                    this.ModelNodesDic.SequenceEqual(input.ModelNodesDic)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SysInputOutputCodeConfigs != null)
                    hashCode = hashCode * 59 + this.SysInputOutputCodeConfigs.GetHashCode();
                if (this.OnlinePointConfigs != null)
                    hashCode = hashCode * 59 + this.OnlinePointConfigs.GetHashCode();
                if (this.ModelNodeConfigs != null)
                    hashCode = hashCode * 59 + this.ModelNodeConfigs.GetHashCode();
                if (this.MappingConfigs != null)
                    hashCode = hashCode * 59 + this.MappingConfigs.GetHashCode();
                if (this.MappingDic != null)
                    hashCode = hashCode * 59 + this.MappingDic.GetHashCode();
                if (this.OnlinePointDic != null)
                    hashCode = hashCode * 59 + this.OnlinePointDic.GetHashCode();
                if (this.ModelNodesDic != null)
                    hashCode = hashCode * 59 + this.ModelNodesDic.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
