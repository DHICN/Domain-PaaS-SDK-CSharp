/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.WWTP.MainBus.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.WWTP.MainBus.Model
{
    /// <summary>
    /// GetStatisticResultDto
    /// </summary>
    [DataContract]
    public partial class GetStatisticResultDto :  IEquatable<GetStatisticResultDto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatisticResultDto" /> class.
        /// </summary>
        /// <param name="statisticCode">统计码.</param>
        /// <param name="time">时间.</param>
        /// <param name="value">值.</param>
        public GetStatisticResultDto(string statisticCode = default(string), DateTime time = default(DateTime), double value = default(double))
        {
            this.StatisticCode = statisticCode;
            this.Time = time;
            this.Value = value;
        }
        
        /// <summary>
        /// 统计码
        /// </summary>
        /// <value>统计码</value>
        [DataMember(Name="statisticCode", EmitDefaultValue=true)]
        public string StatisticCode { get; set; }

        /// <summary>
        /// 时间
        /// </summary>
        /// <value>时间</value>
        [DataMember(Name="time", EmitDefaultValue=false)]
        public DateTime Time { get; set; }

        /// <summary>
        /// 值
        /// </summary>
        /// <value>值</value>
        [DataMember(Name="value", EmitDefaultValue=false)]
        public double Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetStatisticResultDto {\n");
            sb.Append("  StatisticCode: ").Append(StatisticCode).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetStatisticResultDto);
        }

        /// <summary>
        /// Returns true if GetStatisticResultDto instances are equal
        /// </summary>
        /// <param name="input">Instance of GetStatisticResultDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetStatisticResultDto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StatisticCode == input.StatisticCode ||
                    (this.StatisticCode != null &&
                    this.StatisticCode.Equals(input.StatisticCode))
                ) && 
                (
                    this.Time == input.Time ||
                    (this.Time != null &&
                    this.Time.Equals(input.Time))
                ) && 
                (
                    this.Value == input.Value ||
                    this.Value.Equals(input.Value)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StatisticCode != null)
                    hashCode = hashCode * 59 + this.StatisticCode.GetHashCode();
                if (this.Time != null)
                    hashCode = hashCode * 59 + this.Time.GetHashCode();
                hashCode = hashCode * 59 + this.Value.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
