/* 
 * model-configuration-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ModelConfiguration.Client;
using DHICN.PAAS.SDK.ModelConfiguration.Model;

namespace DHICN.PAAS.SDK.ModelConfiguration.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelTemplateApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 标记模板模型文件 Mark a template file
        /// </summary>
        /// <remarks>
        /// 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>string</returns>
        Result<string> ApiV2ModelConfigurationTemplateCreateModelTemplatePost (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2));

        /// <summary>
        /// 标记模板模型文件 Mark a template file
        /// </summary>
        /// <remarks>
        /// 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        ApiResponse<Result<string>> ApiV2ModelConfigurationTemplateCreateModelTemplatePostWithHttpInfo (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2));
        /// <summary>
        /// 删除模板模型文件 Delete template files
        /// </summary>
        /// <remarks>
        /// 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ModelConfigurationTemplateDeletePost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除模板模型文件 Delete template files
        /// </summary>
        /// <remarks>
        /// 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ModelConfigurationTemplateDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 下载模板模型文件 Download template files
        /// </summary>
        /// <remarks>
        /// 根据文件名下载模板模型文件 Download model template files with fileName
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>string</returns>
        Result<string> ApiV2ModelConfigurationTemplateDownloadModelTempaltePost (DownloadFileInput downloadFileInput = default(DownloadFileInput));

        /// <summary>
        /// 下载模板模型文件 Download template files
        /// </summary>
        /// <remarks>
        /// 根据文件名下载模板模型文件 Download model template files with fileName
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        ApiResponse<Result<string>> ApiV2ModelConfigurationTemplateDownloadModelTempaltePostWithHttpInfo (DownloadFileInput downloadFileInput = default(DownloadFileInput));
        /// <summary>
        /// 获取模板模型文件列表 Get template files list
        /// </summary>
        /// <remarks>
        /// 获取所有的模板模型文件列表 Get all the model template files list
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;QueryTemplateListOutput&gt;</returns>
        Result<List<QueryTemplateListOutput>> ApiV2ModelConfigurationTemplateModelTempalteListGet ();

        /// <summary>
        /// 获取模板模型文件列表 Get template files list
        /// </summary>
        /// <remarks>
        /// 获取所有的模板模型文件列表 Get all the model template files list
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;QueryTemplateListOutput&gt;</returns>
        ApiResponse<Result<List<QueryTemplateListOutput>>> ApiV2ModelConfigurationTemplateModelTempalteListGetWithHttpInfo ();
        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file
        /// </summary>
        /// <remarks>
        /// 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>string</returns>
        Result<string> ApiV2ModelConfigurationTemplateUploadModelTemplatePost (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string));

        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file
        /// </summary>
        /// <remarks>
        /// 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>ApiResponse of string</returns>
        ApiResponse<Result<string>> ApiV2ModelConfigurationTemplateUploadModelTemplatePostWithHttpInfo (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelTemplateApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 标记模板模型文件 Mark a template file
        /// </summary>
        /// <remarks>
        /// 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>Task of string</returns>
        System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigurationTemplateCreateModelTemplatePostAsync (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2));

        /// <summary>
        /// 标记模板模型文件 Mark a template file
        /// </summary>
        /// <remarks>
        /// 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<string>>> ApiV2ModelConfigurationTemplateCreateModelTemplatePostAsyncWithHttpInfo (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2));
        /// <summary>
        /// 删除模板模型文件 Delete template files
        /// </summary>
        /// <remarks>
        /// 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ModelConfigurationTemplateDeletePostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除模板模型文件 Delete template files
        /// </summary>
        /// <remarks>
        /// 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ModelConfigurationTemplateDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 下载模板模型文件 Download template files
        /// </summary>
        /// <remarks>
        /// 根据文件名下载模板模型文件 Download model template files with fileName
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>Task of string</returns>
        System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigurationTemplateDownloadModelTempaltePostAsync (DownloadFileInput downloadFileInput = default(DownloadFileInput));

        /// <summary>
        /// 下载模板模型文件 Download template files
        /// </summary>
        /// <remarks>
        /// 根据文件名下载模板模型文件 Download model template files with fileName
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<string>>> ApiV2ModelConfigurationTemplateDownloadModelTempaltePostAsyncWithHttpInfo (DownloadFileInput downloadFileInput = default(DownloadFileInput));
        /// <summary>
        /// 获取模板模型文件列表 Get template files list
        /// </summary>
        /// <remarks>
        /// 获取所有的模板模型文件列表 Get all the model template files list
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;QueryTemplateListOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryTemplateListOutput>>> ApiV2ModelConfigurationTemplateModelTempalteListGetAsync ();

        /// <summary>
        /// 获取模板模型文件列表 Get template files list
        /// </summary>
        /// <remarks>
        /// 获取所有的模板模型文件列表 Get all the model template files list
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;QueryTemplateListOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryTemplateListOutput>>>> ApiV2ModelConfigurationTemplateModelTempalteListGetAsyncWithHttpInfo ();
        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file
        /// </summary>
        /// <remarks>
        /// 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of string</returns>
        System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigurationTemplateUploadModelTemplatePostAsync (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string));

        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file
        /// </summary>
        /// <remarks>
        /// 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<string>>> ApiV2ModelConfigurationTemplateUploadModelTemplatePostAsyncWithHttpInfo (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelTemplateApi : IModelTemplateApiSync, IModelTemplateApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ModelTemplateApi : IModelTemplateApi
    {
        private DHICN.PAAS.SDK.ModelConfiguration.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelTemplateApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ModelTemplateApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelTemplateApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ModelTemplateApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ModelConfiguration.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelConfiguration.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ModelConfiguration.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ModelConfiguration.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelConfiguration.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelConfiguration.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelTemplateApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ModelTemplateApi(DHICN.PAAS.SDK.ModelConfiguration.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ModelConfiguration.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelConfiguration.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ModelConfiguration.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelConfiguration.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ModelConfiguration.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelTemplateApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ModelTemplateApi(DHICN.PAAS.SDK.ModelConfiguration.Client.ISynchronousClient client,DHICN.PAAS.SDK.ModelConfiguration.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ModelConfiguration.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelConfiguration.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 标记模板模型文件 Mark a template file 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>string</returns>
        public Result<string> ApiV2ModelConfigurationTemplateCreateModelTemplatePost (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>> localVarResponse = ApiV2ModelConfigurationTemplateCreateModelTemplatePostWithHttpInfo(createTemplateFileInputV2);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 标记模板模型文件 Mark a template file 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result< string >> ApiV2ModelConfigurationTemplateCreateModelTemplatePostWithHttpInfo (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2))
        {
            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = createTemplateFileInputV2;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< string >>("/api/v2/model-configuration/template/create-model-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateCreateModelTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 标记模板模型文件 Mark a template file 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>Task of string</returns>
        public async System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigurationTemplateCreateModelTemplatePostAsync (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>> localVarResponse = await ApiV2ModelConfigurationTemplateCreateModelTemplatePostAsyncWithHttpInfo(createTemplateFileInputV2);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 标记模板模型文件 Mark a template file 把上传的模板模型文件标记为可作为模板方案的模型 Mark a template file as model file that can be used to create a template scenario
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createTemplateFileInputV2"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>>> ApiV2ModelConfigurationTemplateCreateModelTemplatePostAsyncWithHttpInfo (CreateTemplateFileInputV2 createTemplateFileInputV2 = default(CreateTemplateFileInputV2))
        {

            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = createTemplateFileInputV2;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<string>>("/api/v2/model-configuration/template/create-model-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateCreateModelTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除模板模型文件 Delete template files 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ModelConfigurationTemplateDeletePost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ModelConfigurationTemplateDeletePostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除模板模型文件 Delete template files 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result< bool >> ApiV2ModelConfigurationTemplateDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v2/model-configuration/template/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除模板模型文件 Delete template files 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ModelConfigurationTemplateDeletePostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ModelConfigurationTemplateDeletePostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除模板模型文件 Delete template files 根据文件ID删除若干个模板模型文件 Delete template files with template file ids
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<bool>>> ApiV2ModelConfigurationTemplateDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v2/model-configuration/template/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 下载模板模型文件 Download template files 根据文件名下载模板模型文件 Download model template files with fileName
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>string</returns>
        public Result<string> ApiV2ModelConfigurationTemplateDownloadModelTempaltePost (DownloadFileInput downloadFileInput = default(DownloadFileInput))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>> localVarResponse = ApiV2ModelConfigurationTemplateDownloadModelTempaltePostWithHttpInfo(downloadFileInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 下载模板模型文件 Download template files 根据文件名下载模板模型文件 Download model template files with fileName
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result< string >> ApiV2ModelConfigurationTemplateDownloadModelTempaltePostWithHttpInfo (DownloadFileInput downloadFileInput = default(DownloadFileInput))
        {
            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = downloadFileInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< string >>("/api/v2/model-configuration/template/download-model-tempalte", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateDownloadModelTempaltePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 下载模板模型文件 Download template files 根据文件名下载模板模型文件 Download model template files with fileName
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>Task of string</returns>
        public async System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigurationTemplateDownloadModelTempaltePostAsync (DownloadFileInput downloadFileInput = default(DownloadFileInput))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>> localVarResponse = await ApiV2ModelConfigurationTemplateDownloadModelTempaltePostAsyncWithHttpInfo(downloadFileInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 下载模板模型文件 Download template files 根据文件名下载模板模型文件 Download model template files with fileName
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="downloadFileInput"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>>> ApiV2ModelConfigurationTemplateDownloadModelTempaltePostAsyncWithHttpInfo (DownloadFileInput downloadFileInput = default(DownloadFileInput))
        {

            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = downloadFileInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<string>>("/api/v2/model-configuration/template/download-model-tempalte", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateDownloadModelTempaltePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取模板模型文件列表 Get template files list 获取所有的模板模型文件列表 Get all the model template files list
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;QueryTemplateListOutput&gt;</returns>
        public Result<List<QueryTemplateListOutput>> ApiV2ModelConfigurationTemplateModelTempalteListGet ()
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<List<QueryTemplateListOutput>>> localVarResponse = ApiV2ModelConfigurationTemplateModelTempalteListGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取模板模型文件列表 Get template files list 获取所有的模板模型文件列表 Get all the model template files list
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;QueryTemplateListOutput&gt;</returns>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result< List<QueryTemplateListOutput> >> ApiV2ModelConfigurationTemplateModelTempalteListGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<QueryTemplateListOutput> >>("/api/v2/model-configuration/template/model-tempalte-list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateModelTempalteListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取模板模型文件列表 Get template files list 获取所有的模板模型文件列表 Get all the model template files list
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;QueryTemplateListOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryTemplateListOutput>>> ApiV2ModelConfigurationTemplateModelTempalteListGetAsync ()
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<List<QueryTemplateListOutput>>> localVarResponse = await ApiV2ModelConfigurationTemplateModelTempalteListGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取模板模型文件列表 Get template files list 获取所有的模板模型文件列表 Get all the model template files list
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;QueryTemplateListOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<List<QueryTemplateListOutput>>>> ApiV2ModelConfigurationTemplateModelTempalteListGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<QueryTemplateListOutput>>>("/api/v2/model-configuration/template/model-tempalte-list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateModelTempalteListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>string</returns>
        public Result<string> ApiV2ModelConfigurationTemplateUploadModelTemplatePost (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>> localVarResponse = ApiV2ModelConfigurationTemplateUploadModelTemplatePostWithHttpInfo(muppName, systemId, libraryType, businessType, modelType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>ApiResponse of string</returns>
        public DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result< string >> ApiV2ModelConfigurationTemplateUploadModelTemplatePostWithHttpInfo (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string))
        {
            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (muppName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "muppName", muppName));
            }
            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "systemId", systemId));
            }
            if (libraryType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "libraryType", libraryType));
            }
            if (businessType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "businessType", businessType));
            }
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< string >>("/api/v2/model-configuration/template/upload-model-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateUploadModelTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of string</returns>
        public async System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigurationTemplateUploadModelTemplatePostAsync (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string))
        {
             DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>> localVarResponse = await ApiV2ModelConfigurationTemplateUploadModelTemplatePostAsyncWithHttpInfo(muppName, systemId, libraryType, businessType, modelType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 上传模型模板文件，同时检查模型文件 Upload a template file, meanwhile check the file 上传模型模板文件，支持以.zip或者.7z格式来压缩一个完整的模型，同时会后台异步检查模型文件，如果模型文件符合要求，将被标记为可用于创建模板方案 Upload a template file, which can be a .zip or .7z file containing a complete model. Meanwhile the model files will be checked asynchronously, and marked as model file that can be used to create a template scenario if it meet the necessary requirements.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelConfiguration.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="muppName">模型文件名称 model file name without path (optional)</param>
        /// <param name="systemId">系统ID system id (optional)</param>
        /// <param name="libraryType">库类型 library type (optional)</param>
        /// <param name="businessType">业务类型 business type (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelConfiguration.Client.ApiResponse<Result<string>>> ApiV2ModelConfigurationTemplateUploadModelTemplatePostAsyncWithHttpInfo (string muppName = default(string), string systemId = default(string), string libraryType = default(string), string businessType = default(string), string modelType = default(string))
        {

            DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelConfiguration.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (muppName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "muppName", muppName));
            }
            if (systemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "systemId", systemId));
            }
            if (libraryType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "libraryType", libraryType));
            }
            if (businessType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "businessType", businessType));
            }
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelConfiguration.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<string>>("/api/v2/model-configuration/template/upload-model-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigurationTemplateUploadModelTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
