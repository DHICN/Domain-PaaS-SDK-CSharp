/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.Identity.Client;
using DHICN.PAAS.SDK.Identity.Model;

namespace DHICN.PAAS.SDK.Identity.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IConnectApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 授权
        /// </summary>
        /// <remarks>
        /// 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV1ConnectAuthByMobilePost (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput));

        /// <summary>
        /// 授权
        /// </summary>
        /// <remarks>
        /// 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV1ConnectAuthByMobilePostWithHttpInfo (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput));
        /// <summary>
        /// 授权结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>AuthResultOutput</returns>
        Result<AuthResultOutput> ApiV1ConnectAuthResultGet (string key = default(string));

        /// <summary>
        /// 授权结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>ApiResponse of AuthResultOutput</returns>
        ApiResponse<Result<AuthResultOutput>> ApiV1ConnectAuthResultGetWithHttpInfo (string key = default(string));
        /// <summary>
        /// 获取授权二维码
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        void ApiV1ConnectQrcodeGet ();

        /// <summary>
        /// 获取授权二维码
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiV1ConnectQrcodeGetWithHttpInfo ();
        /// <summary>
        /// 授权-网页
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>InlineResponse200</returns>
        Result<InlineResponse200> ConnectTokenPost (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string));

        /// <summary>
        /// 授权-网页
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>ApiResponse of InlineResponse200</returns>
        ApiResponse<Result<InlineResponse200>> ConnectTokenPostWithHttpInfo (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IConnectApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 授权
        /// </summary>
        /// <remarks>
        /// 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV1ConnectAuthByMobilePostAsync (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput));

        /// <summary>
        /// 授权
        /// </summary>
        /// <remarks>
        /// 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV1ConnectAuthByMobilePostAsyncWithHttpInfo (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput));
        /// <summary>
        /// 授权结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>Task of AuthResultOutput</returns>
        System.Threading.Tasks.Task<Result<AuthResultOutput>> ApiV1ConnectAuthResultGetAsync (string key = default(string));

        /// <summary>
        /// 授权结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>Task of ApiResponse (AuthResultOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<AuthResultOutput>>> ApiV1ConnectAuthResultGetAsyncWithHttpInfo (string key = default(string));
        /// <summary>
        /// 获取授权二维码
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiV1ConnectQrcodeGetAsync ();

        /// <summary>
        /// 获取授权二维码
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1ConnectQrcodeGetAsyncWithHttpInfo ();
        /// <summary>
        /// 授权-网页
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>Task of InlineResponse200</returns>
        System.Threading.Tasks.Task<Result<InlineResponse200>> ConnectTokenPostAsync (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string));

        /// <summary>
        /// 授权-网页
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>Task of ApiResponse (InlineResponse200)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<InlineResponse200>>> ConnectTokenPostAsyncWithHttpInfo (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IConnectApi : IConnectApiSync, IConnectApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ConnectApi : IConnectApi
    {
        private DHICN.PAAS.SDK.Identity.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ConnectApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ConnectApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ConnectApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ConnectApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.Identity.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Identity.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.Identity.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ConnectApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ConnectApi(DHICN.PAAS.SDK.Identity.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.Identity.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Identity.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ConnectApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ConnectApi(DHICN.PAAS.SDK.Identity.Client.ISynchronousClient client,DHICN.PAAS.SDK.Identity.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.Identity.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.Identity.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 授权 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV1ConnectAuthByMobilePost (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<bool>> localVarResponse = ApiV1ConnectAuthByMobilePostWithHttpInfo(authByQrCodeInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 授权 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< bool >> ApiV1ConnectAuthByMobilePostWithHttpInfo (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = authByQrCodeInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v1/connect/auth-by-mobile", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ConnectAuthByMobilePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 授权 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV1ConnectAuthByMobilePostAsync (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV1ConnectAuthByMobilePostAsyncWithHttpInfo(authByQrCodeInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 授权 仅返回操作是否成功，具体授权的结果调用auth-result查看
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="authByQrCodeInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<bool>>> ApiV1ConnectAuthByMobilePostAsyncWithHttpInfo (AuthByQrCodeInput authByQrCodeInput = default(AuthByQrCodeInput))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = authByQrCodeInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v1/connect/auth-by-mobile", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ConnectAuthByMobilePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 授权结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>AuthResultOutput</returns>
        public Result<AuthResultOutput> ApiV1ConnectAuthResultGet (string key = default(string))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<AuthResultOutput>> localVarResponse = ApiV1ConnectAuthResultGetWithHttpInfo(key);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 授权结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>ApiResponse of AuthResultOutput</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< AuthResultOutput >> ApiV1ConnectAuthResultGetWithHttpInfo (string key = default(string))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (key != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "key", key));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< AuthResultOutput >>("/api/v1/connect/auth-result", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ConnectAuthResultGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 授权结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>Task of AuthResultOutput</returns>
        public async System.Threading.Tasks.Task<Result<AuthResultOutput>> ApiV1ConnectAuthResultGetAsync (string key = default(string))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<AuthResultOutput>> localVarResponse = await ApiV1ConnectAuthResultGetAsyncWithHttpInfo(key);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 授权结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="key"> (optional)</param>
        /// <returns>Task of ApiResponse (AuthResultOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<AuthResultOutput>>> ApiV1ConnectAuthResultGetAsyncWithHttpInfo (string key = default(string))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (key != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("", "key", key));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<AuthResultOutput>>("/api/v1/connect/auth-result", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ConnectAuthResultGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取授权二维码 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        public void ApiV1ConnectQrcodeGet ()
        {
             ApiV1ConnectQrcodeGetWithHttpInfo();
        }

        /// <summary>
        /// 获取授权二维码 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> ApiV1ConnectQrcodeGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result<Object>>("/api/v1/connect/qrcode", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ConnectQrcodeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取授权二维码 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiV1ConnectQrcodeGetAsync ()
        {
             await ApiV1ConnectQrcodeGetAsyncWithHttpInfo();

        }

        /// <summary>
        /// 获取授权二维码 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiV1ConnectQrcodeGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/v1/connect/qrcode", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ConnectQrcodeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 授权-网页 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>InlineResponse200</returns>
        public Result<InlineResponse200> ConnectTokenPost (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<InlineResponse200>> localVarResponse = ConnectTokenPostWithHttpInfo(tenantId, clientId, grantType, clientSecret, username, password);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 授权-网页 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>ApiResponse of InlineResponse200</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< InlineResponse200 >> ConnectTokenPostWithHttpInfo (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("TenantId", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(tenantId)); // header parameter
            }
            if (clientId != null)
            {
                localVarRequestOptions.FormParameters.Add("client_id", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(clientId)); // form parameter
            }
            if (grantType != null)
            {
                localVarRequestOptions.FormParameters.Add("grant_type", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(grantType)); // form parameter
            }
            if (clientSecret != null)
            {
                localVarRequestOptions.FormParameters.Add("client_secret", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(clientSecret)); // form parameter
            }
            if (username != null)
            {
                localVarRequestOptions.FormParameters.Add("username", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(username)); // form parameter
            }
            if (password != null)
            {
                localVarRequestOptions.FormParameters.Add("password", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(password)); // form parameter
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< InlineResponse200 >>("/connect/token", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ConnectTokenPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 授权-网页 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>Task of InlineResponse200</returns>
        public async System.Threading.Tasks.Task<Result<InlineResponse200>> ConnectTokenPostAsync (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<InlineResponse200>> localVarResponse = await ConnectTokenPostAsyncWithHttpInfo(tenantId, clientId, grantType, clientSecret, username, password);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 授权-网页 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="clientId"> (optional)</param>
        /// <param name="grantType"> (optional)</param>
        /// <param name="clientSecret"> (optional)</param>
        /// <param name="username"> (optional)</param>
        /// <param name="password"> (optional)</param>
        /// <returns>Task of ApiResponse (InlineResponse200)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<InlineResponse200>>> ConnectTokenPostAsyncWithHttpInfo (string tenantId = default(string), string clientId = default(string), string grantType = default(string), string clientSecret = default(string), string username = default(string), string password = default(string))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.HeaderParameters.Add("TenantId", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(tenantId)); // header parameter
            }
            if (clientId != null)
            {
                localVarRequestOptions.FormParameters.Add("client_id", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(clientId)); // form parameter
            }
            if (grantType != null)
            {
                localVarRequestOptions.FormParameters.Add("grant_type", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(grantType)); // form parameter
            }
            if (clientSecret != null)
            {
                localVarRequestOptions.FormParameters.Add("client_secret", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(clientSecret)); // form parameter
            }
            if (username != null)
            {
                localVarRequestOptions.FormParameters.Add("username", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(username)); // form parameter
            }
            if (password != null)
            {
                localVarRequestOptions.FormParameters.Add("password", DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToString(password)); // form parameter
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<InlineResponse200>>("/connect/token", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ConnectTokenPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
