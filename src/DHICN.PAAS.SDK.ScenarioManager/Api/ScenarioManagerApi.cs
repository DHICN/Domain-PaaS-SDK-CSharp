/* 
 * scenario-manager-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ScenarioManager.Client;
using DHICN.PAAS.SDK.ScenarioManager.Model;

namespace DHICN.PAAS.SDK.ScenarioManager.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioManagerApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ScenarioManagerScenarioCalculatedstatusGet (string version, string scenarioCode = default(string));

        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ScenarioManagerScenarioCalculatedstatusGetWithHttpInfo (string version, string scenarioCode = default(string));
        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>List&lt;Scenario&gt;</returns>
        Result<List<Scenario>> ApiV2ScenarioManagerScenarioChildrenGet (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of List&lt;Scenario&gt;</returns>
        ApiResponse<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioChildrenGetWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioCodeGet (string version, string scenarioCode = default(string));

        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioCodeGetWithHttpInfo (string version, string scenarioCode = default(string));
        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioCreateByFilePost (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2));

        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateByFilePostWithHttpInfo (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2));
        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioCreateByGroupPost (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));

        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateByGroupPostWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));
        /// <summary>
        /// 创建一个新的方案 Create a new scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioCreatePost (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2));

        /// <summary>
        /// 创建一个新的方案 Create a new scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioCreatePostWithHttpInfo (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2));
        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioCreateTemplatePost (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2));

        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateTemplatePostWithHttpInfo (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2));
        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ScenarioManagerScenarioDeletePost (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));

        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ScenarioManagerScenarioDeletePostWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));
        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioDfsCreateByGroupPost (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));

        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioDfsCreateByGroupPostWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));
        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioDfsCreateTemplatePost (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2));

        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioDfsCreateTemplatePostWithHttpInfo (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2));
        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ScenarioManagerScenarioDfsDeletePost (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));

        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ScenarioManagerScenarioDfsDeletePostWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));
        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioGet (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioGetWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ModelFileResult</returns>
        Result<ModelFileResult> ApiV2ScenarioManagerScenarioModelfileGet (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of ModelFileResult</returns>
        ApiResponse<Result<ModelFileResult>> ApiV2ScenarioManagerScenarioModelfileGetWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 重命名方案 Rename a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioRenamePost (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara));

        /// <summary>
        /// 重命名方案 Rename a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioRenamePostWithHttpInfo (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara));
        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ModelFileResult</returns>
        Result<ModelFileResult> ApiV2ScenarioManagerScenarioScenariopathGet (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of ModelFileResult</returns>
        ApiResponse<Result<ModelFileResult>> ApiV2ScenarioManagerScenarioScenariopathGetWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>List&lt;Scenario&gt;</returns>
        Result<List<Scenario>> ApiV2ScenarioManagerScenarioSubtypeGet (string version, string subType = default(string));

        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>ApiResponse of List&lt;Scenario&gt;</returns>
        ApiResponse<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioSubtypeGetWithHttpInfo (string version, string subType = default(string));
        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Scenario</returns>
        Result<Scenario> ApiV2ScenarioManagerScenarioTemplateGet (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        ApiResponse<Result<Scenario>> ApiV2ScenarioManagerScenarioTemplateGetWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>List&lt;Scenario&gt;</returns>
        Result<List<Scenario>> ApiV2ScenarioManagerScenarioTemplatelistGet (string version);

        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>ApiResponse of List&lt;Scenario&gt;</returns>
        ApiResponse<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioTemplatelistGetWithHttpInfo (string version);
        /// <summary>
        /// 更新方案基本信息 Update Scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ScenarioManagerScenarioUpdatePost (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara));

        /// <summary>
        /// 更新方案基本信息 Update Scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ScenarioManagerScenarioUpdatePostWithHttpInfo (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara));
        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ScenarioManagerScenarioUpdateScenarioModelPost (string version, Scenario scenario = default(Scenario));

        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ScenarioManagerScenarioUpdateScenarioModelPostWithHttpInfo (string version, Scenario scenario = default(Scenario));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioManagerApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioCalculatedstatusGetAsync (string version, string scenarioCode = default(string));

        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioCalculatedstatusGetAsyncWithHttpInfo (string version, string scenarioCode = default(string));
        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>Task of List&lt;Scenario&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioChildrenGetAsync (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Scenario&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Scenario>>>> ApiV2ScenarioManagerScenarioChildrenGetAsyncWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCodeGetAsync (string version, string scenarioCode = default(string));

        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCodeGetAsyncWithHttpInfo (string version, string scenarioCode = default(string));
        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateByFilePostAsync (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2));

        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreateByFilePostAsyncWithHttpInfo (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2));
        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateByGroupPostAsync (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));

        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreateByGroupPostAsyncWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));
        /// <summary>
        /// 创建一个新的方案 Create a new scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreatePostAsync (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2));

        /// <summary>
        /// 创建一个新的方案 Create a new scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreatePostAsyncWithHttpInfo (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2));
        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateTemplatePostAsync (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2));

        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreateTemplatePostAsyncWithHttpInfo (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2));
        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioDeletePostAsync (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));

        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioDeletePostAsyncWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));
        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioDfsCreateByGroupPostAsync (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));

        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioDfsCreateByGroupPostAsyncWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2));
        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioDfsCreateTemplatePostAsync (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2));

        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioDfsCreateTemplatePostAsyncWithHttpInfo (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2));
        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioDfsDeletePostAsync (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));

        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioDfsDeletePostAsyncWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara));
        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioGetAsync (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioGetAsyncWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ModelFileResult</returns>
        System.Threading.Tasks.Task<Result<ModelFileResult>> ApiV2ScenarioManagerScenarioModelfileGetAsync (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (ModelFileResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelFileResult>>> ApiV2ScenarioManagerScenarioModelfileGetAsyncWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 重命名方案 Rename a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioRenamePostAsync (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara));

        /// <summary>
        /// 重命名方案 Rename a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioRenamePostAsyncWithHttpInfo (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara));
        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ModelFileResult</returns>
        System.Threading.Tasks.Task<Result<ModelFileResult>> ApiV2ScenarioManagerScenarioScenariopathGetAsync (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (ModelFileResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelFileResult>>> ApiV2ScenarioManagerScenarioScenariopathGetAsyncWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>Task of List&lt;Scenario&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioSubtypeGetAsync (string version, string subType = default(string));

        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Scenario&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Scenario>>>> ApiV2ScenarioManagerScenarioSubtypeGetAsyncWithHttpInfo (string version, string subType = default(string));
        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of Scenario</returns>
        System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioTemplateGetAsync (string version, string scenarioId = default(string));

        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioTemplateGetAsyncWithHttpInfo (string version, string scenarioId = default(string));
        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>Task of List&lt;Scenario&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioTemplatelistGetAsync (string version);

        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>Task of ApiResponse (List&lt;Scenario&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Scenario>>>> ApiV2ScenarioManagerScenarioTemplatelistGetAsyncWithHttpInfo (string version);
        /// <summary>
        /// 更新方案基本信息 Update Scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioUpdatePostAsync (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara));

        /// <summary>
        /// 更新方案基本信息 Update Scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioUpdatePostAsyncWithHttpInfo (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara));
        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioUpdateScenarioModelPostAsync (string version, Scenario scenario = default(Scenario));

        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioUpdateScenarioModelPostAsyncWithHttpInfo (string version, Scenario scenario = default(Scenario));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioManagerApi : IScenarioManagerApiSync, IScenarioManagerApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ScenarioManagerApi : IScenarioManagerApi
    {
        private DHICN.PAAS.SDK.ScenarioManager.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioManagerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ScenarioManagerApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioManagerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ScenarioManagerApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ScenarioManager.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioManager.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ScenarioManager.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioManager.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioManager.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioManager.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioManagerApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ScenarioManagerApi(DHICN.PAAS.SDK.ScenarioManager.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ScenarioManager.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioManager.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioManager.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioManager.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ScenarioManager.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioManagerApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ScenarioManagerApi(DHICN.PAAS.SDK.ScenarioManager.Client.ISynchronousClient client,DHICN.PAAS.SDK.ScenarioManager.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ScenarioManager.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioManager.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioManager.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ScenarioManager.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ScenarioManagerScenarioCalculatedstatusGet (string version, string scenarioCode = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ScenarioManagerScenarioCalculatedstatusGetWithHttpInfo(version, scenarioCode);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< bool >> ApiV2ScenarioManagerScenarioCalculatedstatusGetWithHttpInfo (string version, string scenarioCode = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCalculatedstatusGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioCode", scenarioCode));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< bool >>("/api/v2/scenario-manager/scenario/calculatedstatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCalculatedstatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioCalculatedstatusGetAsync (string version, string scenarioCode = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ScenarioManagerScenarioCalculatedstatusGetAsyncWithHttpInfo(version, scenarioCode);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案的计算状态 Get scenario&#39;s calculate status 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案的代码 scenario&#39;s code (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioCalculatedstatusGetAsyncWithHttpInfo (string version, string scenarioCode = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCalculatedstatusGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioCode", scenarioCode));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<bool>>("/api/v2/scenario-manager/scenario/calculatedstatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCalculatedstatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>List&lt;Scenario&gt;</returns>
        public Result<List<Scenario>> ApiV2ScenarioManagerScenarioChildrenGet (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>> localVarResponse = ApiV2ScenarioManagerScenarioChildrenGetWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of List&lt;Scenario&gt;</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< List<Scenario> >> ApiV2ScenarioManagerScenarioChildrenGetWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioChildrenGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Scenario> >>("/api/v2/scenario-manager/scenario/children", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioChildrenGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>Task of List&lt;Scenario&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioChildrenGetAsync (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>> localVarResponse = await ApiV2ScenarioManagerScenarioChildrenGetAsyncWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据父方案ID获取其下子方案的列表 Get child scenarios by parent scenario&#39;s Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">父方案ID Parent scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Scenario&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>>> ApiV2ScenarioManagerScenarioChildrenGetAsyncWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioChildrenGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Scenario>>>("/api/v2/scenario-manager/scenario/children", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioChildrenGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioCodeGet (string version, string scenarioCode = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioCodeGetWithHttpInfo(version, scenarioCode);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioCodeGetWithHttpInfo (string version, string scenarioCode = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCodeGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioCode", scenarioCode));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Scenario >>("/api/v2/scenario-manager/scenario/code", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCodeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCodeGetAsync (string version, string scenarioCode = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioCodeGetAsyncWithHttpInfo(version, scenarioCode);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案代码获取方案基本信息 Get scenario information by code 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioCode">方案代码 Scenario&#39;s code (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCodeGetAsyncWithHttpInfo (string version, string scenarioCode = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCodeGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioCode", scenarioCode));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/code", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCodeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioCreateByFilePost (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioCreateByFilePostWithHttpInfo(version, createScenarioFromFilePara2);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioCreateByFilePostWithHttpInfo (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreateByFilePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioFromFilePara2;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Scenario >>("/api/v2/scenario-manager/scenario/create-by-file", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreateByFilePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateByFilePostAsync (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioCreateByFilePostAsyncWithHttpInfo(version, createScenarioFromFilePara2);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 基于本地模型文件创建一个新的方案 Create a new scenario with a local model file 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioFromFilePara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreateByFilePostAsyncWithHttpInfo (string version, CreateScenarioFromFilePara2 createScenarioFromFilePara2 = default(CreateScenarioFromFilePara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreateByFilePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioFromFilePara2;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/create-by-file", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreateByFilePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioCreateByGroupPost (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioCreateByGroupPostWithHttpInfo(version, createScenarioByGroupPara2);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioCreateByGroupPostWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreateByGroupPost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioByGroupPara2;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Scenario >>("/api/v2/scenario-manager/scenario/create-by-group", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreateByGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateByGroupPostAsync (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioCreateByGroupPostAsyncWithHttpInfo(version, createScenarioByGroupPara2);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 在指定方案组下创建一个新的方案 Create a new scenario under a specified group 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreateByGroupPostAsyncWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreateByGroupPost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioByGroupPara2;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/create-by-group", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreateByGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建一个新的方案 Create a new scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioCreatePost (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioCreatePostWithHttpInfo(version, createScenarioPara2);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建一个新的方案 Create a new scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioCreatePostWithHttpInfo (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreatePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioPara2;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Scenario >>("/api/v2/scenario-manager/scenario/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建一个新的方案 Create a new scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreatePostAsync (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioCreatePostAsyncWithHttpInfo(version, createScenarioPara2);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建一个新的方案 Create a new scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreatePostAsyncWithHttpInfo (string version, CreateScenarioPara2 createScenarioPara2 = default(CreateScenarioPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreatePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioPara2;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioCreateTemplatePost (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioCreateTemplatePostWithHttpInfo(version, createTemplateScenarioPara2);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioCreateTemplatePostWithHttpInfo (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreateTemplatePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createTemplateScenarioPara2;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Scenario >>("/api/v2/scenario-manager/scenario/create-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreateTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioCreateTemplatePostAsync (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioCreateTemplatePostAsyncWithHttpInfo(version, createTemplateScenarioPara2);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建一个新的模板方案 Create a new template scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioCreateTemplatePostAsyncWithHttpInfo (string version, CreateTemplateScenarioPara2 createTemplateScenarioPara2 = default(CreateTemplateScenarioPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioCreateTemplatePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createTemplateScenarioPara2;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/create-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioCreateTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ScenarioManagerScenarioDeletePost (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ScenarioManagerScenarioDeletePostWithHttpInfo(version, deleteScenarioPara);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< bool >> ApiV2ScenarioManagerScenarioDeletePostWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDeletePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = deleteScenarioPara;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v2/scenario-manager/scenario/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioDeletePostAsync (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ScenarioManagerScenarioDeletePostAsyncWithHttpInfo(version, deleteScenarioPara);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案ID删除方案 Delete scenario by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioDeletePostAsyncWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDeletePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = deleteScenarioPara;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v2/scenario-manager/scenario/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioDfsCreateByGroupPost (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioDfsCreateByGroupPostWithHttpInfo(version, createScenarioByGroupPara2);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioDfsCreateByGroupPostWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDfsCreateByGroupPost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioByGroupPara2;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Scenario >>("/api/v2/scenario-manager/scenario/dfs/create-by-group", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDfsCreateByGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioDfsCreateByGroupPostAsync (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioDfsCreateByGroupPostAsyncWithHttpInfo(version, createScenarioByGroupPara2);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 基于分布式文件系统，在指定方案组下创建一个新的方案 Create a new scenario under a specified group based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createScenarioByGroupPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioDfsCreateByGroupPostAsyncWithHttpInfo (string version, CreateScenarioByGroupPara2 createScenarioByGroupPara2 = default(CreateScenarioByGroupPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDfsCreateByGroupPost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createScenarioByGroupPara2;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/dfs/create-by-group", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDfsCreateByGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioDfsCreateTemplatePost (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioDfsCreateTemplatePostWithHttpInfo(version, createTemplateScenarioByMinIoPara2);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioDfsCreateTemplatePostWithHttpInfo (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDfsCreateTemplatePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createTemplateScenarioByMinIoPara2;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Scenario >>("/api/v2/scenario-manager/scenario/dfs/create-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDfsCreateTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioDfsCreateTemplatePostAsync (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioDfsCreateTemplatePostAsyncWithHttpInfo(version, createTemplateScenarioByMinIoPara2);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 基于分布式文件系统，创建模板方案 Create a new template scenario based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="createTemplateScenarioByMinIoPara2"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioDfsCreateTemplatePostAsyncWithHttpInfo (string version, CreateTemplateScenarioByMinIoPara2 createTemplateScenarioByMinIoPara2 = default(CreateTemplateScenarioByMinIoPara2))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDfsCreateTemplatePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = createTemplateScenarioByMinIoPara2;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/dfs/create-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDfsCreateTemplatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ScenarioManagerScenarioDfsDeletePost (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ScenarioManagerScenarioDfsDeletePostWithHttpInfo(version, deleteScenarioPara);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< bool >> ApiV2ScenarioManagerScenarioDfsDeletePostWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDfsDeletePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = deleteScenarioPara;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v2/scenario-manager/scenario/dfs/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDfsDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioDfsDeletePostAsync (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ScenarioManagerScenarioDfsDeletePostAsyncWithHttpInfo(version, deleteScenarioPara);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 基于分布式文件系统，根据方案ID删除方案 Delete scenario by Id based on the distributed file system 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="deleteScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioDfsDeletePostAsyncWithHttpInfo (string version, DeleteScenarioPara deleteScenarioPara = default(DeleteScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioDfsDeletePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = deleteScenarioPara;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v2/scenario-manager/scenario/dfs/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioDfsDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioGet (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioGetWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioGetWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Scenario >>("/api/v2/scenario-manager/scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioGetAsync (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioGetAsyncWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案ID获取方案基本信息 Get scenario information by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioGetAsyncWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ModelFileResult</returns>
        public Result<ModelFileResult> ApiV2ScenarioManagerScenarioModelfileGet (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<ModelFileResult>> localVarResponse = ApiV2ScenarioManagerScenarioModelfileGetWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of ModelFileResult</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< ModelFileResult >> ApiV2ScenarioManagerScenarioModelfileGetWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioModelfileGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ModelFileResult >>("/api/v2/scenario-manager/scenario/modelfile", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioModelfileGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ModelFileResult</returns>
        public async System.Threading.Tasks.Task<Result<ModelFileResult>> ApiV2ScenarioManagerScenarioModelfileGetAsync (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<ModelFileResult>> localVarResponse = await ApiV2ScenarioManagerScenarioModelfileGetAsyncWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案ID获取方案的主模型文件绝对路径 Get scenario&#39;s absolute model file path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (ModelFileResult)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<ModelFileResult>>> ApiV2ScenarioManagerScenarioModelfileGetAsyncWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioModelfileGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ModelFileResult>>("/api/v2/scenario-manager/scenario/modelfile", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioModelfileGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 重命名方案 Rename a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioRenamePost (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioRenamePostWithHttpInfo(version, renameScenarioPara);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 重命名方案 Rename a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioRenamePostWithHttpInfo (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioRenamePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = renameScenarioPara;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Scenario >>("/api/v2/scenario-manager/scenario/rename", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioRenamePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 重命名方案 Rename a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioRenamePostAsync (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioRenamePostAsyncWithHttpInfo(version, renameScenarioPara);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 重命名方案 Rename a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="renameScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioRenamePostAsyncWithHttpInfo (string version, RenameScenarioPara renameScenarioPara = default(RenameScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioRenamePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = renameScenarioPara;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/rename", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioRenamePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ModelFileResult</returns>
        public Result<ModelFileResult> ApiV2ScenarioManagerScenarioScenariopathGet (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<ModelFileResult>> localVarResponse = ApiV2ScenarioManagerScenarioScenariopathGetWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of ModelFileResult</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< ModelFileResult >> ApiV2ScenarioManagerScenarioScenariopathGetWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioScenariopathGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ModelFileResult >>("/api/v2/scenario-manager/scenario/scenariopath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioScenariopathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ModelFileResult</returns>
        public async System.Threading.Tasks.Task<Result<ModelFileResult>> ApiV2ScenarioManagerScenarioScenariopathGetAsync (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<ModelFileResult>> localVarResponse = await ApiV2ScenarioManagerScenarioScenariopathGetAsyncWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案ID获取方案文件夹的绝对路径 Get scenario&#39;s absolute folder path by Id 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (ModelFileResult)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<ModelFileResult>>> ApiV2ScenarioManagerScenarioScenariopathGetAsyncWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioScenariopathGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ModelFileResult>>("/api/v2/scenario-manager/scenario/scenariopath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioScenariopathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>List&lt;Scenario&gt;</returns>
        public Result<List<Scenario>> ApiV2ScenarioManagerScenarioSubtypeGet (string version, string subType = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>> localVarResponse = ApiV2ScenarioManagerScenarioSubtypeGetWithHttpInfo(version, subType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>ApiResponse of List&lt;Scenario&gt;</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< List<Scenario> >> ApiV2ScenarioManagerScenarioSubtypeGetWithHttpInfo (string version, string subType = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioSubtypeGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (subType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "subType", subType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Scenario> >>("/api/v2/scenario-manager/scenario/subtype", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioSubtypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>Task of List&lt;Scenario&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioSubtypeGetAsync (string version, string subType = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>> localVarResponse = await ApiV2ScenarioManagerScenarioSubtypeGetAsyncWithHttpInfo(version, subType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据子类型获取方案列表 Get scenarios by subtype 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="subType">方案子类型 Scenario&#39;s subtype (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Scenario&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>>> ApiV2ScenarioManagerScenarioSubtypeGetAsyncWithHttpInfo (string version, string subType = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioSubtypeGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (subType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "subType", subType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Scenario>>>("/api/v2/scenario-manager/scenario/subtype", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioSubtypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Scenario</returns>
        public Result<Scenario> ApiV2ScenarioManagerScenarioTemplateGet (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = ApiV2ScenarioManagerScenarioTemplateGetWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>ApiResponse of Scenario</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< Scenario >> ApiV2ScenarioManagerScenarioTemplateGetWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioTemplateGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Scenario >>("/api/v2/scenario-manager/scenario/template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioTemplateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of Scenario</returns>
        public async System.Threading.Tasks.Task<Result<Scenario>> ApiV2ScenarioManagerScenarioTemplateGetAsync (string version, string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>> localVarResponse = await ApiV2ScenarioManagerScenarioTemplateGetAsyncWithHttpInfo(version, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案ID获取其对应的模板方案 Get template scenario (is_template&#x3D;1) of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenarioId">方案ID Scenario&#39;s Id (optional)</param>
        /// <returns>Task of ApiResponse (Scenario)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<Scenario>>> ApiV2ScenarioManagerScenarioTemplateGetAsyncWithHttpInfo (string version, string scenarioId = default(string))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioTemplateGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Scenario>>("/api/v2/scenario-manager/scenario/template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioTemplateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>List&lt;Scenario&gt;</returns>
        public Result<List<Scenario>> ApiV2ScenarioManagerScenarioTemplatelistGet (string version)
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>> localVarResponse = ApiV2ScenarioManagerScenarioTemplatelistGetWithHttpInfo(version);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>ApiResponse of List&lt;Scenario&gt;</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< List<Scenario> >> ApiV2ScenarioManagerScenarioTemplatelistGetWithHttpInfo (string version)
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioTemplatelistGet");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Scenario> >>("/api/v2/scenario-manager/scenario/templatelist", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioTemplatelistGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>Task of List&lt;Scenario&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Scenario>>> ApiV2ScenarioManagerScenarioTemplatelistGetAsync (string version)
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>> localVarResponse = await ApiV2ScenarioManagerScenarioTemplatelistGetAsyncWithHttpInfo(version);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有的模板方案 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <returns>Task of ApiResponse (List&lt;Scenario&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<List<Scenario>>>> ApiV2ScenarioManagerScenarioTemplatelistGetAsyncWithHttpInfo (string version)
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioTemplatelistGet");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Scenario>>>("/api/v2/scenario-manager/scenario/templatelist", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioTemplatelistGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新方案基本信息 Update Scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ScenarioManagerScenarioUpdatePost (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ScenarioManagerScenarioUpdatePostWithHttpInfo(version, updateScenarioPara);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新方案基本信息 Update Scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< bool >> ApiV2ScenarioManagerScenarioUpdatePostWithHttpInfo (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioUpdatePost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = updateScenarioPara;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v2/scenario-manager/scenario/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新方案基本信息 Update Scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioUpdatePostAsync (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ScenarioManagerScenarioUpdatePostAsyncWithHttpInfo(version, updateScenarioPara);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新方案基本信息 Update Scenarios 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="updateScenarioPara"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioUpdatePostAsyncWithHttpInfo (string version, UpdateScenarioPara updateScenarioPara = default(UpdateScenarioPara))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioUpdatePost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = updateScenarioPara;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v2/scenario-manager/scenario/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ScenarioManagerScenarioUpdateScenarioModelPost (string version, Scenario scenario = default(Scenario))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ScenarioManagerScenarioUpdateScenarioModelPostWithHttpInfo(version, scenario);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result< bool >> ApiV2ScenarioManagerScenarioUpdateScenarioModelPostWithHttpInfo (string version, Scenario scenario = default(Scenario))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioUpdateScenarioModelPost");

            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = scenario;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v2/scenario-manager/scenario/update-scenario-model", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioUpdateScenarioModelPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ScenarioManagerScenarioUpdateScenarioModelPostAsync (string version, Scenario scenario = default(Scenario))
        {
             DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ScenarioManagerScenarioUpdateScenarioModelPostAsyncWithHttpInfo(version, scenario);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新方案，同时更新其对应的模型文件 Update scenario along with it&#39;s model files 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="version"></param>
        /// <param name="scenario"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioManager.Client.ApiResponse<Result<bool>>> ApiV2ScenarioManagerScenarioUpdateScenarioModelPostAsyncWithHttpInfo (string version, Scenario scenario = default(Scenario))
        {
            // verify the required parameter 'version' is set
            if (version == null)
                throw new DHICN.PAAS.SDK.ScenarioManager.Client.ApiException(400, "Missing required parameter 'version' when calling ScenarioManagerApi->ApiV2ScenarioManagerScenarioUpdateScenarioModelPost");


            DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("version", DHICN.PAAS.SDK.ScenarioManager.Client.ClientUtils.ParameterToString(version)); // path parameter
            localVarRequestOptions.Data = scenario;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v2/scenario-manager/scenario/update-scenario-model", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ScenarioManagerScenarioUpdateScenarioModelPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
