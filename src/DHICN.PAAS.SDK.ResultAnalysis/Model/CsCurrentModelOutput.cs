/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ResultAnalysis.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ResultAnalysis.Model
{
    /// <summary>
    /// CsCurrentModelOutput
    /// </summary>
    [DataContract]
    public partial class CsCurrentModelOutput :  IEquatable<CsCurrentModelOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CsCurrentModelOutput" /> class.
        /// </summary>
        /// <param name="modelIds">modelIds.</param>
        /// <param name="timeSeries">timeSeries.</param>
        /// <param name="resultData">resultData.</param>
        public CsCurrentModelOutput(List<string> modelIds = default(List<string>), List<DateTime> timeSeries = default(List<DateTime>), List<List<double>> resultData = default(List<List<double>>))
        {
            this.ModelIds = modelIds;
            this.TimeSeries = timeSeries;
            this.ResultData = resultData;
        }
        
        /// <summary>
        /// Gets or Sets ModelIds
        /// </summary>
        [DataMember(Name="modelIds", EmitDefaultValue=true)]
        public List<string> ModelIds { get; set; }

        /// <summary>
        /// Gets or Sets TimeSeries
        /// </summary>
        [DataMember(Name="timeSeries", EmitDefaultValue=true)]
        public List<DateTime> TimeSeries { get; set; }

        /// <summary>
        /// Gets or Sets ResultData
        /// </summary>
        [DataMember(Name="resultData", EmitDefaultValue=true)]
        public List<List<double>> ResultData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CsCurrentModelOutput {\n");
            sb.Append("  ModelIds: ").Append(ModelIds).Append("\n");
            sb.Append("  TimeSeries: ").Append(TimeSeries).Append("\n");
            sb.Append("  ResultData: ").Append(ResultData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CsCurrentModelOutput);
        }

        /// <summary>
        /// Returns true if CsCurrentModelOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of CsCurrentModelOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CsCurrentModelOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ModelIds == input.ModelIds ||
                    this.ModelIds != null &&
                    input.ModelIds != null &&
                    this.ModelIds.SequenceEqual(input.ModelIds)
                ) && 
                (
                    this.TimeSeries == input.TimeSeries ||
                    this.TimeSeries != null &&
                    input.TimeSeries != null &&
                    this.TimeSeries.SequenceEqual(input.TimeSeries)
                ) && 
                (
                    this.ResultData == input.ResultData ||
                    this.ResultData != null &&
                    input.ResultData != null &&
                    this.ResultData.SequenceEqual(input.ResultData)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ModelIds != null)
                    hashCode = hashCode * 59 + this.ModelIds.GetHashCode();
                if (this.TimeSeries != null)
                    hashCode = hashCode * 59 + this.TimeSeries.GetHashCode();
                if (this.ResultData != null)
                    hashCode = hashCode * 59 + this.ResultData.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
