/* 
 * model-configuration-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ModelInformation.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ModelInformation.Model
{
    /// <summary>
    /// CreateTemplateFileInputV2
    /// </summary>
    [DataContract]
    public partial class CreateTemplateFileInputV2 :  IEquatable<CreateTemplateFileInputV2>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets LibraryType
        /// </summary>
        [DataMember(Name="libraryType", EmitDefaultValue=false)]
        public LibraryTypeEnum? LibraryType { get; set; }
        /// <summary>
        /// Gets or Sets BusinessType
        /// </summary>
        [DataMember(Name="businessType", EmitDefaultValue=false)]
        public BusinessTypeEnum? BusinessType { get; set; }
        /// <summary>
        /// Gets or Sets ModelType
        /// </summary>
        [DataMember(Name="modelType", EmitDefaultValue=false)]
        public ModelTypeEnum? ModelType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateTemplateFileInputV2" /> class.
        /// </summary>
        /// <param name="muppName">模型文件名称 model file name without path.</param>
        /// <param name="fileId">上传的文件的ID upload file id.</param>
        /// <param name="systemId">系统ID system id.</param>
        /// <param name="libraryType">libraryType.</param>
        /// <param name="businessType">businessType.</param>
        /// <param name="modelType">modelType.</param>
        public CreateTemplateFileInputV2(string muppName = default(string), Guid fileId = default(Guid), string systemId = default(string), LibraryTypeEnum? libraryType = default(LibraryTypeEnum?), BusinessTypeEnum? businessType = default(BusinessTypeEnum?), ModelTypeEnum? modelType = default(ModelTypeEnum?))
        {
            this.MuppName = muppName;
            this.FileId = fileId;
            this.SystemId = systemId;
            this.LibraryType = libraryType;
            this.BusinessType = businessType;
            this.ModelType = modelType;
        }
        
        /// <summary>
        /// 模型文件名称 model file name without path
        /// </summary>
        /// <value>模型文件名称 model file name without path</value>
        [DataMember(Name="muppName", EmitDefaultValue=true)]
        public string MuppName { get; set; }

        /// <summary>
        /// 上传的文件的ID upload file id
        /// </summary>
        /// <value>上传的文件的ID upload file id</value>
        [DataMember(Name="fileId", EmitDefaultValue=false)]
        public Guid FileId { get; set; }

        /// <summary>
        /// 系统ID system id
        /// </summary>
        /// <value>系统ID system id</value>
        [DataMember(Name="systemId", EmitDefaultValue=true)]
        public string SystemId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateTemplateFileInputV2 {\n");
            sb.Append("  MuppName: ").Append(MuppName).Append("\n");
            sb.Append("  FileId: ").Append(FileId).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  LibraryType: ").Append(LibraryType).Append("\n");
            sb.Append("  BusinessType: ").Append(BusinessType).Append("\n");
            sb.Append("  ModelType: ").Append(ModelType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateTemplateFileInputV2);
        }

        /// <summary>
        /// Returns true if CreateTemplateFileInputV2 instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateTemplateFileInputV2 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateTemplateFileInputV2 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MuppName == input.MuppName ||
                    (this.MuppName != null &&
                    this.MuppName.Equals(input.MuppName))
                ) && 
                (
                    this.FileId == input.FileId ||
                    (this.FileId != null &&
                    this.FileId.Equals(input.FileId))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.LibraryType == input.LibraryType ||
                    this.LibraryType.Equals(input.LibraryType)
                ) && 
                (
                    this.BusinessType == input.BusinessType ||
                    this.BusinessType.Equals(input.BusinessType)
                ) && 
                (
                    this.ModelType == input.ModelType ||
                    this.ModelType.Equals(input.ModelType)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MuppName != null)
                    hashCode = hashCode * 59 + this.MuppName.GetHashCode();
                if (this.FileId != null)
                    hashCode = hashCode * 59 + this.FileId.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                hashCode = hashCode * 59 + this.LibraryType.GetHashCode();
                hashCode = hashCode * 59 + this.BusinessType.GetHashCode();
                hashCode = hashCode * 59 + this.ModelType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
