/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.WWTPPaasMainBusServiceSDK.Model
{
    /// <summary>
    /// WqSimulationIndicatorInput
    /// </summary>
    [DataContract]
    public partial class WqSimulationIndicatorInput :  IEquatable<WqSimulationIndicatorInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WqSimulationIndicatorInput" /> class.
        /// </summary>
        /// <param name="id">指标ID indicator id.</param>
        /// <param name="isDisplay">是否展示 if display at the front end.</param>
        public WqSimulationIndicatorInput(Guid id = default(Guid), bool isDisplay = default(bool))
        {
            this.Id = id;
            this.IsDisplay = isDisplay;
        }
        
        /// <summary>
        /// 指标ID indicator id
        /// </summary>
        /// <value>指标ID indicator id</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// 是否展示 if display at the front end
        /// </summary>
        /// <value>是否展示 if display at the front end</value>
        [DataMember(Name="isDisplay", EmitDefaultValue=false)]
        public bool IsDisplay { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WqSimulationIndicatorInput {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  IsDisplay: ").Append(IsDisplay).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WqSimulationIndicatorInput);
        }

        /// <summary>
        /// Returns true if WqSimulationIndicatorInput instances are equal
        /// </summary>
        /// <param name="input">Instance of WqSimulationIndicatorInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WqSimulationIndicatorInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.IsDisplay == input.IsDisplay ||
                    this.IsDisplay.Equals(input.IsDisplay)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                hashCode = hashCode * 59 + this.IsDisplay.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
