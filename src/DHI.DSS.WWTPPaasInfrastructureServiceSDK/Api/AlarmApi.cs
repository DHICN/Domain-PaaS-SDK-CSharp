/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client;
using DHI.DSS.WWTPPaasInfrastructureServiceSDK.Model;

namespace DHI.DSS.WWTPPaasInfrastructureServiceSDK.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAlarmApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 添加报警配置 Add alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAlarmAddAlarmConfigsPost (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));

        /// <summary>
        /// 添加报警配置 Add alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAlarmAddAlarmConfigsPostWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));
        /// <summary>
        /// 添加报警日志 Add alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAlarmAddAlarmLogsPost (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>));

        /// <summary>
        /// 添加报警日志 Add alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAlarmAddAlarmLogsPostWithHttpInfo (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>));
        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAlarmDeleteAlarmConfigsPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAlarmDeleteAlarmConfigsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAlarmDeleteAlarmLogsPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAlarmDeleteAlarmLogsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        Result<List<AlarmConfigInOut>> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGet (int? grade = default(int?), string indicator = default(string));

        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        ApiResponse<Result<List<AlarmConfigInOut>>> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetWithHttpInfo (int? grade = default(int?), string indicator = default(string));
        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        Result<List<AlarmConfigInOut>> ApiAlarmGetAlarmConfigsByGradeGet (int? grade = default(int?));

        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        ApiResponse<Result<List<AlarmConfigInOut>>> ApiAlarmGetAlarmConfigsByGradeGetWithHttpInfo (int? grade = default(int?));
        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition
        /// </summary>
        /// <remarks>
        /// 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>List&lt;AlarmLogInout&gt;</returns>
        Result<List<AlarmLogInout>> ApiAlarmGetAlarmLogsByConditionPost (AlarmLogInput alarmLogInput = default(AlarmLogInput));

        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition
        /// </summary>
        /// <remarks>
        /// 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmLogInout&gt;</returns>
        ApiResponse<Result<List<AlarmLogInout>>> ApiAlarmGetAlarmLogsByConditionPostWithHttpInfo (AlarmLogInput alarmLogInput = default(AlarmLogInput));
        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>List&lt;AlarmLogInout&gt;</returns>
        Result<List<AlarmLogInout>> ApiAlarmGetAlarmLogsByGradeGet (int? grade = default(int?));

        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmLogInout&gt;</returns>
        ApiResponse<Result<List<AlarmLogInout>>> ApiAlarmGetAlarmLogsByGradeGetWithHttpInfo (int? grade = default(int?));
        /// <summary>
        /// 获取所有报警配置 Get all alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        Result<List<AlarmConfigInOut>> ApiAlarmGetAllAlarmConfigsGet ();

        /// <summary>
        /// 获取所有报警配置 Get all alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        ApiResponse<Result<List<AlarmConfigInOut>>> ApiAlarmGetAllAlarmConfigsGetWithHttpInfo ();
        /// <summary>
        /// 获取所有报警日志 Get all alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;AlarmLogInout&gt;</returns>
        Result<List<AlarmLogInout>> ApiAlarmGetAllAlarmLogsGet ();

        /// <summary>
        /// 获取所有报警日志 Get all alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;AlarmLogInout&gt;</returns>
        ApiResponse<Result<List<AlarmLogInout>>> ApiAlarmGetAllAlarmLogsGetWithHttpInfo ();
        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAlarmJudgeDosagePost (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>));

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAlarmJudgeDosagePostWithHttpInfo (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>));
        /// <summary>
        /// 更新报警配置信息 Update alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAlarmUpdateAlarmConfigsPost (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));

        /// <summary>
        /// 更新报警配置信息 Update alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAlarmUpdateAlarmConfigsPostWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAlarmApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 添加报警配置 Add alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAlarmAddAlarmConfigsPostAsync (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));

        /// <summary>
        /// 添加报警配置 Add alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAlarmAddAlarmConfigsPostAsyncWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));
        /// <summary>
        /// 添加报警日志 Add alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAlarmAddAlarmLogsPostAsync (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>));

        /// <summary>
        /// 添加报警日志 Add alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAlarmAddAlarmLogsPostAsyncWithHttpInfo (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>));
        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAlarmDeleteAlarmConfigsPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAlarmDeleteAlarmConfigsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAlarmDeleteAlarmLogsPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAlarmDeleteAlarmLogsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetAsync (int? grade = default(int?), string indicator = default(string));

        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AlarmConfigInOut>>>> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetAsyncWithHttpInfo (int? grade = default(int?), string indicator = default(string));
        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiAlarmGetAlarmConfigsByGradeGetAsync (int? grade = default(int?));

        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AlarmConfigInOut>>>> ApiAlarmGetAlarmConfigsByGradeGetAsyncWithHttpInfo (int? grade = default(int?));
        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition
        /// </summary>
        /// <remarks>
        /// 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>Task of List&lt;AlarmLogInout&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AlarmLogInout>>> ApiAlarmGetAlarmLogsByConditionPostAsync (AlarmLogInput alarmLogInput = default(AlarmLogInput));

        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition
        /// </summary>
        /// <remarks>
        /// 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmLogInout&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AlarmLogInout>>>> ApiAlarmGetAlarmLogsByConditionPostAsyncWithHttpInfo (AlarmLogInput alarmLogInput = default(AlarmLogInput));
        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of List&lt;AlarmLogInout&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AlarmLogInout>>> ApiAlarmGetAlarmLogsByGradeGetAsync (int? grade = default(int?));

        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmLogInout&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AlarmLogInout>>>> ApiAlarmGetAlarmLogsByGradeGetAsyncWithHttpInfo (int? grade = default(int?));
        /// <summary>
        /// 获取所有报警配置 Get all alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiAlarmGetAllAlarmConfigsGetAsync ();

        /// <summary>
        /// 获取所有报警配置 Get all alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AlarmConfigInOut>>>> ApiAlarmGetAllAlarmConfigsGetAsyncWithHttpInfo ();
        /// <summary>
        /// 获取所有报警日志 Get all alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;AlarmLogInout&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AlarmLogInout>>> ApiAlarmGetAllAlarmLogsGetAsync ();

        /// <summary>
        /// 获取所有报警日志 Get all alarm logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;AlarmLogInout&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AlarmLogInout>>>> ApiAlarmGetAllAlarmLogsGetAsyncWithHttpInfo ();
        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAlarmJudgeDosagePostAsync (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>));

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAlarmJudgeDosagePostAsyncWithHttpInfo (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>));
        /// <summary>
        /// 更新报警配置信息 Update alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAlarmUpdateAlarmConfigsPostAsync (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));

        /// <summary>
        /// 更新报警配置信息 Update alarm config data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAlarmUpdateAlarmConfigsPostAsyncWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAlarmApi : IAlarmApiSync, IAlarmApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class AlarmApi : IAlarmApi
    {
        private DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="AlarmApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AlarmApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AlarmApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AlarmApi(String basePath)
        {
            this.Configuration = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.GlobalConfiguration.Instance,
                new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AlarmApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public AlarmApi(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AlarmApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public AlarmApi(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ISynchronousClient client,DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IAsynchronousClient asyncClient, DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 添加报警配置 Add alarm config 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAlarmAddAlarmConfigsPost (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiAlarmAddAlarmConfigsPostWithHttpInfo(alarmConfigInOut);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 添加报警配置 Add alarm config 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< Object >> ApiAlarmAddAlarmConfigsPostWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = alarmConfigInOut;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/Alarm/AddAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmAddAlarmConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加报警配置 Add alarm config 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAlarmAddAlarmConfigsPostAsync (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAlarmAddAlarmConfigsPostAsyncWithHttpInfo(alarmConfigInOut);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 添加报警配置 Add alarm config 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>>> ApiAlarmAddAlarmConfigsPostAsyncWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = alarmConfigInOut;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/Alarm/AddAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmAddAlarmConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加报警日志 Add alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAlarmAddAlarmLogsPost (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiAlarmAddAlarmLogsPostWithHttpInfo(alarmLogInout);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 添加报警日志 Add alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< Object >> ApiAlarmAddAlarmLogsPostWithHttpInfo (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = alarmLogInout;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/Alarm/AddAlarmLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmAddAlarmLogsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加报警日志 Add alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAlarmAddAlarmLogsPostAsync (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAlarmAddAlarmLogsPostAsyncWithHttpInfo(alarmLogInout);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 添加报警日志 Add alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInout"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>>> ApiAlarmAddAlarmLogsPostAsyncWithHttpInfo (List<AlarmLogInout> alarmLogInout = default(List<AlarmLogInout>))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = alarmLogInout;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/Alarm/AddAlarmLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmAddAlarmLogsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAlarmDeleteAlarmConfigsPost (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiAlarmDeleteAlarmConfigsPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< Object >> ApiAlarmDeleteAlarmConfigsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/Alarm/DeleteAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmDeleteAlarmConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAlarmDeleteAlarmConfigsPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAlarmDeleteAlarmConfigsPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据ID删除报警配置信息 Delete alarm config data by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>>> ApiAlarmDeleteAlarmConfigsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/Alarm/DeleteAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmDeleteAlarmConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAlarmDeleteAlarmLogsPost (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiAlarmDeleteAlarmLogsPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< Object >> ApiAlarmDeleteAlarmLogsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/Alarm/DeleteAlarmLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmDeleteAlarmLogsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAlarmDeleteAlarmLogsPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAlarmDeleteAlarmLogsPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据ID删除报警日志 Delete alarm logs by ids 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>>> ApiAlarmDeleteAlarmLogsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/Alarm/DeleteAlarmLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmDeleteAlarmLogsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        public Result<List<AlarmConfigInOut>> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGet (int? grade = default(int?), string indicator = default(string))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetWithHttpInfo(grade, indicator);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< List<AlarmConfigInOut> >> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetWithHttpInfo (int? grade = default(int?), string indicator = default(string))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (grade != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "grade", grade));
            }
            if (indicator != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "indicator", indicator));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AlarmConfigInOut> >>("/api/Alarm/GetAlarmConfigsByGradeAndIndicator", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmConfigsByGradeAndIndicatorGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetAsync (int? grade = default(int?), string indicator = default(string))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = await ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetAsyncWithHttpInfo(grade, indicator);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过等级和指标获取报警配置信息 Get alarm config by grade and indicator 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <param name="indicator">指标 indicator (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>>> ApiAlarmGetAlarmConfigsByGradeAndIndicatorGetAsyncWithHttpInfo (int? grade = default(int?), string indicator = default(string))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (grade != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "grade", grade));
            }
            if (indicator != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "indicator", indicator));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AlarmConfigInOut>>>("/api/Alarm/GetAlarmConfigsByGradeAndIndicator", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmConfigsByGradeAndIndicatorGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        public Result<List<AlarmConfigInOut>> ApiAlarmGetAlarmConfigsByGradeGet (int? grade = default(int?))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = ApiAlarmGetAlarmConfigsByGradeGetWithHttpInfo(grade);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< List<AlarmConfigInOut> >> ApiAlarmGetAlarmConfigsByGradeGetWithHttpInfo (int? grade = default(int?))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (grade != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "grade", grade));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AlarmConfigInOut> >>("/api/Alarm/GetAlarmConfigsByGrade", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmConfigsByGradeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiAlarmGetAlarmConfigsByGradeGetAsync (int? grade = default(int?))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = await ApiAlarmGetAlarmConfigsByGradeGetAsyncWithHttpInfo(grade);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过等级获取报警配置信息 Get alarm config by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>>> ApiAlarmGetAlarmConfigsByGradeGetAsyncWithHttpInfo (int? grade = default(int?))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (grade != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "grade", grade));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AlarmConfigInOut>>>("/api/Alarm/GetAlarmConfigsByGrade", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmConfigsByGradeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>List&lt;AlarmLogInout&gt;</returns>
        public Result<List<AlarmLogInout>> ApiAlarmGetAlarmLogsByConditionPost (AlarmLogInput alarmLogInput = default(AlarmLogInput))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>> localVarResponse = ApiAlarmGetAlarmLogsByConditionPostWithHttpInfo(alarmLogInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmLogInout&gt;</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< List<AlarmLogInout> >> ApiAlarmGetAlarmLogsByConditionPostWithHttpInfo (AlarmLogInput alarmLogInput = default(AlarmLogInput))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = alarmLogInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<AlarmLogInout> >>("/api/Alarm/GetAlarmLogsByCondition", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmLogsByConditionPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>Task of List&lt;AlarmLogInout&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AlarmLogInout>>> ApiAlarmGetAlarmLogsByConditionPostAsync (AlarmLogInput alarmLogInput = default(AlarmLogInput))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>> localVarResponse = await ApiAlarmGetAlarmLogsByConditionPostAsyncWithHttpInfo(alarmLogInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过条件获取报警日志 Get alarm logs by condition 通过时间、报警类型等获取报警日志 Get alarm logs by time and alarm type
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmLogInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmLogInout&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>>> ApiAlarmGetAlarmLogsByConditionPostAsyncWithHttpInfo (AlarmLogInput alarmLogInput = default(AlarmLogInput))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = alarmLogInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<AlarmLogInout>>>("/api/Alarm/GetAlarmLogsByCondition", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmLogsByConditionPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>List&lt;AlarmLogInout&gt;</returns>
        public Result<List<AlarmLogInout>> ApiAlarmGetAlarmLogsByGradeGet (int? grade = default(int?))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>> localVarResponse = ApiAlarmGetAlarmLogsByGradeGetWithHttpInfo(grade);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmLogInout&gt;</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< List<AlarmLogInout> >> ApiAlarmGetAlarmLogsByGradeGetWithHttpInfo (int? grade = default(int?))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (grade != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "grade", grade));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AlarmLogInout> >>("/api/Alarm/GetAlarmLogsByGrade", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmLogsByGradeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of List&lt;AlarmLogInout&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AlarmLogInout>>> ApiAlarmGetAlarmLogsByGradeGetAsync (int? grade = default(int?))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>> localVarResponse = await ApiAlarmGetAlarmLogsByGradeGetAsyncWithHttpInfo(grade);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过等级获取报警日志 Get alarm logs by grade 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="grade">等级 grade (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmLogInout&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>>> ApiAlarmGetAlarmLogsByGradeGetAsyncWithHttpInfo (int? grade = default(int?))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (grade != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "grade", grade));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AlarmLogInout>>>("/api/Alarm/GetAlarmLogsByGrade", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAlarmLogsByGradeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有报警配置 Get all alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        public Result<List<AlarmConfigInOut>> ApiAlarmGetAllAlarmConfigsGet ()
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = ApiAlarmGetAllAlarmConfigsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有报警配置 Get all alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< List<AlarmConfigInOut> >> ApiAlarmGetAllAlarmConfigsGetWithHttpInfo ()
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AlarmConfigInOut> >>("/api/Alarm/GetAllAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAllAlarmConfigsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有报警配置 Get all alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiAlarmGetAllAlarmConfigsGetAsync ()
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = await ApiAlarmGetAllAlarmConfigsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有报警配置 Get all alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmConfigInOut>>>> ApiAlarmGetAllAlarmConfigsGetAsyncWithHttpInfo ()
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AlarmConfigInOut>>>("/api/Alarm/GetAllAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAllAlarmConfigsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有报警日志 Get all alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;AlarmLogInout&gt;</returns>
        public Result<List<AlarmLogInout>> ApiAlarmGetAllAlarmLogsGet ()
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>> localVarResponse = ApiAlarmGetAllAlarmLogsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有报警日志 Get all alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;AlarmLogInout&gt;</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< List<AlarmLogInout> >> ApiAlarmGetAllAlarmLogsGetWithHttpInfo ()
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AlarmLogInout> >>("/api/Alarm/GetAllAlarmLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAllAlarmLogsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有报警日志 Get all alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;AlarmLogInout&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AlarmLogInout>>> ApiAlarmGetAllAlarmLogsGetAsync ()
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>> localVarResponse = await ApiAlarmGetAllAlarmLogsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有报警日志 Get all alarm logs 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;AlarmLogInout&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<AlarmLogInout>>>> ApiAlarmGetAllAlarmLogsGetAsyncWithHttpInfo ()
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AlarmLogInout>>>("/api/Alarm/GetAllAlarmLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmGetAllAlarmLogsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAlarmJudgeDosagePost (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiAlarmJudgeDosagePostWithHttpInfo(dosageBasicInfo);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< Object >> ApiAlarmJudgeDosagePostWithHttpInfo (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dosageBasicInfo;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/Alarm/JudgeDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmJudgeDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAlarmJudgeDosagePostAsync (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAlarmJudgeDosagePostAsyncWithHttpInfo(dosageBasicInfo);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosing alarm logs based on dosage data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosageBasicInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>>> ApiAlarmJudgeDosagePostAsyncWithHttpInfo (List<DosageBasicInfo> dosageBasicInfo = default(List<DosageBasicInfo>))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dosageBasicInfo;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/Alarm/JudgeDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmJudgeDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新报警配置信息 Update alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAlarmUpdateAlarmConfigsPost (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiAlarmUpdateAlarmConfigsPostWithHttpInfo(alarmConfigInOut);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新报警配置信息 Update alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< Object >> ApiAlarmUpdateAlarmConfigsPostWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = alarmConfigInOut;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/Alarm/UpdateAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmUpdateAlarmConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新报警配置信息 Update alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAlarmUpdateAlarmConfigsPostAsync (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAlarmUpdateAlarmConfigsPostAsyncWithHttpInfo(alarmConfigInOut);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新报警配置信息 Update alarm config data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="alarmConfigInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<Object>>> ApiAlarmUpdateAlarmConfigsPostAsyncWithHttpInfo (List<AlarmConfigInOut> alarmConfigInOut = default(List<AlarmConfigInOut>))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = alarmConfigInOut;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/Alarm/UpdateAlarmConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAlarmUpdateAlarmConfigsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
