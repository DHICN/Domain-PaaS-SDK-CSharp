/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ResultAnalysis.Client;
using DHICN.PAAS.SDK.ResultAnalysis.Model;

namespace DHICN.PAAS.SDK.ResultAnalysis.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IUrbanWdResultAnalysisApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>List&lt;BaseTimeseriesBatchOutput&gt;</returns>
        Result<List<BaseTimeseriesBatchOutput>> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPost (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput));

        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;BaseTimeseriesBatchOutput&gt;</returns>
        ApiResponse<Result<List<BaseTimeseriesBatchOutput>>> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostWithHttpInfo (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput));
        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdDemandDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdDemandDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取DMA分区的流量模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>List&lt;WdZoneModelResultOutput&gt;</returns>
        Result<List<WdZoneModelResultOutput>> ApiV1ResultAnalysisUrbanWdDmaFlowPost (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));

        /// <summary>
        /// 获取DMA分区的流量模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdZoneModelResultOutput&gt;</returns>
        ApiResponse<Result<List<WdZoneModelResultOutput>>> ApiV1ResultAnalysisUrbanWdDmaFlowPostWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));
        /// <summary>
        /// 获取DMA分区的压力模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>List&lt;WdZoneModelResultOutput&gt;</returns>
        Result<List<WdZoneModelResultOutput>> ApiV1ResultAnalysisUrbanWdDmaPressurePost (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));

        /// <summary>
        /// 获取DMA分区的压力模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdZoneModelResultOutput&gt;</returns>
        ApiResponse<Result<List<WdZoneModelResultOutput>>> ApiV1ResultAnalysisUrbanWdDmaPressurePostWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));
        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>List&lt;FilterModelResultDto&gt;</returns>
        Result<List<FilterModelResultDto>> ApiV1ResultAnalysisUrbanWdFilterModelResultPost (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput));

        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;FilterModelResultDto&gt;</returns>
        ApiResponse<Result<List<FilterModelResultDto>>> ApiV1ResultAnalysisUrbanWdFilterModelResultPostWithHttpInfo (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput));
        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdFlowDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdFlowDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取管道冲洗结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>FlushingResultEntity</returns>
        Result<FlushingResultEntity> ApiV1ResultAnalysisUrbanWdFlushingResultGet (string scenarioId = default(string));

        /// <summary>
        /// 根据方案id获取管道冲洗结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of FlushingResultEntity</returns>
        ApiResponse<Result<FlushingResultEntity>> ApiV1ResultAnalysisUrbanWdFlushingResultGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdPressureDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdPressureDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取管道剖面图数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>NetworkProfile</returns>
        Result<NetworkProfile> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGet (string scenarioId, List<string> nodeIDs = default(List<string>));

        /// <summary>
        /// 获取管道剖面图数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>ApiResponse of NetworkProfile</returns>
        ApiResponse<Result<NetworkProfile>> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetWithHttpInfo (string scenarioId, List<string> nodeIDs = default(List<string>));
        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;WdStatisticShutOffUserDto&gt;</returns>
        Result<List<WdStatisticShutOffUserDto>> ApiV1ResultAnalysisUrbanWdShutOffUsersGet (string scenarioId = default(string));

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdStatisticShutOffUserDto&gt;</returns>
        ApiResponse<Result<List<WdStatisticShutOffUserDto>>> ApiV1ResultAnalysisUrbanWdShutOffUsersGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 按照模型id获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>List&lt;StatisticsModelIdResultDto&gt;</returns>
        Result<List<StatisticsModelIdResultDto>> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPost (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput));

        /// <summary>
        /// 按照模型id获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;StatisticsModelIdResultDto&gt;</returns>
        ApiResponse<Result<List<StatisticsModelIdResultDto>>> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostWithHttpInfo (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput));
        /// <summary>
        /// 按照时间获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>List&lt;StatisticsTimeResultDto&gt;</returns>
        Result<List<StatisticsTimeResultDto>> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPost (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput));

        /// <summary>
        /// 按照时间获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;StatisticsTimeResultDto&gt;</returns>
        ApiResponse<Result<List<StatisticsTimeResultDto>>> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostWithHttpInfo (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput));
        /// <summary>
        /// 根据方案id获取单个结构物模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        Result<BaseTimeseriesOutput> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string));

        /// <summary>
        /// 根据方案id获取单个结构物模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        ApiResponse<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetWithHttpInfo (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string));
        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        Result<BaseTimeseriesOutput> ApiV1ResultAnalysisUrbanWdTimeseriesGet (string modelId, string scenarioId, string dataType = default(string));

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        ApiResponse<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisUrbanWdTimeseriesGetWithHttpInfo (string modelId, string scenarioId, string dataType = default(string));
        /// <summary>
        /// 根据方案id获取供水边界模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取供水边界模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取边缘管道信息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>List&lt;TraceWqClosePipeResult&gt;</returns>
        Result<List<TraceWqClosePipeResult>> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取边缘管道信息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of List&lt;TraceWqClosePipeResult&gt;</returns>
        ApiResponse<Result<List<TraceWqClosePipeResult>>> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdVelocityDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdVelocityDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>List&lt;WdHistoryModelOutput&gt;</returns>
        Result<List<WdHistoryModelOutput>> ApiV1ResultAnalysisUrbanWdWdresultHistoryPost (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput));

        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdHistoryModelOutput&gt;</returns>
        ApiResponse<Result<List<WdHistoryModelOutput>>> ApiV1ResultAnalysisUrbanWdWdresultHistoryPostWithHttpInfo (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput));
        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IUrbanWdResultAnalysisApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>Task of List&lt;BaseTimeseriesBatchOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<BaseTimeseriesBatchOutput>>> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostAsync (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput));

        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;BaseTimeseriesBatchOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<BaseTimeseriesBatchOutput>>>> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostAsyncWithHttpInfo (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput));
        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdDemandDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdDemandDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取DMA分区的流量模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of List&lt;WdZoneModelResultOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<WdZoneModelResultOutput>>> ApiV1ResultAnalysisUrbanWdDmaFlowPostAsync (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));

        /// <summary>
        /// 获取DMA分区的流量模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdZoneModelResultOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<WdZoneModelResultOutput>>>> ApiV1ResultAnalysisUrbanWdDmaFlowPostAsyncWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));
        /// <summary>
        /// 获取DMA分区的压力模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of List&lt;WdZoneModelResultOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<WdZoneModelResultOutput>>> ApiV1ResultAnalysisUrbanWdDmaPressurePostAsync (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));

        /// <summary>
        /// 获取DMA分区的压力模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdZoneModelResultOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<WdZoneModelResultOutput>>>> ApiV1ResultAnalysisUrbanWdDmaPressurePostAsyncWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput));
        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>Task of List&lt;FilterModelResultDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<FilterModelResultDto>>> ApiV1ResultAnalysisUrbanWdFilterModelResultPostAsync (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput));

        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;FilterModelResultDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<FilterModelResultDto>>>> ApiV1ResultAnalysisUrbanWdFilterModelResultPostAsyncWithHttpInfo (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput));
        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdFlowDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdFlowDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取管道冲洗结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of FlushingResultEntity</returns>
        System.Threading.Tasks.Task<Result<FlushingResultEntity>> ApiV1ResultAnalysisUrbanWdFlushingResultGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 根据方案id获取管道冲洗结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (FlushingResultEntity)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<FlushingResultEntity>>> ApiV1ResultAnalysisUrbanWdFlushingResultGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdPressureDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdPressureDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取管道剖面图数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>Task of NetworkProfile</returns>
        System.Threading.Tasks.Task<Result<NetworkProfile>> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetAsync (string scenarioId, List<string> nodeIDs = default(List<string>));

        /// <summary>
        /// 获取管道剖面图数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>Task of ApiResponse (NetworkProfile)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<NetworkProfile>>> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetAsyncWithHttpInfo (string scenarioId, List<string> nodeIDs = default(List<string>));
        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;WdStatisticShutOffUserDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<WdStatisticShutOffUserDto>>> ApiV1ResultAnalysisUrbanWdShutOffUsersGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdStatisticShutOffUserDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<WdStatisticShutOffUserDto>>>> ApiV1ResultAnalysisUrbanWdShutOffUsersGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 按照模型id获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>Task of List&lt;StatisticsModelIdResultDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<StatisticsModelIdResultDto>>> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostAsync (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput));

        /// <summary>
        /// 按照模型id获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;StatisticsModelIdResultDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<StatisticsModelIdResultDto>>>> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostAsyncWithHttpInfo (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput));
        /// <summary>
        /// 按照时间获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>Task of List&lt;StatisticsTimeResultDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<StatisticsTimeResultDto>>> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostAsync (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput));

        /// <summary>
        /// 按照时间获取统计结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;StatisticsTimeResultDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<StatisticsTimeResultDto>>>> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostAsyncWithHttpInfo (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput));
        /// <summary>
        /// 根据方案id获取单个结构物模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetAsync (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string));

        /// <summary>
        /// 根据方案id获取单个结构物模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetAsyncWithHttpInfo (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string));
        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisUrbanWdTimeseriesGetAsync (string modelId, string scenarioId, string dataType = default(string));

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisUrbanWdTimeseriesGetAsyncWithHttpInfo (string modelId, string scenarioId, string dataType = default(string));
        /// <summary>
        /// 根据方案id获取供水边界模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取供水边界模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取边缘管道信息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of List&lt;TraceWqClosePipeResult&gt;</returns>
        System.Threading.Tasks.Task<Result<List<TraceWqClosePipeResult>>> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取边缘管道信息
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;TraceWqClosePipeResult&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<TraceWqClosePipeResult>>>> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdVelocityDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdVelocityDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>Task of List&lt;WdHistoryModelOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<WdHistoryModelOutput>>> ApiV1ResultAnalysisUrbanWdWdresultHistoryPostAsync (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput));

        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdHistoryModelOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<WdHistoryModelOutput>>>> ApiV1ResultAnalysisUrbanWdWdresultHistoryPostAsyncWithHttpInfo (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput));
        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IUrbanWdResultAnalysisApi : IUrbanWdResultAnalysisApiSync, IUrbanWdResultAnalysisApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class UrbanWdResultAnalysisApi : IUrbanWdResultAnalysisApi
    {
        private DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="UrbanWdResultAnalysisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public UrbanWdResultAnalysisApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="UrbanWdResultAnalysisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public UrbanWdResultAnalysisApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="UrbanWdResultAnalysisApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public UrbanWdResultAnalysisApi(DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="UrbanWdResultAnalysisApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public UrbanWdResultAnalysisApi(DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient client,DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/average-water-age-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/average-water-age-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/average-water-age-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网平均水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/average-water-age-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWaterAgeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/average-wq-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/average-wq-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWqDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWqDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/average-wq-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWqDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网平均水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWqDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWqDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/average-wq-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWqDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/average-wq-trace-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网平均污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/average-wq-trace-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdAverageWqTraceDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>List&lt;BaseTimeseriesBatchOutput&gt;</returns>
        public Result<List<BaseTimeseriesBatchOutput>> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPost (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<BaseTimeseriesBatchOutput>>> localVarResponse = ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostWithHttpInfo(wdBatchTimeseriesInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;BaseTimeseriesBatchOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<BaseTimeseriesBatchOutput> >> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostWithHttpInfo (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = wdBatchTimeseriesInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<BaseTimeseriesBatchOutput> >>("/api/v1/result-analysis/urban-wd/batch-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdBatchTimeseriesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>Task of List&lt;BaseTimeseriesBatchOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<BaseTimeseriesBatchOutput>>> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostAsync (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<BaseTimeseriesBatchOutput>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostAsyncWithHttpInfo(wdBatchTimeseriesInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id批量获取管网模拟结果（查询数量限制在100个以内） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdBatchTimeseriesInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;BaseTimeseriesBatchOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<BaseTimeseriesBatchOutput>>>> ApiV1ResultAnalysisUrbanWdBatchTimeseriesPostAsyncWithHttpInfo (WdBatchTimeseriesInput wdBatchTimeseriesInput = default(WdBatchTimeseriesInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = wdBatchTimeseriesInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<BaseTimeseriesBatchOutput>>>("/api/v1/result-analysis/urban-wd/batch-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdBatchTimeseriesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/demand-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/demand-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDemandDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdDemandDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdDemandDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdDemandDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdDemandDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/demand-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDemandDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdDemandDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdDemandDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网用水量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdDemandDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdDemandDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/demand-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDemandDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取DMA分区的流量模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>List&lt;WdZoneModelResultOutput&gt;</returns>
        public Result<List<WdZoneModelResultOutput>> ApiV1ResultAnalysisUrbanWdDmaFlowPost (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdZoneModelResultOutput>>> localVarResponse = ApiV1ResultAnalysisUrbanWdDmaFlowPostWithHttpInfo(wdZoneModelResultInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取DMA分区的流量模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdZoneModelResultOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<WdZoneModelResultOutput> >> ApiV1ResultAnalysisUrbanWdDmaFlowPostWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = wdZoneModelResultInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<WdZoneModelResultOutput> >>("/api/v1/result-analysis/urban-wd/dma-flow", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDmaFlowPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取DMA分区的流量模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of List&lt;WdZoneModelResultOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<WdZoneModelResultOutput>>> ApiV1ResultAnalysisUrbanWdDmaFlowPostAsync (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdZoneModelResultOutput>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdDmaFlowPostAsyncWithHttpInfo(wdZoneModelResultInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取DMA分区的流量模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdZoneModelResultOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdZoneModelResultOutput>>>> ApiV1ResultAnalysisUrbanWdDmaFlowPostAsyncWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = wdZoneModelResultInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<WdZoneModelResultOutput>>>("/api/v1/result-analysis/urban-wd/dma-flow", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDmaFlowPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取DMA分区的压力模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>List&lt;WdZoneModelResultOutput&gt;</returns>
        public Result<List<WdZoneModelResultOutput>> ApiV1ResultAnalysisUrbanWdDmaPressurePost (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdZoneModelResultOutput>>> localVarResponse = ApiV1ResultAnalysisUrbanWdDmaPressurePostWithHttpInfo(wdZoneModelResultInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取DMA分区的压力模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdZoneModelResultOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<WdZoneModelResultOutput> >> ApiV1ResultAnalysisUrbanWdDmaPressurePostWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = wdZoneModelResultInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<WdZoneModelResultOutput> >>("/api/v1/result-analysis/urban-wd/dma-pressure", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDmaPressurePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取DMA分区的压力模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of List&lt;WdZoneModelResultOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<WdZoneModelResultOutput>>> ApiV1ResultAnalysisUrbanWdDmaPressurePostAsync (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdZoneModelResultOutput>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdDmaPressurePostAsyncWithHttpInfo(wdZoneModelResultInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取DMA分区的压力模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdZoneModelResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdZoneModelResultOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdZoneModelResultOutput>>>> ApiV1ResultAnalysisUrbanWdDmaPressurePostAsyncWithHttpInfo (WdZoneModelResultInput wdZoneModelResultInput = default(WdZoneModelResultInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = wdZoneModelResultInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<WdZoneModelResultOutput>>>("/api/v1/result-analysis/urban-wd/dma-pressure", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdDmaPressurePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>List&lt;FilterModelResultDto&gt;</returns>
        public Result<List<FilterModelResultDto>> ApiV1ResultAnalysisUrbanWdFilterModelResultPost (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<FilterModelResultDto>>> localVarResponse = ApiV1ResultAnalysisUrbanWdFilterModelResultPostWithHttpInfo(getFilterModelResultInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;FilterModelResultDto&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<FilterModelResultDto> >> ApiV1ResultAnalysisUrbanWdFilterModelResultPostWithHttpInfo (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = getFilterModelResultInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<FilterModelResultDto> >>("/api/v1/result-analysis/urban-wd/filter-model-result", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFilterModelResultPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>Task of List&lt;FilterModelResultDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<FilterModelResultDto>>> ApiV1ResultAnalysisUrbanWdFilterModelResultPostAsync (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<FilterModelResultDto>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdFilterModelResultPostAsyncWithHttpInfo(getFilterModelResultInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 按照筛选条件查询模型信息和模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getFilterModelResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;FilterModelResultDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<FilterModelResultDto>>>> ApiV1ResultAnalysisUrbanWdFilterModelResultPostAsyncWithHttpInfo (GetFilterModelResultInput getFilterModelResultInput = default(GetFilterModelResultInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = getFilterModelResultInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<FilterModelResultDto>>>("/api/v1/result-analysis/urban-wd/filter-model-result", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFilterModelResultPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/flow-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值,适用大模型结果读取 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/flow-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFlowDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdFlowDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdFlowDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdFlowDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdFlowDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/flow-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFlowDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdFlowDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdFlowDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网流量模拟结果值 返回的数据包含：模型id列表，时间列表，结果值二维数据
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdFlowDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdFlowDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/flow-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFlowDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取管道冲洗结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>FlushingResultEntity</returns>
        public Result<FlushingResultEntity> ApiV1ResultAnalysisUrbanWdFlushingResultGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<FlushingResultEntity>> localVarResponse = ApiV1ResultAnalysisUrbanWdFlushingResultGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取管道冲洗结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of FlushingResultEntity</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< FlushingResultEntity >> ApiV1ResultAnalysisUrbanWdFlushingResultGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< FlushingResultEntity >>("/api/v1/result-analysis/urban-wd/flushing-result", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFlushingResultGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取管道冲洗结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of FlushingResultEntity</returns>
        public async System.Threading.Tasks.Task<Result<FlushingResultEntity>> ApiV1ResultAnalysisUrbanWdFlushingResultGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<FlushingResultEntity>> localVarResponse = await ApiV1ResultAnalysisUrbanWdFlushingResultGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取管道冲洗结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (FlushingResultEntity)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<FlushingResultEntity>>> ApiV1ResultAnalysisUrbanWdFlushingResultGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<FlushingResultEntity>>("/api/v1/result-analysis/urban-wd/flushing-result", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdFlushingResultGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/head-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/head-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdHeadDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdHeadDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/head-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdHeadDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/head-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/headloss-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/headloss-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadlossDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadlossDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/headloss-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadlossDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水头模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdHeadlossDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdHeadlossDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/headloss-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdHeadlossDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/pressure-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/pressure-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdPressureDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdPressureDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdPressureDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdPressureDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdPressureDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/pressure-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdPressureDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdPressureDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdPressureDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdPressureDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdPressureDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/pressure-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdPressureDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取管道剖面图数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>NetworkProfile</returns>
        public Result<NetworkProfile> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGet (string scenarioId, List<string> nodeIDs = default(List<string>))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<NetworkProfile>> localVarResponse = ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetWithHttpInfo(scenarioId, nodeIDs);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取管道剖面图数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>ApiResponse of NetworkProfile</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< NetworkProfile >> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetWithHttpInfo (string scenarioId, List<string> nodeIDs = default(List<string>))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdProfileTimeseriesGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (nodeIDs != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "NodeIDs", nodeIDs));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< NetworkProfile >>("/api/v1/result-analysis/urban-wd/profile-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdProfileTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取管道剖面图数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>Task of NetworkProfile</returns>
        public async System.Threading.Tasks.Task<Result<NetworkProfile>> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetAsync (string scenarioId, List<string> nodeIDs = default(List<string>))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<NetworkProfile>> localVarResponse = await ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetAsyncWithHttpInfo(scenarioId, nodeIDs);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取管道剖面图数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="nodeIDs">沿着管段的节点ID列表 node IDs along the pipes (optional)</param>
        /// <returns>Task of ApiResponse (NetworkProfile)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<NetworkProfile>>> ApiV1ResultAnalysisUrbanWdProfileTimeseriesGetAsyncWithHttpInfo (string scenarioId, List<string> nodeIDs = default(List<string>))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdProfileTimeseriesGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (nodeIDs != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("multi", "NodeIDs", nodeIDs));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<NetworkProfile>>("/api/v1/result-analysis/urban-wd/profile-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdProfileTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;WdStatisticShutOffUserDto&gt;</returns>
        public Result<List<WdStatisticShutOffUserDto>> ApiV1ResultAnalysisUrbanWdShutOffUsersGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdStatisticShutOffUserDto>>> localVarResponse = ApiV1ResultAnalysisUrbanWdShutOffUsersGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdStatisticShutOffUserDto&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<WdStatisticShutOffUserDto> >> ApiV1ResultAnalysisUrbanWdShutOffUsersGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<WdStatisticShutOffUserDto> >>("/api/v1/result-analysis/urban-wd/shut-off-users", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdShutOffUsersGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;WdStatisticShutOffUserDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<WdStatisticShutOffUserDto>>> ApiV1ResultAnalysisUrbanWdShutOffUsersGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdStatisticShutOffUserDto>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdShutOffUsersGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdStatisticShutOffUserDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdStatisticShutOffUserDto>>>> ApiV1ResultAnalysisUrbanWdShutOffUsersGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<WdStatisticShutOffUserDto>>>("/api/v1/result-analysis/urban-wd/shut-off-users", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdShutOffUsersGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 按照模型id获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>List&lt;StatisticsModelIdResultDto&gt;</returns>
        public Result<List<StatisticsModelIdResultDto>> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPost (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<StatisticsModelIdResultDto>>> localVarResponse = ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostWithHttpInfo(getStatisticResultInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 按照模型id获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;StatisticsModelIdResultDto&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<StatisticsModelIdResultDto> >> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostWithHttpInfo (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = getStatisticResultInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<StatisticsModelIdResultDto> >>("/api/v1/result-analysis/urban-wd/statistic-result-modelid-dimension", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 按照模型id获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>Task of List&lt;StatisticsModelIdResultDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<StatisticsModelIdResultDto>>> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostAsync (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<StatisticsModelIdResultDto>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostAsyncWithHttpInfo(getStatisticResultInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 按照模型id获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getStatisticResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;StatisticsModelIdResultDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<StatisticsModelIdResultDto>>>> ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPostAsyncWithHttpInfo (GetStatisticResultInput getStatisticResultInput = default(GetStatisticResultInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = getStatisticResultInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<StatisticsModelIdResultDto>>>("/api/v1/result-analysis/urban-wd/statistic-result-modelid-dimension", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdStatisticResultModelidDimensionPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 按照时间获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>List&lt;StatisticsTimeResultDto&gt;</returns>
        public Result<List<StatisticsTimeResultDto>> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPost (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<StatisticsTimeResultDto>>> localVarResponse = ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostWithHttpInfo(getTimeStatisticResultInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 按照时间获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;StatisticsTimeResultDto&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<StatisticsTimeResultDto> >> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostWithHttpInfo (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = getTimeStatisticResultInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<StatisticsTimeResultDto> >>("/api/v1/result-analysis/urban-wd/statistic-result-time-dimension", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 按照时间获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>Task of List&lt;StatisticsTimeResultDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<StatisticsTimeResultDto>>> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostAsync (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<StatisticsTimeResultDto>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostAsyncWithHttpInfo(getTimeStatisticResultInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 按照时间获取统计结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getTimeStatisticResultInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;StatisticsTimeResultDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<StatisticsTimeResultDto>>>> ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPostAsyncWithHttpInfo (GetTimeStatisticResultInput getTimeStatisticResultInput = default(GetTimeStatisticResultInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = getTimeStatisticResultInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<StatisticsTimeResultDto>>>("/api/v1/result-analysis/urban-wd/statistic-result-time-dimension", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdStatisticResultTimeDimensionPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个结构物模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        public Result<BaseTimeseriesOutput> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetWithHttpInfo(modelId, scenarioId, wDCalculateType, wDFeatureType, wDDataType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取单个结构物模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseTimeseriesOutput >> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetWithHttpInfo (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string))
        {
            // verify the required parameter 'modelId' is set
            if (modelId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'modelId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelId", modelId));
            if (wDCalculateType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "WDCalculateType", wDCalculateType));
            }
            if (wDFeatureType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "WDFeatureType", wDFeatureType));
            }
            if (wDDataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "WDDataType", wDDataType));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseTimeseriesOutput >>("/api/v1/result-analysis/urban-wd/structure-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个结构物模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetAsync (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetAsyncWithHttpInfo(modelId, scenarioId, wDCalculateType, wDFeatureType, wDDataType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取单个结构物模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="wDCalculateType">计算类型：水动力HD、水质WaterQuality、水龄WaterAge、水质追踪SourceTracing、水锤WaterHammer (optional)</param>
        /// <param name="wDFeatureType">模型要素类型：管线Link、阀门Valve、节点Node、水池Tank (optional)</param>
        /// <param name="wDDataType">数据类型枚举:流量Flow、流速Velocity、压力Pressure、水头Head等 (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisUrbanWdStructureTimeseriesGetAsyncWithHttpInfo (string modelId, string scenarioId, string wDCalculateType = default(string), string wDFeatureType = default(string), string wDDataType = default(string))
        {
            // verify the required parameter 'modelId' is set
            if (modelId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'modelId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelId", modelId));
            if (wDCalculateType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "WDCalculateType", wDCalculateType));
            }
            if (wDFeatureType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "WDFeatureType", wDFeatureType));
            }
            if (wDDataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "WDDataType", wDDataType));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseTimeseriesOutput>>("/api/v1/result-analysis/urban-wd/structure-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdStructureTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        public Result<BaseTimeseriesOutput> ApiV1ResultAnalysisUrbanWdTimeseriesGet (string modelId, string scenarioId, string dataType = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdTimeseriesGetWithHttpInfo(modelId, scenarioId, dataType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseTimeseriesOutput >> ApiV1ResultAnalysisUrbanWdTimeseriesGetWithHttpInfo (string modelId, string scenarioId, string dataType = default(string))
        {
            // verify the required parameter 'modelId' is set
            if (modelId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'modelId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTimeseriesGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelId", modelId));
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "DataType", dataType));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseTimeseriesOutput >>("/api/v1/result-analysis/urban-wd/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisUrbanWdTimeseriesGetAsync (string modelId, string scenarioId, string dataType = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdTimeseriesGetAsyncWithHttpInfo(modelId, scenarioId, dataType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取单个管网的模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisUrbanWdTimeseriesGetAsyncWithHttpInfo (string modelId, string scenarioId, string dataType = default(string))
        {
            // verify the required parameter 'modelId' is set
            if (modelId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'modelId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTimeseriesGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelId", modelId));
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "DataType", dataType));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseTimeseriesOutput>>("/api/v1/result-analysis/urban-wd/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取供水边界模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取供水边界模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/trace-supplyrange-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取供水边界模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取供水边界模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/trace-supplyrange-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdTraceSupplyrangeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取边缘管道信息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>List&lt;TraceWqClosePipeResult&gt;</returns>
        public Result<List<TraceWqClosePipeResult>> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<TraceWqClosePipeResult>>> localVarResponse = ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取边缘管道信息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of List&lt;TraceWqClosePipeResult&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<TraceWqClosePipeResult> >> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<TraceWqClosePipeResult> >>("/api/v1/result-analysis/urban-wd/trace-wq-close-pipe", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取边缘管道信息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of List&lt;TraceWqClosePipeResult&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<TraceWqClosePipeResult>>> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<TraceWqClosePipeResult>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取边缘管道信息 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;TraceWqClosePipeResult&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<TraceWqClosePipeResult>>>> ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<TraceWqClosePipeResult>>>("/api/v1/result-analysis/urban-wd/trace-wq-close-pipe", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdTraceWqClosePipeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/velocity-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/velocity-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdVelocityDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdVelocityDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdVelocityDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdVelocityDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdVelocityDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/velocity-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdVelocityDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdVelocityDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdVelocityDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdVelocityDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdVelocityDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/velocity-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdVelocityDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/water-age-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/water-age-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWaterAgeDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/water-age-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水龄模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/water-age-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWaterAgeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>List&lt;WdHistoryModelOutput&gt;</returns>
        public Result<List<WdHistoryModelOutput>> ApiV1ResultAnalysisUrbanWdWdresultHistoryPost (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdHistoryModelOutput>>> localVarResponse = ApiV1ResultAnalysisUrbanWdWdresultHistoryPostWithHttpInfo(wdHistoryModelInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;WdHistoryModelOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<WdHistoryModelOutput> >> ApiV1ResultAnalysisUrbanWdWdresultHistoryPostWithHttpInfo (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = wdHistoryModelInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<WdHistoryModelOutput> >>("/api/v1/result-analysis/urban-wd/wdresult-history", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWdresultHistoryPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>Task of List&lt;WdHistoryModelOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<WdHistoryModelOutput>>> ApiV1ResultAnalysisUrbanWdWdresultHistoryPostAsync (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdHistoryModelOutput>>> localVarResponse = await ApiV1ResultAnalysisUrbanWdWdresultHistoryPostAsyncWithHttpInfo(wdHistoryModelInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据模型id获取指定时间范围内的模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wdHistoryModelInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;WdHistoryModelOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<WdHistoryModelOutput>>>> ApiV1ResultAnalysisUrbanWdWdresultHistoryPostAsyncWithHttpInfo (WdHistoryModelInput wdHistoryModelInput = default(WdHistoryModelInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = wdHistoryModelInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<WdHistoryModelOutput>>>("/api/v1/result-analysis/urban-wd/wdresult-history", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWdresultHistoryPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/wq-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/wq-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdWqDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdWqDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/wq-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdWqDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水质模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/wq-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/wq-trace-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值,适用大模型结果读取 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/wq-trace-dynamic-cache", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqTraceDynamicCacheGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqTraceDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/urban-wd/wq-trace-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqTraceDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网污染物扩散模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisUrbanWdWqTraceDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling UrbanWdResultAnalysisApi->ApiV1ResultAnalysisUrbanWdWqTraceDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/urban-wd/wq-trace-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisUrbanWdWqTraceDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
