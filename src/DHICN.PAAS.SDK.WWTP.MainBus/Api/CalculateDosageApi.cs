/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.WWTP.MainBus.Client;
using DHICN.PAAS.SDK.WWTP.MainBus.Model;

namespace DHICN.PAAS.SDK.WWTP.MainBus.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICalculateDosageApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageCalculateCarbonDosagePost (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));

        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageCalculateCarbonDosagePostWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));
        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage
        /// </summary>
        /// <remarks>
        /// 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageCalculateDosageGet (string tenantId = default(string));

        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage
        /// </summary>
        /// <remarks>
        /// 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageCalculateDosageGetWithHttpInfo (string tenantId = default(string));
        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageDosageStatisticDailyGet (string currentTime = default(string));

        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageDosageStatisticDailyGetWithHttpInfo (string currentTime = default(string));
        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageExcutePLCGet (string currentTime = default(string));

        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageExcutePLCGetWithHttpInfo (string currentTime = default(string));
        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageExecuteCarbonPLCByProductLinePost (ExecutePlcInput executePlcInput = default(ExecutePlcInput));

        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageExecuteCarbonPLCByProductLinePostWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput));
        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageJudgeDosagePost ();

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageJudgeDosagePostWithHttpInfo ();
        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageUpdateComputerParametersByProductLineGet (string scenarioId = default(string), string productLine = default(string));

        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageUpdateComputerParametersByProductLineGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string));
        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageUpdateComputerParametersGet (string tenantId = default(string), string scenarioId = default(string));

        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageUpdateComputerParametersGetWithHttpInfo (string tenantId = default(string), string scenarioId = default(string));
        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiCalculateDosageUpdateComputerParametersSourceDataGet (string tenantId = default(string), string scenarioId = default(string));

        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiCalculateDosageUpdateComputerParametersSourceDataGetWithHttpInfo (string tenantId = default(string), string scenarioId = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICalculateDosageApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageCalculateCarbonDosagePostAsync (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));

        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageCalculateCarbonDosagePostAsyncWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));
        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage
        /// </summary>
        /// <remarks>
        /// 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageCalculateDosageGetAsync (string tenantId = default(string));

        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage
        /// </summary>
        /// <remarks>
        /// 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageCalculateDosageGetAsyncWithHttpInfo (string tenantId = default(string));
        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageDosageStatisticDailyGetAsync (string currentTime = default(string));

        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour)
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageDosageStatisticDailyGetAsyncWithHttpInfo (string currentTime = default(string));
        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageExcutePLCGetAsync (string currentTime = default(string));

        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageExcutePLCGetAsyncWithHttpInfo (string currentTime = default(string));
        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageExecuteCarbonPLCByProductLinePostAsync (ExecutePlcInput executePlcInput = default(ExecutePlcInput));

        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageExecuteCarbonPLCByProductLinePostAsyncWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput));
        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageJudgeDosagePostAsync ();

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageJudgeDosagePostAsyncWithHttpInfo ();
        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageUpdateComputerParametersByProductLineGetAsync (string scenarioId = default(string), string productLine = default(string));

        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageUpdateComputerParametersByProductLineGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string));
        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageUpdateComputerParametersGetAsync (string tenantId = default(string), string scenarioId = default(string));

        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageUpdateComputerParametersGetAsyncWithHttpInfo (string tenantId = default(string), string scenarioId = default(string));
        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageUpdateComputerParametersSourceDataGetAsync (string tenantId = default(string), string scenarioId = default(string));

        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiCalculateDosageUpdateComputerParametersSourceDataGetAsyncWithHttpInfo (string tenantId = default(string), string scenarioId = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICalculateDosageApi : ICalculateDosageApiSync, ICalculateDosageApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CalculateDosageApi : ICalculateDosageApi
    {
        private DHICN.PAAS.SDK.WWTP.MainBus.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CalculateDosageApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CalculateDosageApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CalculateDosageApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CalculateDosageApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.WWTP.MainBus.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CalculateDosageApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CalculateDosageApi(DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.WWTP.MainBus.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CalculateDosageApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public CalculateDosageApi(DHICN.PAAS.SDK.WWTP.MainBus.Client.ISynchronousClient client,DHICN.PAAS.SDK.WWTP.MainBus.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.WWTP.MainBus.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageCalculateCarbonDosagePost (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageCalculateCarbonDosagePostWithHttpInfo(dosingParamSettingDto);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageCalculateCarbonDosagePostWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dosingParamSettingDto;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/CalculateDosage/CalculateCarbonDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageCalculateCarbonDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageCalculateCarbonDosagePostAsync (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageCalculateCarbonDosagePostAsyncWithHttpInfo(dosingParamSettingDto);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 计算指定产线的碳源加药量 calculate carbon&#39;s dosage by product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageCalculateCarbonDosagePostAsyncWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dosingParamSettingDto;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/CalculateDosage/CalculateCarbonDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageCalculateCarbonDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageCalculateDosageGet (string tenantId = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageCalculateDosageGetWithHttpInfo(tenantId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageCalculateDosageGetWithHttpInfo (string tenantId = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/CalculateDosage/CalculateDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageCalculateDosageGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageCalculateDosageGetAsync (string tenantId = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageCalculateDosageGetAsyncWithHttpInfo(tenantId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 加药计算，包括碳源加药和MCCR加药计算 Execute dosage calculation, including carbon source dosage and MCCR dosage 此接口由计算服务在完成每个时刻的滚动计算之后调用 This API is called by compute service each hour after automatic simulation.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageCalculateDosageGetAsyncWithHttpInfo (string tenantId = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/CalculateDosage/CalculateDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageCalculateDosageGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour) 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageDosageStatisticDailyGet (string currentTime = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageDosageStatisticDailyGetWithHttpInfo(currentTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour) 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageDosageStatisticDailyGetWithHttpInfo (string currentTime = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (currentTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "currentTime", currentTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/CalculateDosage/DosageStatisticDaily", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageDosageStatisticDailyGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour) 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageDosageStatisticDailyGetAsync (string currentTime = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageDosageStatisticDailyGetAsyncWithHttpInfo(currentTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 加药量日/月统计，定期执行（半小时） Execute dosage daily and monthly statistics periodically (every half an hour) 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageDosageStatisticDailyGetAsyncWithHttpInfo (string currentTime = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (currentTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "currentTime", currentTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/CalculateDosage/DosageStatisticDaily", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageDosageStatisticDailyGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageExcutePLCGet (string currentTime = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageExcutePLCGetWithHttpInfo(currentTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageExcutePLCGetWithHttpInfo (string currentTime = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (currentTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "currentTime", currentTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/CalculateDosage/ExcutePLC", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageExcutePLCGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageExcutePLCGetAsync (string currentTime = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageExcutePLCGetAsyncWithHttpInfo(currentTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 执行碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="currentTime">当前时间 current time (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageExcutePLCGetAsyncWithHttpInfo (string currentTime = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (currentTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "currentTime", currentTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/CalculateDosage/ExcutePLC", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageExcutePLCGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageExecuteCarbonPLCByProductLinePost (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageExecuteCarbonPLCByProductLinePostWithHttpInfo(executePlcInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageExecuteCarbonPLCByProductLinePostWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = executePlcInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/CalculateDosage/ExecuteCarbonPLCByProductLine", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageExecuteCarbonPLCByProductLinePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageExecuteCarbonPLCByProductLinePostAsync (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageExecuteCarbonPLCByProductLinePostAsyncWithHttpInfo(executePlcInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 执行指定产线的碳源加药plc控制，同时写入加药日志 Execute carbon source dosing plc control and write dosing logs by specify product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="executePlcInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageExecuteCarbonPLCByProductLinePostAsyncWithHttpInfo (ExecutePlcInput executePlcInput = default(ExecutePlcInput))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = executePlcInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/CalculateDosage/ExecuteCarbonPLCByProductLine", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageExecuteCarbonPLCByProductLinePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageJudgeDosagePost ()
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageJudgeDosagePostWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageJudgeDosagePostWithHttpInfo ()
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/CalculateDosage/JudgeDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageJudgeDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageJudgeDosagePostAsync ()
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageJudgeDosagePostAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 判断加药量，写入报警日志 Write dosage alarm logs based on dosage 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageJudgeDosagePostAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/CalculateDosage/JudgeDosage", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageJudgeDosagePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageUpdateComputerParametersByProductLineGet (string scenarioId = default(string), string productLine = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageUpdateComputerParametersByProductLineGetWithHttpInfo(scenarioId, productLine);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageUpdateComputerParametersByProductLineGetWithHttpInfo (string scenarioId = default(string), string productLine = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/CalculateDosage/UpdateComputerParametersByProductLine", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageUpdateComputerParametersByProductLineGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageUpdateComputerParametersByProductLineGetAsync (string scenarioId = default(string), string productLine = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageUpdateComputerParametersByProductLineGetAsyncWithHttpInfo(scenarioId, productLine);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新计算参数-推送指定产线的数据（清洗数据） Push processed time-series data to dosage algorithm for one product line 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="productLine">产线 product line (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageUpdateComputerParametersByProductLineGetAsyncWithHttpInfo (string scenarioId = default(string), string productLine = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/CalculateDosage/UpdateComputerParametersByProductLine", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageUpdateComputerParametersByProductLineGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageUpdateComputerParametersGet (string tenantId = default(string), string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageUpdateComputerParametersGetWithHttpInfo(tenantId, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageUpdateComputerParametersGetWithHttpInfo (string tenantId = default(string), string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/CalculateDosage/UpdateComputerParameters", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageUpdateComputerParametersGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageUpdateComputerParametersGetAsync (string tenantId = default(string), string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageUpdateComputerParametersGetAsyncWithHttpInfo(tenantId, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新计算参数-推送数据（清洗数据） Push processed time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageUpdateComputerParametersGetAsyncWithHttpInfo (string tenantId = default(string), string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/CalculateDosage/UpdateComputerParameters", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageUpdateComputerParametersGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiCalculateDosageUpdateComputerParametersSourceDataGet (string tenantId = default(string), string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiCalculateDosageUpdateComputerParametersSourceDataGetWithHttpInfo(tenantId, scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiCalculateDosageUpdateComputerParametersSourceDataGetWithHttpInfo (string tenantId = default(string), string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/CalculateDosage/UpdateComputerParametersSourceData", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageUpdateComputerParametersSourceDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiCalculateDosageUpdateComputerParametersSourceDataGetAsync (string tenantId = default(string), string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiCalculateDosageUpdateComputerParametersSourceDataGetAsyncWithHttpInfo(tenantId, scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新计算参数-推送数据（mccr相关点位推送原表数据） Push source time-series data to dosage algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId">租户ID tenant id (optional)</param>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiCalculateDosageUpdateComputerParametersSourceDataGetAsyncWithHttpInfo (string tenantId = default(string), string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/CalculateDosage/UpdateComputerParametersSourceData", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiCalculateDosageUpdateComputerParametersSourceDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
