/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using wwtp_paas_main_bus_service.Client;
using wwtp_paas_main_bus_service.Model;

namespace wwtp_paas_main_bus_service.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDosingStatisticMonthlyApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPost (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));

        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));
        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        Result<List<DosingStatisticMonthlysInOut>> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGet ();

        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetWithHttpInfo ();
        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        Result<List<DosingStatisticMonthlysInOut>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGet (int? category = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        Result<List<DosingStatisticMonthlysInOut>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGet (string time = default(string));

        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetWithHttpInfo (string time = default(string));
        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPost (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));

        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDosingStatisticMonthlyApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostAsync (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));

        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostAsyncWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));
        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetAsync ();

        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticMonthlysInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DosingStatisticMonthlysInOut>>>> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetAsyncWithHttpInfo ();
        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetAsync (int? category = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticMonthlysInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DosingStatisticMonthlysInOut>>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetAsyncWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetAsync (string time = default(string));

        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticMonthlysInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DosingStatisticMonthlysInOut>>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetAsyncWithHttpInfo (string time = default(string));
        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostAsync (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));

        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostAsyncWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDosingStatisticMonthlyApi : IDosingStatisticMonthlyApiSync, IDosingStatisticMonthlyApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DosingStatisticMonthlyApi : IDosingStatisticMonthlyApi
    {
        private wwtp_paas_main_bus_service.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DosingStatisticMonthlyApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DosingStatisticMonthlyApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DosingStatisticMonthlyApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DosingStatisticMonthlyApi(String basePath)
        {
            this.Configuration = wwtp_paas_main_bus_service.Client.Configuration.MergeConfigurations(
                wwtp_paas_main_bus_service.Client.GlobalConfiguration.Instance,
                new wwtp_paas_main_bus_service.Client.Configuration { BasePath = basePath }
            );
            this.Client = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = wwtp_paas_main_bus_service.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DosingStatisticMonthlyApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DosingStatisticMonthlyApi(wwtp_paas_main_bus_service.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = wwtp_paas_main_bus_service.Client.Configuration.MergeConfigurations(
                wwtp_paas_main_bus_service.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new wwtp_paas_main_bus_service.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = wwtp_paas_main_bus_service.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DosingStatisticMonthlyApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DosingStatisticMonthlyApi(wwtp_paas_main_bus_service.Client.ISynchronousClient client,wwtp_paas_main_bus_service.Client.IAsynchronousClient asyncClient, wwtp_paas_main_bus_service.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = wwtp_paas_main_bus_service.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public wwtp_paas_main_bus_service.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public wwtp_paas_main_bus_service.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public wwtp_paas_main_bus_service.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public wwtp_paas_main_bus_service.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPost (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostWithHttpInfo(dosingStatisticMonthlysInOut);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< Object >> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dosingStatisticMonthlysInOut;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/DosingStatisticMonthly/AddDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostAsync (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = await ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostAsyncWithHttpInfo(dosingStatisticMonthlysInOut);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 添加加药月统计信息 Add dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPostAsyncWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dosingStatisticMonthlysInOut;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/DosingStatisticMonthly/AddDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyAddDosingStatisticMonthlysPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPost (List<Guid> requestBody = default(List<Guid>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< Object >> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/DosingStatisticMonthly/DeleteDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = await ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据ID删除加药月统计信息 Delete dosing monthly statistic data by ids 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/DosingStatisticMonthly/DeleteDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyDeleteDosingStatisticMonthlysPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public Result<List<DosingStatisticMonthlysInOut>> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGet ()
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> localVarResponse = ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<DosingStatisticMonthlysInOut> >> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetWithHttpInfo ()
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DosingStatisticMonthlysInOut> >>("/api/DosingStatisticMonthly/GetAllDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetAsync ()
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> localVarResponse = await ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有加药月统计信息 Get all dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticMonthlysInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>>> ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGetAsyncWithHttpInfo ()
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DosingStatisticMonthlysInOut>>>("/api/DosingStatisticMonthly/GetAllDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyGetAllDosingStatisticMonthlysGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public Result<List<DosingStatisticMonthlysInOut>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGet (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> localVarResponse = ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetWithHttpInfo(category, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<DosingStatisticMonthlysInOut> >> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DosingStatisticMonthlysInOut> >>("/api/DosingStatisticMonthly/GetDosingStatisticMonthlysByCategory", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetAsync (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> localVarResponse = await ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetAsyncWithHttpInfo(category, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过药剂类型获取加药月统计信息 Get dosing monthly statistic data by dosage type 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">药剂类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticMonthlysInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGetAsyncWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DosingStatisticMonthlysInOut>>>("/api/DosingStatisticMonthly/GetDosingStatisticMonthlysByCategory", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByCategoryGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public Result<List<DosingStatisticMonthlysInOut>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGet (string time = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> localVarResponse = ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetWithHttpInfo(time);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< List<DosingStatisticMonthlysInOut> >> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetWithHttpInfo (string time = default(string))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (time != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "time", time));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DosingStatisticMonthlysInOut> >>("/api/DosingStatisticMonthly/GetDosingStatisticMonthlysByDate", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticMonthlysInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DosingStatisticMonthlysInOut>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetAsync (string time = default(string))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>> localVarResponse = await ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetAsyncWithHttpInfo(time);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过时间获取加药月统计信息 Get dosing monthly statistic data by time 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="time">时间 time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticMonthlysInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<List<DosingStatisticMonthlysInOut>>>> ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGetAsyncWithHttpInfo (string time = default(string))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (time != null)
            {
                localVarRequestOptions.QueryParameters.Add(wwtp_paas_main_bus_service.Client.ClientUtils.ParameterToMultiMap("", "time", time));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DosingStatisticMonthlysInOut>>>("/api/DosingStatisticMonthly/GetDosingStatisticMonthlysByDate", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyGetDosingStatisticMonthlysByDateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPost (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostWithHttpInfo(dosingStatisticMonthlysInOut);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public wwtp_paas_main_bus_service.Client.ApiResponse<Result< Object >> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {
            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = wwtp_paas_main_bus_service.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dosingStatisticMonthlysInOut;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/DosingStatisticMonthly/UpdateDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostAsync (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {
             wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>> localVarResponse = await ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostAsyncWithHttpInfo(dosingStatisticMonthlysInOut);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新加药月统计信息 Update dosing monthly statistic data 
        /// </summary>
        /// <exception cref="wwtp_paas_main_bus_service.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingStatisticMonthlysInOut"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<wwtp_paas_main_bus_service.Client.ApiResponse<Result<Object>>> ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPostAsyncWithHttpInfo (List<DosingStatisticMonthlysInOut> dosingStatisticMonthlysInOut = default(List<DosingStatisticMonthlysInOut>))
        {

            wwtp_paas_main_bus_service.Client.RequestOptions localVarRequestOptions = new wwtp_paas_main_bus_service.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dosingStatisticMonthlysInOut;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/DosingStatisticMonthly/UpdateDosingStatisticMonthlys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiDosingStatisticMonthlyUpdateDosingStatisticMonthlysPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
