/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHI.DSS.WWTPPaasMainBusServiceSDK.Client;
using DHI.DSS.WWTPPaasMainBusServiceSDK.Model;

namespace DHI.DSS.WWTPPaasMainBusServiceSDK.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentDenitrificationApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns></returns>
        void ApiIntelligentDenitrificationDownloadDosingLogGet (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiIntelligentDenitrificationDownloadDosingLogGetWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));
        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns></returns>
        void ApiIntelligentDenitrificationDownloadDosingStatisticDailyGet (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Result<Object>> ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));
        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;AbftProcessStatusOutput&gt;</returns>
        Result<List<AbftProcessStatusOutput>> ApiIntelligentDenitrificationGetABFTProcessStatusGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;AbftProcessStatusOutput&gt;</returns>
        ApiResponse<Result<List<AbftProcessStatusOutput>>> ApiIntelligentDenitrificationGetABFTProcessStatusGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>SingleCodeDatasOutput</returns>
        Result<SingleCodeDatasOutput> ApiIntelligentDenitrificationGetAnoxicNO3Get (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of SingleCodeDatasOutput</returns>
        ApiResponse<Result<SingleCodeDatasOutput>> ApiIntelligentDenitrificationGetAnoxicNO3GetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据展示类别获取点位配置信息
        /// </summary>
        /// <remarks>
        /// 根据展示类别获取点位配置信息
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>List&lt;AssemblyConfigOutput&gt;</returns>
        Result<List<AssemblyConfigOutput>> ApiIntelligentDenitrificationGetAssemblyConfigsGet (int? displayTypeEnum = default(int?), string productLine = default(string));

        /// <summary>
        /// 根据展示类别获取点位配置信息
        /// </summary>
        /// <remarks>
        /// 根据展示类别获取点位配置信息
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>ApiResponse of List&lt;AssemblyConfigOutput&gt;</returns>
        ApiResponse<Result<List<AssemblyConfigOutput>>> ApiIntelligentDenitrificationGetAssemblyConfigsGetWithHttpInfo (int? displayTypeEnum = default(int?), string productLine = default(string));
        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>CdAdditionRateOutput</returns>
        Result<CdAdditionRateOutput> ApiIntelligentDenitrificationGetCDAdditionRateGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of CdAdditionRateOutput</returns>
        ApiResponse<Result<CdAdditionRateOutput>> ApiIntelligentDenitrificationGetCDAdditionRateGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>SingleCodeDatasOutput</returns>
        Result<SingleCodeDatasOutput> ApiIntelligentDenitrificationGetDenitrificationRateGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of SingleCodeDatasOutput</returns>
        ApiResponse<Result<SingleCodeDatasOutput>> ApiIntelligentDenitrificationGetDenitrificationRateGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>DosingLogOutput</returns>
        Result<DosingLogOutput> ApiIntelligentDenitrificationGetDosingLogGet (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of DosingLogOutput</returns>
        ApiResponse<Result<DosingLogOutput>> ApiIntelligentDenitrificationGetDosingLogGetWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取加药参数 Get dosing paramters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>List&lt;DosingParameterOutput&gt;</returns>
        Result<List<DosingParameterOutput>> ApiIntelligentDenitrificationGetDosingParameterGet (int? category = default(int?), string productionLineCode = default(string));

        /// <summary>
        /// 获取加药参数 Get dosing paramters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingParameterOutput&gt;</returns>
        ApiResponse<Result<List<DosingParameterOutput>>> ApiIntelligentDenitrificationGetDosingParameterGetWithHttpInfo (int? category = default(int?), string productionLineCode = default(string));
        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;DosingStatisticDailysOutput&gt;</returns>
        Result<List<DosingStatisticDailysOutput>> ApiIntelligentDenitrificationGetDosingStatisticDailysGet (int? category = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticDailysOutput&gt;</returns>
        ApiResponse<Result<List<DosingStatisticDailysOutput>>> ApiIntelligentDenitrificationGetDosingStatisticDailysGetWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;InletLoadOutput&gt;</returns>
        Result<List<InletLoadOutput>> ApiIntelligentDenitrificationGetInletLoadGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;InletLoadOutput&gt;</returns>
        ApiResponse<Result<List<InletLoadOutput>>> ApiIntelligentDenitrificationGetInletLoadGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>OutletTnOutput</returns>
        Result<OutletTnOutput> ApiIntelligentDenitrificationGetOutletTNGet (string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of OutletTnOutput</returns>
        ApiResponse<Result<OutletTnOutput>> ApiIntelligentDenitrificationGetOutletTNGetWithHttpInfo (string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 保存加药参数 Save dosing parameters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiIntelligentDenitrificationSaveDosingParameterPost (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));

        /// <summary>
        /// 保存加药参数 Save dosing parameters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiIntelligentDenitrificationSaveDosingParameterPostWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentDenitrificationApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiIntelligentDenitrificationDownloadDosingLogGetAsync (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiIntelligentDenitrificationDownloadDosingLogGetAsyncWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));
        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetAsync (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetAsyncWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string));
        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;AbftProcessStatusOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AbftProcessStatusOutput>>> ApiIntelligentDenitrificationGetABFTProcessStatusGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AbftProcessStatusOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AbftProcessStatusOutput>>>> ApiIntelligentDenitrificationGetABFTProcessStatusGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of SingleCodeDatasOutput</returns>
        System.Threading.Tasks.Task<Result<SingleCodeDatasOutput>> ApiIntelligentDenitrificationGetAnoxicNO3GetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (SingleCodeDatasOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<SingleCodeDatasOutput>>> ApiIntelligentDenitrificationGetAnoxicNO3GetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据展示类别获取点位配置信息
        /// </summary>
        /// <remarks>
        /// 根据展示类别获取点位配置信息
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>Task of List&lt;AssemblyConfigOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AssemblyConfigOutput>>> ApiIntelligentDenitrificationGetAssemblyConfigsGetAsync (int? displayTypeEnum = default(int?), string productLine = default(string));

        /// <summary>
        /// 根据展示类别获取点位配置信息
        /// </summary>
        /// <remarks>
        /// 根据展示类别获取点位配置信息
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AssemblyConfigOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AssemblyConfigOutput>>>> ApiIntelligentDenitrificationGetAssemblyConfigsGetAsyncWithHttpInfo (int? displayTypeEnum = default(int?), string productLine = default(string));
        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of CdAdditionRateOutput</returns>
        System.Threading.Tasks.Task<Result<CdAdditionRateOutput>> ApiIntelligentDenitrificationGetCDAdditionRateGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (CdAdditionRateOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<CdAdditionRateOutput>>> ApiIntelligentDenitrificationGetCDAdditionRateGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of SingleCodeDatasOutput</returns>
        System.Threading.Tasks.Task<Result<SingleCodeDatasOutput>> ApiIntelligentDenitrificationGetDenitrificationRateGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (SingleCodeDatasOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<SingleCodeDatasOutput>>> ApiIntelligentDenitrificationGetDenitrificationRateGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of DosingLogOutput</returns>
        System.Threading.Tasks.Task<Result<DosingLogOutput>> ApiIntelligentDenitrificationGetDosingLogGetAsync (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (DosingLogOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DosingLogOutput>>> ApiIntelligentDenitrificationGetDosingLogGetAsyncWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取加药参数 Get dosing paramters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>Task of List&lt;DosingParameterOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DosingParameterOutput>>> ApiIntelligentDenitrificationGetDosingParameterGetAsync (int? category = default(int?), string productionLineCode = default(string));

        /// <summary>
        /// 获取加药参数 Get dosing paramters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingParameterOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DosingParameterOutput>>>> ApiIntelligentDenitrificationGetDosingParameterGetAsyncWithHttpInfo (int? category = default(int?), string productionLineCode = default(string));
        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticDailysOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DosingStatisticDailysOutput>>> ApiIntelligentDenitrificationGetDosingStatisticDailysGetAsync (int? category = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticDailysOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DosingStatisticDailysOutput>>>> ApiIntelligentDenitrificationGetDosingStatisticDailysGetAsyncWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;InletLoadOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<InletLoadOutput>>> ApiIntelligentDenitrificationGetInletLoadGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;InletLoadOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<InletLoadOutput>>>> ApiIntelligentDenitrificationGetInletLoadGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of OutletTnOutput</returns>
        System.Threading.Tasks.Task<Result<OutletTnOutput>> ApiIntelligentDenitrificationGetOutletTNGetAsync (string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (OutletTnOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<OutletTnOutput>>> ApiIntelligentDenitrificationGetOutletTNGetAsyncWithHttpInfo (string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 保存加药参数 Save dosing parameters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiIntelligentDenitrificationSaveDosingParameterPostAsync (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));

        /// <summary>
        /// 保存加药参数 Save dosing parameters
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiIntelligentDenitrificationSaveDosingParameterPostAsyncWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IIntelligentDenitrificationApi : IIntelligentDenitrificationApiSync, IIntelligentDenitrificationApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class IntelligentDenitrificationApi : IIntelligentDenitrificationApi
    {
        private DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentDenitrificationApi"/> class.
        /// </summary>
        /// <returns></returns>
        public IntelligentDenitrificationApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentDenitrificationApi"/> class.
        /// </summary>
        /// <returns></returns>
        public IntelligentDenitrificationApi(String basePath)
        {
            this.Configuration = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasMainBusServiceSDK.Client.GlobalConfiguration.Instance,
                new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentDenitrificationApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public IntelligentDenitrificationApi(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasMainBusServiceSDK.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="IntelligentDenitrificationApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public IntelligentDenitrificationApi(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ISynchronousClient client,DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IAsynchronousClient asyncClient, DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns></returns>
        public void ApiIntelligentDenitrificationDownloadDosingLogGet (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {
             ApiIntelligentDenitrificationDownloadDosingLogGetWithHttpInfo(category, productionLine, startTime, endTime, downloadKey);
        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> ApiIntelligentDenitrificationDownloadDosingLogGetWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }
            if (downloadKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "downloadKey", downloadKey));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result<Object>>("/api/IntelligentDenitrification/DownloadDosingLog", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationDownloadDosingLogGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiIntelligentDenitrificationDownloadDosingLogGetAsync (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {
             await ApiIntelligentDenitrificationDownloadDosingLogGetAsyncWithHttpInfo(category, productionLine, startTime, endTime, downloadKey);

        }

        /// <summary>
        /// 指定时间段内加药报表文件导出 Export dosing logs of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiIntelligentDenitrificationDownloadDosingLogGetAsyncWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }
            if (downloadKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "downloadKey", downloadKey));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/IntelligentDenitrification/DownloadDosingLog", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationDownloadDosingLogGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns></returns>
        public void ApiIntelligentDenitrificationDownloadDosingStatisticDailyGet (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {
             ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetWithHttpInfo(category, startTime, endTime, downloadKey);
        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }
            if (downloadKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "downloadKey", downloadKey));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result<Object>>("/api/IntelligentDenitrification/DownloadDosingStatisticDaily", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationDownloadDosingStatisticDailyGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetAsync (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {
             await ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetAsyncWithHttpInfo(category, startTime, endTime, downloadKey);

        }

        /// <summary>
        /// 指定时间段内加药统计文件导出 Export dosing daily statistic results of a certain period as an excel file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="downloadKey">下载key download key (optional)</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiIntelligentDenitrificationDownloadDosingStatisticDailyGetAsyncWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string), string downloadKey = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }
            if (downloadKey != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "downloadKey", downloadKey));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/IntelligentDenitrification/DownloadDosingStatisticDaily", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationDownloadDosingStatisticDailyGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;AbftProcessStatusOutput&gt;</returns>
        public Result<List<AbftProcessStatusOutput>> ApiIntelligentDenitrificationGetABFTProcessStatusGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<AbftProcessStatusOutput>>> localVarResponse = ApiIntelligentDenitrificationGetABFTProcessStatusGetWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;AbftProcessStatusOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<AbftProcessStatusOutput> >> ApiIntelligentDenitrificationGetABFTProcessStatusGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AbftProcessStatusOutput> >>("/api/IntelligentDenitrification/GetABFTProcessStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetABFTProcessStatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;AbftProcessStatusOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AbftProcessStatusOutput>>> ApiIntelligentDenitrificationGetABFTProcessStatusGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<AbftProcessStatusOutput>>> localVarResponse = await ApiIntelligentDenitrificationGetABFTProcessStatusGetAsyncWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取生化池工艺运行状态 Get biochemical pool operation status 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AbftProcessStatusOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<AbftProcessStatusOutput>>>> ApiIntelligentDenitrificationGetABFTProcessStatusGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AbftProcessStatusOutput>>>("/api/IntelligentDenitrification/GetABFTProcessStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetABFTProcessStatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>SingleCodeDatasOutput</returns>
        public Result<SingleCodeDatasOutput> ApiIntelligentDenitrificationGetAnoxicNO3Get (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<SingleCodeDatasOutput>> localVarResponse = ApiIntelligentDenitrificationGetAnoxicNO3GetWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of SingleCodeDatasOutput</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< SingleCodeDatasOutput >> ApiIntelligentDenitrificationGetAnoxicNO3GetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< SingleCodeDatasOutput >>("/api/IntelligentDenitrification/GetAnoxicNO3", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetAnoxicNO3Get", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of SingleCodeDatasOutput</returns>
        public async System.Threading.Tasks.Task<Result<SingleCodeDatasOutput>> ApiIntelligentDenitrificationGetAnoxicNO3GetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<SingleCodeDatasOutput>> localVarResponse = await ApiIntelligentDenitrificationGetAnoxicNO3GetAsyncWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取缺氧区出水硝酸盐 Get anoxic zone effluent nitrate concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (SingleCodeDatasOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<SingleCodeDatasOutput>>> ApiIntelligentDenitrificationGetAnoxicNO3GetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<SingleCodeDatasOutput>>("/api/IntelligentDenitrification/GetAnoxicNO3", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetAnoxicNO3Get", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据展示类别获取点位配置信息 根据展示类别获取点位配置信息
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>List&lt;AssemblyConfigOutput&gt;</returns>
        public Result<List<AssemblyConfigOutput>> ApiIntelligentDenitrificationGetAssemblyConfigsGet (int? displayTypeEnum = default(int?), string productLine = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<AssemblyConfigOutput>>> localVarResponse = ApiIntelligentDenitrificationGetAssemblyConfigsGetWithHttpInfo(displayTypeEnum, productLine);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据展示类别获取点位配置信息 根据展示类别获取点位配置信息
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>ApiResponse of List&lt;AssemblyConfigOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<AssemblyConfigOutput> >> ApiIntelligentDenitrificationGetAssemblyConfigsGetWithHttpInfo (int? displayTypeEnum = default(int?), string productLine = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (displayTypeEnum != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "displayTypeEnum", displayTypeEnum));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AssemblyConfigOutput> >>("/api/IntelligentDenitrification/GetAssemblyConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetAssemblyConfigsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据展示类别获取点位配置信息 根据展示类别获取点位配置信息
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>Task of List&lt;AssemblyConfigOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AssemblyConfigOutput>>> ApiIntelligentDenitrificationGetAssemblyConfigsGetAsync (int? displayTypeEnum = default(int?), string productLine = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<AssemblyConfigOutput>>> localVarResponse = await ApiIntelligentDenitrificationGetAssemblyConfigsGetAsyncWithHttpInfo(displayTypeEnum, productLine);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据展示类别获取点位配置信息 根据展示类别获取点位配置信息
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="displayTypeEnum">展示枚举 (optional)</param>
        /// <param name="productLine">产线 (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AssemblyConfigOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<AssemblyConfigOutput>>>> ApiIntelligentDenitrificationGetAssemblyConfigsGetAsyncWithHttpInfo (int? displayTypeEnum = default(int?), string productLine = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (displayTypeEnum != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "displayTypeEnum", displayTypeEnum));
            }
            if (productLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productLine", productLine));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AssemblyConfigOutput>>>("/api/IntelligentDenitrification/GetAssemblyConfigs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetAssemblyConfigsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>CdAdditionRateOutput</returns>
        public Result<CdAdditionRateOutput> ApiIntelligentDenitrificationGetCDAdditionRateGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<CdAdditionRateOutput>> localVarResponse = ApiIntelligentDenitrificationGetCDAdditionRateGetWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of CdAdditionRateOutput</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< CdAdditionRateOutput >> ApiIntelligentDenitrificationGetCDAdditionRateGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< CdAdditionRateOutput >>("/api/IntelligentDenitrification/GetCDAdditionRate", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetCDAdditionRateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of CdAdditionRateOutput</returns>
        public async System.Threading.Tasks.Task<Result<CdAdditionRateOutput>> ApiIntelligentDenitrificationGetCDAdditionRateGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<CdAdditionRateOutput>> localVarResponse = await ApiIntelligentDenitrificationGetCDAdditionRateGetAsyncWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取碳源投加速率 Get carbon source dosing rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (CdAdditionRateOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<CdAdditionRateOutput>>> ApiIntelligentDenitrificationGetCDAdditionRateGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<CdAdditionRateOutput>>("/api/IntelligentDenitrification/GetCDAdditionRate", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetCDAdditionRateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>SingleCodeDatasOutput</returns>
        public Result<SingleCodeDatasOutput> ApiIntelligentDenitrificationGetDenitrificationRateGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<SingleCodeDatasOutput>> localVarResponse = ApiIntelligentDenitrificationGetDenitrificationRateGetWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of SingleCodeDatasOutput</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< SingleCodeDatasOutput >> ApiIntelligentDenitrificationGetDenitrificationRateGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< SingleCodeDatasOutput >>("/api/IntelligentDenitrification/GetDenitrificationRate", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDenitrificationRateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of SingleCodeDatasOutput</returns>
        public async System.Threading.Tasks.Task<Result<SingleCodeDatasOutput>> ApiIntelligentDenitrificationGetDenitrificationRateGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<SingleCodeDatasOutput>> localVarResponse = await ApiIntelligentDenitrificationGetDenitrificationRateGetAsyncWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取反硝化速率 Get denitrification rate data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (SingleCodeDatasOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<SingleCodeDatasOutput>>> ApiIntelligentDenitrificationGetDenitrificationRateGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<SingleCodeDatasOutput>>("/api/IntelligentDenitrification/GetDenitrificationRate", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDenitrificationRateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>DosingLogOutput</returns>
        public Result<DosingLogOutput> ApiIntelligentDenitrificationGetDosingLogGet (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<DosingLogOutput>> localVarResponse = ApiIntelligentDenitrificationGetDosingLogGetWithHttpInfo(category, productionLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of DosingLogOutput</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< DosingLogOutput >> ApiIntelligentDenitrificationGetDosingLogGetWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< DosingLogOutput >>("/api/IntelligentDenitrification/GetDosingLog", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDosingLogGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of DosingLogOutput</returns>
        public async System.Threading.Tasks.Task<Result<DosingLogOutput>> ApiIntelligentDenitrificationGetDosingLogGetAsync (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<DosingLogOutput>> localVarResponse = await ApiIntelligentDenitrificationGetDosingLogGetAsyncWithHttpInfo(category, productionLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取指定时间段内的加药报表 Get dosing logs of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="productionLine">产线代码 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (DosingLogOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<DosingLogOutput>>> ApiIntelligentDenitrificationGetDosingLogGetAsyncWithHttpInfo (int? category = default(int?), string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<DosingLogOutput>>("/api/IntelligentDenitrification/GetDosingLog", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDosingLogGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取加药参数 Get dosing paramters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>List&lt;DosingParameterOutput&gt;</returns>
        public Result<List<DosingParameterOutput>> ApiIntelligentDenitrificationGetDosingParameterGet (int? category = default(int?), string productionLineCode = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingParameterOutput>>> localVarResponse = ApiIntelligentDenitrificationGetDosingParameterGetWithHttpInfo(category, productionLineCode);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取加药参数 Get dosing paramters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingParameterOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<DosingParameterOutput> >> ApiIntelligentDenitrificationGetDosingParameterGetWithHttpInfo (int? category = default(int?), string productionLineCode = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (productionLineCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLineCode", productionLineCode));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DosingParameterOutput> >>("/api/IntelligentDenitrification/GetDosingParameter", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDosingParameterGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取加药参数 Get dosing paramters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>Task of List&lt;DosingParameterOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DosingParameterOutput>>> ApiIntelligentDenitrificationGetDosingParameterGetAsync (int? category = default(int?), string productionLineCode = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingParameterOutput>>> localVarResponse = await ApiIntelligentDenitrificationGetDosingParameterGetAsyncWithHttpInfo(category, productionLineCode);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取加药参数 Get dosing paramters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类别 dosage type (optional)</param>
        /// <param name="productionLineCode">产线编号 product line code (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingParameterOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingParameterOutput>>>> ApiIntelligentDenitrificationGetDosingParameterGetAsyncWithHttpInfo (int? category = default(int?), string productionLineCode = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (productionLineCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLineCode", productionLineCode));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DosingParameterOutput>>>("/api/IntelligentDenitrification/GetDosingParameter", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDosingParameterGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;DosingStatisticDailysOutput&gt;</returns>
        public Result<List<DosingStatisticDailysOutput>> ApiIntelligentDenitrificationGetDosingStatisticDailysGet (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingStatisticDailysOutput>>> localVarResponse = ApiIntelligentDenitrificationGetDosingStatisticDailysGetWithHttpInfo(category, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;DosingStatisticDailysOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<DosingStatisticDailysOutput> >> ApiIntelligentDenitrificationGetDosingStatisticDailysGetWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DosingStatisticDailysOutput> >>("/api/IntelligentDenitrification/GetDosingStatisticDailys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDosingStatisticDailysGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;DosingStatisticDailysOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DosingStatisticDailysOutput>>> ApiIntelligentDenitrificationGetDosingStatisticDailysGetAsync (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingStatisticDailysOutput>>> localVarResponse = await ApiIntelligentDenitrificationGetDosingStatisticDailysGetAsyncWithHttpInfo(category, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 指定时间段内加药统计查询 Get dosing daily statistic results of a certain period 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="category">加药类型 dosage type (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DosingStatisticDailysOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<DosingStatisticDailysOutput>>>> ApiIntelligentDenitrificationGetDosingStatisticDailysGetAsyncWithHttpInfo (int? category = default(int?), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (category != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "category", category));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DosingStatisticDailysOutput>>>("/api/IntelligentDenitrification/GetDosingStatisticDailys", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetDosingStatisticDailysGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>List&lt;InletLoadOutput&gt;</returns>
        public Result<List<InletLoadOutput>> ApiIntelligentDenitrificationGetInletLoadGet (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<InletLoadOutput>>> localVarResponse = ApiIntelligentDenitrificationGetInletLoadGetWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of List&lt;InletLoadOutput&gt;</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< List<InletLoadOutput> >> ApiIntelligentDenitrificationGetInletLoadGetWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<InletLoadOutput> >>("/api/IntelligentDenitrification/GetInletLoad", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetInletLoadGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of List&lt;InletLoadOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<InletLoadOutput>>> ApiIntelligentDenitrificationGetInletLoadGetAsync (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<InletLoadOutput>>> localVarResponse = await ApiIntelligentDenitrificationGetInletLoadGetAsyncWithHttpInfo(productionLine, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取进水负荷 Get inlet water quality load data 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="productionLine">产线编号 product line code (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;InletLoadOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<List<InletLoadOutput>>>> ApiIntelligentDenitrificationGetInletLoadGetAsyncWithHttpInfo (string productionLine = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (productionLine != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "productionLine", productionLine));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<InletLoadOutput>>>("/api/IntelligentDenitrification/GetInletLoad", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetInletLoadGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>OutletTnOutput</returns>
        public Result<OutletTnOutput> ApiIntelligentDenitrificationGetOutletTNGet (string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<OutletTnOutput>> localVarResponse = ApiIntelligentDenitrificationGetOutletTNGetWithHttpInfo(startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>ApiResponse of OutletTnOutput</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< OutletTnOutput >> ApiIntelligentDenitrificationGetOutletTNGetWithHttpInfo (string startTime = default(string), string endTime = default(string))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< OutletTnOutput >>("/api/IntelligentDenitrification/GetOutletTN", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetOutletTNGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of OutletTnOutput</returns>
        public async System.Threading.Tasks.Task<Result<OutletTnOutput>> ApiIntelligentDenitrificationGetOutletTNGetAsync (string startTime = default(string), string endTime = default(string))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<OutletTnOutput>> localVarResponse = await ApiIntelligentDenitrificationGetOutletTNGetAsyncWithHttpInfo(startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取出水总氮 Get total effluent nitrogen concentration 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <returns>Task of ApiResponse (OutletTnOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<OutletTnOutput>>> ApiIntelligentDenitrificationGetOutletTNGetAsyncWithHttpInfo (string startTime = default(string), string endTime = default(string))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "startTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "endTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<OutletTnOutput>>("/api/IntelligentDenitrification/GetOutletTN", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationGetOutletTNGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存加药参数 Save dosing parameters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiIntelligentDenitrificationSaveDosingParameterPost (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = ApiIntelligentDenitrificationSaveDosingParameterPostWithHttpInfo(dosingParamSettingDto);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 保存加药参数 Save dosing parameters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result< Object >> ApiIntelligentDenitrificationSaveDosingParameterPostWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dosingParamSettingDto;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/IntelligentDenitrification/SaveDosingParameter", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationSaveDosingParameterPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存加药参数 Save dosing parameters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiIntelligentDenitrificationSaveDosingParameterPostAsync (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {
             DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>> localVarResponse = await ApiIntelligentDenitrificationSaveDosingParameterPostAsyncWithHttpInfo(dosingParamSettingDto);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 保存加药参数 Save dosing parameters 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dosingParamSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasMainBusServiceSDK.Client.ApiResponse<Result<Object>>> ApiIntelligentDenitrificationSaveDosingParameterPostAsyncWithHttpInfo (List<DosingParamSettingDto> dosingParamSettingDto = default(List<DosingParamSettingDto>))
        {

            DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasMainBusServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dosingParamSettingDto;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/IntelligentDenitrification/SaveDosingParameter", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiIntelligentDenitrificationSaveDosingParameterPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
