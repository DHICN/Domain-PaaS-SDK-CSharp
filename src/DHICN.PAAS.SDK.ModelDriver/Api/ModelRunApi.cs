/* 
 * model-driver-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ModelDriver.Client;
using DHICN.PAAS.SDK.ModelDriver.Model;

namespace DHICN.PAAS.SDK.ModelDriver.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelRunApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ModelOperationResult</returns>
        Result<ModelOperationResult> ModelRunCancelModelRunPost (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));

        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ApiResponse of ModelOperationResult</returns>
        ApiResponse<Result<ModelOperationResult>> ModelRunCancelModelRunPostWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));
        /// <summary>
        /// 获取计算队列的长度 Get model running queue length
        /// </summary>
        /// <remarks>
        /// 获取当前模型计算队列的长度 Get current model running queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>int</returns>
        Result<int> ModelRunGetQueueMessageCountPost (ModelTypePara modelTypePara = default(ModelTypePara));

        /// <summary>
        /// 获取计算队列的长度 Get model running queue length
        /// </summary>
        /// <remarks>
        /// 获取当前模型计算队列的长度 Get current model running queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>ApiResponse of int</returns>
        ApiResponse<Result<int>> ModelRunGetQueueMessageCountPostWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara));
        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>List&lt;ScenarioModelMessage&gt;</returns>
        Result<List<ScenarioModelMessage>> ModelRunGetRuningScenarioGet (string projectName = default(string));

        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>ApiResponse of List&lt;ScenarioModelMessage&gt;</returns>
        ApiResponse<Result<List<ScenarioModelMessage>>> ModelRunGetRuningScenarioGetWithHttpInfo (string projectName = default(string));
        /// <summary>
        /// 获取方案的状态 Get scenario’s status
        /// </summary>
        /// <remarks>
        /// 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>List&lt;ScenarioModelStatusMessage&gt;</returns>
        Result<List<ScenarioModelStatusMessage>> ModelRunGetScenarioesStatusPost (ScenarioIds scenarioIds = default(ScenarioIds));

        /// <summary>
        /// 获取方案的状态 Get scenario’s status
        /// </summary>
        /// <remarks>
        /// 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ScenarioModelStatusMessage&gt;</returns>
        ApiResponse<Result<List<ScenarioModelStatusMessage>>> ModelRunGetScenarioesStatusPostWithHttpInfo (ScenarioIds scenarioIds = default(ScenarioIds));
        /// <summary>
        /// 查询计算资源信息 Query compute resource info
        /// </summary>
        /// <remarks>
        /// 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Dictionary&lt;string, string&gt;</returns>
        Result<Dictionary<string, string>> ModelRunQueryComputeResourceInfoPost (ModelTypePara modelTypePara = default(ModelTypePara));

        /// <summary>
        /// 查询计算资源信息 Query compute resource info
        /// </summary>
        /// <remarks>
        /// 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>ApiResponse of Dictionary&lt;string, string&gt;</returns>
        ApiResponse<Result<Dictionary<string, string>>> ModelRunQueryComputeResourceInfoPostWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara));
        /// <summary>
        /// 查询模型计算状态 Query model running status
        /// </summary>
        /// <remarks>
        /// 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>ScenarioModelStatusMessage</returns>
        Result<ScenarioModelStatusMessage> ModelRunQueryModelRunStatusGet (ProjectScenario projectScenario = default(ProjectScenario));

        /// <summary>
        /// 查询模型计算状态 Query model running status
        /// </summary>
        /// <remarks>
        /// 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>ApiResponse of ScenarioModelStatusMessage</returns>
        ApiResponse<Result<ScenarioModelStatusMessage>> ModelRunQueryModelRunStatusGetWithHttpInfo (ProjectScenario projectScenario = default(ProjectScenario));
        /// <summary>
        /// 获取排队情况
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>List&lt;ModelDriverDto&gt;</returns>
        Result<List<ModelDriverDto>> ModelRunQueryQueuesGet (string projectName = default(string), string scenarioId = default(string), string modelType = default(string));

        /// <summary>
        /// 获取排队情况
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelDriverDto&gt;</returns>
        ApiResponse<Result<List<ModelDriverDto>>> ModelRunQueryQueuesGetWithHttpInfo (string projectName = default(string), string scenarioId = default(string), string modelType = default(string));
        /// <summary>
        /// [第一步]驱动计算 Start to run a model
        /// </summary>
        /// <remarks>
        /// 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ModelOperationResult</returns>
        Result<ModelOperationResult> ModelRunRunModelPost (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));

        /// <summary>
        /// [第一步]驱动计算 Start to run a model
        /// </summary>
        /// <remarks>
        /// 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ApiResponse of ModelOperationResult</returns>
        ApiResponse<Result<ModelOperationResult>> ModelRunRunModelPostWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));
        /// <summary>
        /// [第三步]获取方案计算日志
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>CalculateLogsOutput</returns>
        Result<CalculateLogsOutput> ModelRunV2CalculateLogsGet (string scenarioId = default(string));

        /// <summary>
        /// [第三步]获取方案计算日志
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of CalculateLogsOutput</returns>
        ApiResponse<Result<CalculateLogsOutput>> ModelRunV2CalculateLogsGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>List&lt;CalculateStatusOutput&gt;</returns>
        Result<List<CalculateStatusOutput>> ModelRunV2CalculateStatusPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of List&lt;CalculateStatusOutput&gt;</returns>
        ApiResponse<Result<List<CalculateStatusOutput>>> ModelRunV2CalculateStatusPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 取消计算通过queueId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过queueId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>ModelOperationResult</returns>
        Result<ModelOperationResult> ModelRunV2CancelModelRunGet (string queueId = default(string));

        /// <summary>
        /// 取消计算通过queueId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过queueId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>ApiResponse of ModelOperationResult</returns>
        ApiResponse<Result<ModelOperationResult>> ModelRunV2CancelModelRunGetWithHttpInfo (string queueId = default(string));
        /// <summary>
        /// 取消计算通过scenarioId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>CancelResult</returns>
        Result<CancelResult> ModelRunV2CancelModelRunThroughScenarioIdsPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 取消计算通过scenarioId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of CancelResult</returns>
        ApiResponse<Result<CancelResult>> ModelRunV2CancelModelRunThroughScenarioIdsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ModelRunV2UpdateRecordPost (UpdateRecordInput updateRecordInput = default(UpdateRecordInput));

        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ModelRunV2UpdateRecordPostWithHttpInfo (UpdateRecordInput updateRecordInput = default(UpdateRecordInput));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelRunApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ModelOperationResult</returns>
        System.Threading.Tasks.Task<Result<ModelOperationResult>> ModelRunCancelModelRunPostAsync (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));

        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelOperationResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelOperationResult>>> ModelRunCancelModelRunPostAsyncWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));
        /// <summary>
        /// 获取计算队列的长度 Get model running queue length
        /// </summary>
        /// <remarks>
        /// 获取当前模型计算队列的长度 Get current model running queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of int</returns>
        System.Threading.Tasks.Task<Result<int>> ModelRunGetQueueMessageCountPostAsync (ModelTypePara modelTypePara = default(ModelTypePara));

        /// <summary>
        /// 获取计算队列的长度 Get model running queue length
        /// </summary>
        /// <remarks>
        /// 获取当前模型计算队列的长度 Get current model running queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of ApiResponse (int)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<int>>> ModelRunGetQueueMessageCountPostAsyncWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara));
        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>Task of List&lt;ScenarioModelMessage&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ScenarioModelMessage>>> ModelRunGetRuningScenarioGetAsync (string projectName = default(string));

        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ScenarioModelMessage&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ScenarioModelMessage>>>> ModelRunGetRuningScenarioGetAsyncWithHttpInfo (string projectName = default(string));
        /// <summary>
        /// 获取方案的状态 Get scenario’s status
        /// </summary>
        /// <remarks>
        /// 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>Task of List&lt;ScenarioModelStatusMessage&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ScenarioModelStatusMessage>>> ModelRunGetScenarioesStatusPostAsync (ScenarioIds scenarioIds = default(ScenarioIds));

        /// <summary>
        /// 获取方案的状态 Get scenario’s status
        /// </summary>
        /// <remarks>
        /// 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ScenarioModelStatusMessage&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ScenarioModelStatusMessage>>>> ModelRunGetScenarioesStatusPostAsyncWithHttpInfo (ScenarioIds scenarioIds = default(ScenarioIds));
        /// <summary>
        /// 查询计算资源信息 Query compute resource info
        /// </summary>
        /// <remarks>
        /// 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of Dictionary&lt;string, string&gt;</returns>
        System.Threading.Tasks.Task<Result<Dictionary<string, string>>> ModelRunQueryComputeResourceInfoPostAsync (ModelTypePara modelTypePara = default(ModelTypePara));

        /// <summary>
        /// 查询计算资源信息 Query compute resource info
        /// </summary>
        /// <remarks>
        /// 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, string&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Dictionary<string, string>>>> ModelRunQueryComputeResourceInfoPostAsyncWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara));
        /// <summary>
        /// 查询模型计算状态 Query model running status
        /// </summary>
        /// <remarks>
        /// 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>Task of ScenarioModelStatusMessage</returns>
        System.Threading.Tasks.Task<Result<ScenarioModelStatusMessage>> ModelRunQueryModelRunStatusGetAsync (ProjectScenario projectScenario = default(ProjectScenario));

        /// <summary>
        /// 查询模型计算状态 Query model running status
        /// </summary>
        /// <remarks>
        /// 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>Task of ApiResponse (ScenarioModelStatusMessage)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ScenarioModelStatusMessage>>> ModelRunQueryModelRunStatusGetAsyncWithHttpInfo (ProjectScenario projectScenario = default(ProjectScenario));
        /// <summary>
        /// 获取排队情况
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>Task of List&lt;ModelDriverDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelDriverDto>>> ModelRunQueryQueuesGetAsync (string projectName = default(string), string scenarioId = default(string), string modelType = default(string));

        /// <summary>
        /// 获取排队情况
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelDriverDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelDriverDto>>>> ModelRunQueryQueuesGetAsyncWithHttpInfo (string projectName = default(string), string scenarioId = default(string), string modelType = default(string));
        /// <summary>
        /// [第一步]驱动计算 Start to run a model
        /// </summary>
        /// <remarks>
        /// 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ModelOperationResult</returns>
        System.Threading.Tasks.Task<Result<ModelOperationResult>> ModelRunRunModelPostAsync (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));

        /// <summary>
        /// [第一步]驱动计算 Start to run a model
        /// </summary>
        /// <remarks>
        /// 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelOperationResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelOperationResult>>> ModelRunRunModelPostAsyncWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput));
        /// <summary>
        /// [第三步]获取方案计算日志
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of CalculateLogsOutput</returns>
        System.Threading.Tasks.Task<Result<CalculateLogsOutput>> ModelRunV2CalculateLogsGetAsync (string scenarioId = default(string));

        /// <summary>
        /// [第三步]获取方案计算日志
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (CalculateLogsOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<CalculateLogsOutput>>> ModelRunV2CalculateLogsGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of List&lt;CalculateStatusOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<CalculateStatusOutput>>> ModelRunV2CalculateStatusPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;CalculateStatusOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<CalculateStatusOutput>>>> ModelRunV2CalculateStatusPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 取消计算通过queueId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过queueId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>Task of ModelOperationResult</returns>
        System.Threading.Tasks.Task<Result<ModelOperationResult>> ModelRunV2CancelModelRunGetAsync (string queueId = default(string));

        /// <summary>
        /// 取消计算通过queueId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过queueId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelOperationResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelOperationResult>>> ModelRunV2CancelModelRunGetAsyncWithHttpInfo (string queueId = default(string));
        /// <summary>
        /// 取消计算通过scenarioId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of CancelResult</returns>
        System.Threading.Tasks.Task<Result<CancelResult>> ModelRunV2CancelModelRunThroughScenarioIdsPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 取消计算通过scenarioId Cancel model run
        /// </summary>
        /// <remarks>
        /// 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (CancelResult)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<CancelResult>>> ModelRunV2CancelModelRunThroughScenarioIdsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ModelRunV2UpdateRecordPostAsync (UpdateRecordInput updateRecordInput = default(UpdateRecordInput));

        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用）
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ModelRunV2UpdateRecordPostAsyncWithHttpInfo (UpdateRecordInput updateRecordInput = default(UpdateRecordInput));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IModelRunApi : IModelRunApiSync, IModelRunApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ModelRunApi : IModelRunApi
    {
        private DHICN.PAAS.SDK.ModelDriver.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelRunApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ModelRunApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelRunApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ModelRunApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ModelDriver.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelDriver.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ModelDriver.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ModelDriver.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelDriver.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelDriver.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelRunApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ModelRunApi(DHICN.PAAS.SDK.ModelDriver.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ModelDriver.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelDriver.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ModelDriver.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelDriver.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ModelDriver.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ModelRunApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ModelRunApi(DHICN.PAAS.SDK.ModelDriver.Client.ISynchronousClient client,DHICN.PAAS.SDK.ModelDriver.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ModelDriver.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelDriver.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelDriver.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelDriver.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ModelDriver.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ModelDriver.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ModelOperationResult</returns>
        public Result<ModelOperationResult> ModelRunCancelModelRunPost (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>> localVarResponse = ModelRunCancelModelRunPostWithHttpInfo(scenarioModelMessageInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ApiResponse of ModelOperationResult</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< ModelOperationResult >> ModelRunCancelModelRunPostWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = scenarioModelMessageInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< ModelOperationResult >>("/ModelRun/CancelModelRun", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunCancelModelRunPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ModelOperationResult</returns>
        public async System.Threading.Tasks.Task<Result<ModelOperationResult>> ModelRunCancelModelRunPostAsync (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>> localVarResponse = await ModelRunCancelModelRunPostAsyncWithHttpInfo(scenarioModelMessageInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 【废弃】取消模型计算 Cancel model run 取消计算方案模型的任务 Cancel the task to run the model of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelOperationResult)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>>> ModelRunCancelModelRunPostAsyncWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = scenarioModelMessageInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<ModelOperationResult>>("/ModelRun/CancelModelRun", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunCancelModelRunPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取计算队列的长度 Get model running queue length 获取当前模型计算队列的长度 Get current model running queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>int</returns>
        public Result<int> ModelRunGetQueueMessageCountPost (ModelTypePara modelTypePara = default(ModelTypePara))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<int>> localVarResponse = ModelRunGetQueueMessageCountPostWithHttpInfo(modelTypePara);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取计算队列的长度 Get model running queue length 获取当前模型计算队列的长度 Get current model running queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>ApiResponse of int</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< int >> ModelRunGetQueueMessageCountPostWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = modelTypePara;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< int >>("/ModelRun/GetQueueMessageCount", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunGetQueueMessageCountPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取计算队列的长度 Get model running queue length 获取当前模型计算队列的长度 Get current model running queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of int</returns>
        public async System.Threading.Tasks.Task<Result<int>> ModelRunGetQueueMessageCountPostAsync (ModelTypePara modelTypePara = default(ModelTypePara))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<int>> localVarResponse = await ModelRunGetQueueMessageCountPostAsyncWithHttpInfo(modelTypePara);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取计算队列的长度 Get model running queue length 获取当前模型计算队列的长度 Get current model running queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of ApiResponse (int)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<int>>> ModelRunGetQueueMessageCountPostAsyncWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = modelTypePara;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<int>>("/ModelRun/GetQueueMessageCount", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunGetQueueMessageCountPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>List&lt;ScenarioModelMessage&gt;</returns>
        public Result<List<ScenarioModelMessage>> ModelRunGetRuningScenarioGet (string projectName = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ScenarioModelMessage>>> localVarResponse = ModelRunGetRuningScenarioGetWithHttpInfo(projectName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>ApiResponse of List&lt;ScenarioModelMessage&gt;</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< List<ScenarioModelMessage> >> ModelRunGetRuningScenarioGetWithHttpInfo (string projectName = default(string))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ScenarioModelMessage> >>("/ModelRun/GetRuningScenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunGetRuningScenarioGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>Task of List&lt;ScenarioModelMessage&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ScenarioModelMessage>>> ModelRunGetRuningScenarioGetAsync (string projectName = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ScenarioModelMessage>>> localVarResponse = await ModelRunGetRuningScenarioGetAsyncWithHttpInfo(projectName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询正在计算的方案信息 Get scenario information which is running 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ScenarioModelMessage&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ScenarioModelMessage>>>> ModelRunGetRuningScenarioGetAsyncWithHttpInfo (string projectName = default(string))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "projectName", projectName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ScenarioModelMessage>>>("/ModelRun/GetRuningScenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunGetRuningScenarioGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的状态 Get scenario’s status 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>List&lt;ScenarioModelStatusMessage&gt;</returns>
        public Result<List<ScenarioModelStatusMessage>> ModelRunGetScenarioesStatusPost (ScenarioIds scenarioIds = default(ScenarioIds))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ScenarioModelStatusMessage>>> localVarResponse = ModelRunGetScenarioesStatusPostWithHttpInfo(scenarioIds);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案的状态 Get scenario’s status 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ScenarioModelStatusMessage&gt;</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< List<ScenarioModelStatusMessage> >> ModelRunGetScenarioesStatusPostWithHttpInfo (ScenarioIds scenarioIds = default(ScenarioIds))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = scenarioIds;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<ScenarioModelStatusMessage> >>("/ModelRun/GetScenarioesStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunGetScenarioesStatusPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案的状态 Get scenario’s status 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>Task of List&lt;ScenarioModelStatusMessage&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ScenarioModelStatusMessage>>> ModelRunGetScenarioesStatusPostAsync (ScenarioIds scenarioIds = default(ScenarioIds))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ScenarioModelStatusMessage>>> localVarResponse = await ModelRunGetScenarioesStatusPostAsyncWithHttpInfo(scenarioIds);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案的状态 Get scenario’s status 批量获取方案的计算状态 Get scenarios’s model running status in batch mode
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioIds"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ScenarioModelStatusMessage&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ScenarioModelStatusMessage>>>> ModelRunGetScenarioesStatusPostAsyncWithHttpInfo (ScenarioIds scenarioIds = default(ScenarioIds))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = scenarioIds;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<ScenarioModelStatusMessage>>>("/ModelRun/GetScenarioesStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunGetScenarioesStatusPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询计算资源信息 Query compute resource info 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Dictionary&lt;string, string&gt;</returns>
        public Result<Dictionary<string, string>> ModelRunQueryComputeResourceInfoPost (ModelTypePara modelTypePara = default(ModelTypePara))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<Dictionary<string, string>>> localVarResponse = ModelRunQueryComputeResourceInfoPostWithHttpInfo(modelTypePara);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询计算资源信息 Query compute resource info 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>ApiResponse of Dictionary&lt;string, string&gt;</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< Dictionary<string, string> >> ModelRunQueryComputeResourceInfoPostWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = modelTypePara;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Dictionary<string, string> >>("/ModelRun/QueryComputeResourceInfo", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunQueryComputeResourceInfoPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询计算资源信息 Query compute resource info 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of Dictionary&lt;string, string&gt;</returns>
        public async System.Threading.Tasks.Task<Result<Dictionary<string, string>>> ModelRunQueryComputeResourceInfoPostAsync (ModelTypePara modelTypePara = default(ModelTypePara))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<Dictionary<string, string>>> localVarResponse = await ModelRunQueryComputeResourceInfoPostAsyncWithHttpInfo(modelTypePara);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询计算资源信息 Query compute resource info 查询计算资源信息，返回可用的计算服务器个数，以及对应的队列长度 Get compute resource information, return available compute services’count and corresponding queue length
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelTypePara"> (optional)</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, string&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<Dictionary<string, string>>>> ModelRunQueryComputeResourceInfoPostAsyncWithHttpInfo (ModelTypePara modelTypePara = default(ModelTypePara))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = modelTypePara;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Dictionary<string, string>>>("/ModelRun/QueryComputeResourceInfo", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunQueryComputeResourceInfoPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询模型计算状态 Query model running status 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>ScenarioModelStatusMessage</returns>
        public Result<ScenarioModelStatusMessage> ModelRunQueryModelRunStatusGet (ProjectScenario projectScenario = default(ProjectScenario))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ScenarioModelStatusMessage>> localVarResponse = ModelRunQueryModelRunStatusGetWithHttpInfo(projectScenario);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询模型计算状态 Query model running status 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>ApiResponse of ScenarioModelStatusMessage</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< ScenarioModelStatusMessage >> ModelRunQueryModelRunStatusGetWithHttpInfo (ProjectScenario projectScenario = default(ProjectScenario))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = projectScenario;


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ScenarioModelStatusMessage >>("/ModelRun/QueryModelRunStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunQueryModelRunStatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询模型计算状态 Query model running status 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>Task of ScenarioModelStatusMessage</returns>
        public async System.Threading.Tasks.Task<Result<ScenarioModelStatusMessage>> ModelRunQueryModelRunStatusGetAsync (ProjectScenario projectScenario = default(ProjectScenario))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ScenarioModelStatusMessage>> localVarResponse = await ModelRunQueryModelRunStatusGetAsyncWithHttpInfo(projectScenario);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询模型计算状态 Query model running status 查询方案模型计算状态（仅针对计算中的模型），所有状态都在枚举类型ModelState中 Get model running status of a scenario (only for model in running), all the status is listed in the Enum ModelState.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectScenario"> (optional)</param>
        /// <returns>Task of ApiResponse (ScenarioModelStatusMessage)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ScenarioModelStatusMessage>>> ModelRunQueryModelRunStatusGetAsyncWithHttpInfo (ProjectScenario projectScenario = default(ProjectScenario))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = projectScenario;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ScenarioModelStatusMessage>>("/ModelRun/QueryModelRunStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunQueryModelRunStatusGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取排队情况 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>List&lt;ModelDriverDto&gt;</returns>
        public Result<List<ModelDriverDto>> ModelRunQueryQueuesGet (string projectName = default(string), string scenarioId = default(string), string modelType = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ModelDriverDto>>> localVarResponse = ModelRunQueryQueuesGetWithHttpInfo(projectName, scenarioId, modelType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取排队情况 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelDriverDto&gt;</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< List<ModelDriverDto> >> ModelRunQueryQueuesGetWithHttpInfo (string projectName = default(string), string scenarioId = default(string), string modelType = default(string))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "ProjectName", projectName));
            }
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "ModelType", modelType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelDriverDto> >>("/ModelRun/QueryQueues", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunQueryQueuesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取排队情况 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>Task of List&lt;ModelDriverDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelDriverDto>>> ModelRunQueryQueuesGetAsync (string projectName = default(string), string scenarioId = default(string), string modelType = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ModelDriverDto>>> localVarResponse = await ModelRunQueryQueuesGetAsyncWithHttpInfo(projectName, scenarioId, modelType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取排队情况 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectName">项目名称 project name (optional)</param>
        /// <param name="scenarioId">方案Id (optional)</param>
        /// <param name="modelType">模型类型 (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelDriverDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<ModelDriverDto>>>> ModelRunQueryQueuesGetAsyncWithHttpInfo (string projectName = default(string), string scenarioId = default(string), string modelType = default(string))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (projectName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "ProjectName", projectName));
            }
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "ModelType", modelType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelDriverDto>>>("/ModelRun/QueryQueues", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunQueryQueuesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// [第一步]驱动计算 Start to run a model 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ModelOperationResult</returns>
        public Result<ModelOperationResult> ModelRunRunModelPost (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>> localVarResponse = ModelRunRunModelPostWithHttpInfo(scenarioModelMessageInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// [第一步]驱动计算 Start to run a model 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>ApiResponse of ModelOperationResult</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< ModelOperationResult >> ModelRunRunModelPostWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = scenarioModelMessageInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< ModelOperationResult >>("/ModelRun/RunModel", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunRunModelPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// [第一步]驱动计算 Start to run a model 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ModelOperationResult</returns>
        public async System.Threading.Tasks.Task<Result<ModelOperationResult>> ModelRunRunModelPostAsync (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>> localVarResponse = await ModelRunRunModelPostAsyncWithHttpInfo(scenarioModelMessageInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// [第一步]驱动计算 Start to run a model 创建一个方案模型计算的任务，任务将被推送到一个队列中排队进行计算，能够同时执行计算任务的个数取决于计算服务器个数，以及MIKE狗的个数 Generate a task to run the model of a scenario, which will be put in a queue and wait for it’s turn to run. The number of tasks can be run simultaneously depends on the number of compute services and MIKE dongles.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioModelMessageInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelOperationResult)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>>> ModelRunRunModelPostAsyncWithHttpInfo (ScenarioModelMessageInput scenarioModelMessageInput = default(ScenarioModelMessageInput))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = scenarioModelMessageInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<ModelOperationResult>>("/ModelRun/RunModel", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunRunModelPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// [第三步]获取方案计算日志 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>CalculateLogsOutput</returns>
        public Result<CalculateLogsOutput> ModelRunV2CalculateLogsGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<CalculateLogsOutput>> localVarResponse = ModelRunV2CalculateLogsGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// [第三步]获取方案计算日志 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of CalculateLogsOutput</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< CalculateLogsOutput >> ModelRunV2CalculateLogsGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< CalculateLogsOutput >>("/ModelRun/v2/CalculateLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CalculateLogsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// [第三步]获取方案计算日志 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of CalculateLogsOutput</returns>
        public async System.Threading.Tasks.Task<Result<CalculateLogsOutput>> ModelRunV2CalculateLogsGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<CalculateLogsOutput>> localVarResponse = await ModelRunV2CalculateLogsGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// [第三步]获取方案计算日志 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (CalculateLogsOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<CalculateLogsOutput>>> ModelRunV2CalculateLogsGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<CalculateLogsOutput>>("/ModelRun/v2/CalculateLogs", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CalculateLogsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>List&lt;CalculateStatusOutput&gt;</returns>
        public Result<List<CalculateStatusOutput>> ModelRunV2CalculateStatusPost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<CalculateStatusOutput>>> localVarResponse = ModelRunV2CalculateStatusPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of List&lt;CalculateStatusOutput&gt;</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< List<CalculateStatusOutput> >> ModelRunV2CalculateStatusPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<CalculateStatusOutput> >>("/ModelRun/v2/CalculateStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CalculateStatusPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of List&lt;CalculateStatusOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<CalculateStatusOutput>>> ModelRunV2CalculateStatusPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<CalculateStatusOutput>>> localVarResponse = await ModelRunV2CalculateStatusPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// [第二步]获取方案计算状态（对于等待中的方案，返回其排队序号） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;CalculateStatusOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<List<CalculateStatusOutput>>>> ModelRunV2CalculateStatusPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<CalculateStatusOutput>>>("/ModelRun/v2/CalculateStatus", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CalculateStatusPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 取消计算通过queueId Cancel model run 取消计算通过queueId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>ModelOperationResult</returns>
        public Result<ModelOperationResult> ModelRunV2CancelModelRunGet (string queueId = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>> localVarResponse = ModelRunV2CancelModelRunGetWithHttpInfo(queueId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 取消计算通过queueId Cancel model run 取消计算通过queueId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>ApiResponse of ModelOperationResult</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< ModelOperationResult >> ModelRunV2CancelModelRunGetWithHttpInfo (string queueId = default(string))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (queueId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "queueId", queueId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ModelOperationResult >>("/ModelRun/v2/CancelModelRun", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CancelModelRunGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 取消计算通过queueId Cancel model run 取消计算通过queueId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>Task of ModelOperationResult</returns>
        public async System.Threading.Tasks.Task<Result<ModelOperationResult>> ModelRunV2CancelModelRunGetAsync (string queueId = default(string))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>> localVarResponse = await ModelRunV2CancelModelRunGetAsyncWithHttpInfo(queueId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 取消计算通过queueId Cancel model run 取消计算通过queueId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queueId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelOperationResult)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<ModelOperationResult>>> ModelRunV2CancelModelRunGetAsyncWithHttpInfo (string queueId = default(string))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (queueId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.ParameterToMultiMap("", "queueId", queueId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ModelOperationResult>>("/ModelRun/v2/CancelModelRun", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CancelModelRunGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 取消计算通过scenarioId Cancel model run 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>CancelResult</returns>
        public Result<CancelResult> ModelRunV2CancelModelRunThroughScenarioIdsPost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<CancelResult>> localVarResponse = ModelRunV2CancelModelRunThroughScenarioIdsPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 取消计算通过scenarioId Cancel model run 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of CancelResult</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< CancelResult >> ModelRunV2CancelModelRunThroughScenarioIdsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< CancelResult >>("/ModelRun/v2/CancelModelRun/Through/ScenarioIds", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CancelModelRunThroughScenarioIdsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 取消计算通过scenarioId Cancel model run 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of CancelResult</returns>
        public async System.Threading.Tasks.Task<Result<CancelResult>> ModelRunV2CancelModelRunThroughScenarioIdsPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<CancelResult>> localVarResponse = await ModelRunV2CancelModelRunThroughScenarioIdsPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 取消计算通过scenarioId Cancel model run 取消计算通过scenarioId Cancelling the computation through queueId.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (CancelResult)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<CancelResult>>> ModelRunV2CancelModelRunThroughScenarioIdsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<CancelResult>>("/ModelRun/v2/CancelModelRun/Through/ScenarioIds", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2CancelModelRunThroughScenarioIdsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ModelRunV2UpdateRecordPost (UpdateRecordInput updateRecordInput = default(UpdateRecordInput))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<bool>> localVarResponse = ModelRunV2UpdateRecordPostWithHttpInfo(updateRecordInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result< bool >> ModelRunV2UpdateRecordPostWithHttpInfo (UpdateRecordInput updateRecordInput = default(UpdateRecordInput))
        {
            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelDriver.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateRecordInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/ModelRun/v2/UpdateRecord", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2UpdateRecordPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ModelRunV2UpdateRecordPostAsync (UpdateRecordInput updateRecordInput = default(UpdateRecordInput))
        {
             DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<bool>> localVarResponse = await ModelRunV2UpdateRecordPostAsyncWithHttpInfo(updateRecordInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过方案ID来更新minIO地址（后端内部调用） 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelDriver.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRecordInput"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelDriver.Client.ApiResponse<Result<bool>>> ModelRunV2UpdateRecordPostAsyncWithHttpInfo (UpdateRecordInput updateRecordInput = default(UpdateRecordInput))
        {

            DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelDriver.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateRecordInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/ModelRun/v2/UpdateRecord", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModelRunV2UpdateRecordPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
