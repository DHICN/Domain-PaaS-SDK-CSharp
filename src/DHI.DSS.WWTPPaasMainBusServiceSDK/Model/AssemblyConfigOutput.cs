/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.WWTPPaasMainBusServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.WWTPPaasMainBusServiceSDK.Model
{
    /// <summary>
    /// AssemblyConfigOutput
    /// </summary>
    [DataContract]
    public partial class AssemblyConfigOutput :  IEquatable<AssemblyConfigOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AssemblyConfigOutput" /> class.
        /// </summary>
        /// <param name="sysCodeConfig">sysCodeConfig.</param>
        /// <param name="onlinePointConfig">onlinePointConfig.</param>
        /// <param name="modelNodeConfig">modelNodeConfig.</param>
        /// <param name="mappingConfig">mappingConfig.</param>
        public AssemblyConfigOutput(SysCodeConfigInputOutput sysCodeConfig = default(SysCodeConfigInputOutput), OnlinePointConfigInputOutput onlinePointConfig = default(OnlinePointConfigInputOutput), ModelNodeConfigInputOutput modelNodeConfig = default(ModelNodeConfigInputOutput), MappingConfigInputOutput mappingConfig = default(MappingConfigInputOutput))
        {
            this.SysCodeConfig = sysCodeConfig;
            this.OnlinePointConfig = onlinePointConfig;
            this.ModelNodeConfig = modelNodeConfig;
            this.MappingConfig = mappingConfig;
        }
        
        /// <summary>
        /// Gets or Sets SysCodeConfig
        /// </summary>
        [DataMember(Name="sysCodeConfig", EmitDefaultValue=false)]
        public SysCodeConfigInputOutput SysCodeConfig { get; set; }

        /// <summary>
        /// Gets or Sets OnlinePointConfig
        /// </summary>
        [DataMember(Name="onlinePointConfig", EmitDefaultValue=false)]
        public OnlinePointConfigInputOutput OnlinePointConfig { get; set; }

        /// <summary>
        /// Gets or Sets ModelNodeConfig
        /// </summary>
        [DataMember(Name="modelNodeConfig", EmitDefaultValue=false)]
        public ModelNodeConfigInputOutput ModelNodeConfig { get; set; }

        /// <summary>
        /// Gets or Sets MappingConfig
        /// </summary>
        [DataMember(Name="mappingConfig", EmitDefaultValue=false)]
        public MappingConfigInputOutput MappingConfig { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AssemblyConfigOutput {\n");
            sb.Append("  SysCodeConfig: ").Append(SysCodeConfig).Append("\n");
            sb.Append("  OnlinePointConfig: ").Append(OnlinePointConfig).Append("\n");
            sb.Append("  ModelNodeConfig: ").Append(ModelNodeConfig).Append("\n");
            sb.Append("  MappingConfig: ").Append(MappingConfig).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AssemblyConfigOutput);
        }

        /// <summary>
        /// Returns true if AssemblyConfigOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of AssemblyConfigOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AssemblyConfigOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SysCodeConfig == input.SysCodeConfig ||
                    (this.SysCodeConfig != null &&
                    this.SysCodeConfig.Equals(input.SysCodeConfig))
                ) && 
                (
                    this.OnlinePointConfig == input.OnlinePointConfig ||
                    (this.OnlinePointConfig != null &&
                    this.OnlinePointConfig.Equals(input.OnlinePointConfig))
                ) && 
                (
                    this.ModelNodeConfig == input.ModelNodeConfig ||
                    (this.ModelNodeConfig != null &&
                    this.ModelNodeConfig.Equals(input.ModelNodeConfig))
                ) && 
                (
                    this.MappingConfig == input.MappingConfig ||
                    (this.MappingConfig != null &&
                    this.MappingConfig.Equals(input.MappingConfig))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SysCodeConfig != null)
                    hashCode = hashCode * 59 + this.SysCodeConfig.GetHashCode();
                if (this.OnlinePointConfig != null)
                    hashCode = hashCode * 59 + this.OnlinePointConfig.GetHashCode();
                if (this.ModelNodeConfig != null)
                    hashCode = hashCode * 59 + this.ModelNodeConfig.GetHashCode();
                if (this.MappingConfig != null)
                    hashCode = hashCode * 59 + this.MappingConfig.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
