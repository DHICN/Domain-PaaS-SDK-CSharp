/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ResultAnalysis.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ResultAnalysis.Model
{
    /// <summary>
    /// SensitivePointsTimeseries
    /// </summary>
    [DataContract]
    public partial class SensitivePointsTimeseries :  IEquatable<SensitivePointsTimeseries>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SensitivePointsTimeseries" /> class.
        /// </summary>
        /// <param name="time">时间 time.</param>
        /// <param name="average">易涝点平均水深 average water depth.</param>
        /// <param name="max">易涝点最大水深 max water depth.</param>
        /// <param name="min">易涝点最小水深 min water depth.</param>
        public SensitivePointsTimeseries(string time = default(string), double average = default(double), double max = default(double), double min = default(double))
        {
            this.Time = time;
            this.Average = average;
            this.Max = max;
            this.Min = min;
        }
        
        /// <summary>
        /// 时间 time
        /// </summary>
        /// <value>时间 time</value>
        [DataMember(Name="time", EmitDefaultValue=true)]
        public string Time { get; set; }

        /// <summary>
        /// 易涝点平均水深 average water depth
        /// </summary>
        /// <value>易涝点平均水深 average water depth</value>
        [DataMember(Name="average", EmitDefaultValue=false)]
        public double Average { get; set; }

        /// <summary>
        /// 易涝点最大水深 max water depth
        /// </summary>
        /// <value>易涝点最大水深 max water depth</value>
        [DataMember(Name="max", EmitDefaultValue=false)]
        public double Max { get; set; }

        /// <summary>
        /// 易涝点最小水深 min water depth
        /// </summary>
        /// <value>易涝点最小水深 min water depth</value>
        [DataMember(Name="min", EmitDefaultValue=false)]
        public double Min { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SensitivePointsTimeseries {\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  Average: ").Append(Average).Append("\n");
            sb.Append("  Max: ").Append(Max).Append("\n");
            sb.Append("  Min: ").Append(Min).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SensitivePointsTimeseries);
        }

        /// <summary>
        /// Returns true if SensitivePointsTimeseries instances are equal
        /// </summary>
        /// <param name="input">Instance of SensitivePointsTimeseries to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SensitivePointsTimeseries input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Time == input.Time ||
                    (this.Time != null &&
                    this.Time.Equals(input.Time))
                ) && 
                (
                    this.Average == input.Average ||
                    this.Average.Equals(input.Average)
                ) && 
                (
                    this.Max == input.Max ||
                    this.Max.Equals(input.Max)
                ) && 
                (
                    this.Min == input.Min ||
                    this.Min.Equals(input.Min)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Time != null)
                    hashCode = hashCode * 59 + this.Time.GetHashCode();
                hashCode = hashCode * 59 + this.Average.GetHashCode();
                hashCode = hashCode * 59 + this.Max.GetHashCode();
                hashCode = hashCode * 59 + this.Min.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
