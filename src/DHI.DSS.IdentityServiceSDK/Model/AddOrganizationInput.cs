/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.IdentityServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.IdentityServiceSDK.Model
{
    /// <summary>
    /// AddOrganizationInput
    /// </summary>
    [DataContract]
    public partial class AddOrganizationInput :  IEquatable<AddOrganizationInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddOrganizationInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AddOrganizationInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddOrganizationInput" /> class.
        /// </summary>
        /// <param name="name">组织架构名称 (required).</param>
        /// <param name="parentLevelCode">父级层级代码.</param>
        public AddOrganizationInput(string name = default(string), string parentLevelCode = default(string))
        {
            // to ensure "name" is required (not null)
            this.Name = name ?? throw new ArgumentNullException("name is a required property for AddOrganizationInput and cannot be null");
            this.ParentLevelCode = parentLevelCode;
        }
        
        /// <summary>
        /// 组织架构名称
        /// </summary>
        /// <value>组织架构名称</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// 父级层级代码
        /// </summary>
        /// <value>父级层级代码</value>
        [DataMember(Name="parentLevelCode", EmitDefaultValue=true)]
        public string ParentLevelCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddOrganizationInput {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ParentLevelCode: ").Append(ParentLevelCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddOrganizationInput);
        }

        /// <summary>
        /// Returns true if AddOrganizationInput instances are equal
        /// </summary>
        /// <param name="input">Instance of AddOrganizationInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddOrganizationInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ParentLevelCode == input.ParentLevelCode ||
                    (this.ParentLevelCode != null &&
                    this.ParentLevelCode.Equals(input.ParentLevelCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.ParentLevelCode != null)
                    hashCode = hashCode * 59 + this.ParentLevelCode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
