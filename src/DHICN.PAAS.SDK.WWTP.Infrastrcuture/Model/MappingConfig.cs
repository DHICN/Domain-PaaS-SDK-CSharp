/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.WWTP.Infrastrcuture.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.WWTP.Infrastrcuture.Model
{
    /// <summary>
    /// MappingConfig
    /// </summary>
    [DataContract]
    public partial class MappingConfig :  IEquatable<MappingConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MappingConfig" /> class.
        /// </summary>
        /// <param name="tenantId">tenantId.</param>
        /// <param name="pointCode">pointCode.</param>
        /// <param name="modelNodeCode">modelNodeCode.</param>
        /// <param name="sysId">sysId.</param>
        /// <param name="reserve">reserve.</param>
        /// <param name="modelName">modelName.</param>
        public MappingConfig(Guid? tenantId = default(Guid?), string pointCode = default(string), string modelNodeCode = default(string), Guid sysId = default(Guid), string reserve = default(string), string modelName = default(string))
        {
            this.TenantId = tenantId;
            this.PointCode = pointCode;
            this.ModelNodeCode = modelNodeCode;
            this.SysId = sysId;
            this.Reserve = reserve;
            this.ModelName = modelName;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; private set; }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        [DataMember(Name="tenantId", EmitDefaultValue=true)]
        public Guid? TenantId { get; set; }

        /// <summary>
        /// Gets or Sets PointCode
        /// </summary>
        [DataMember(Name="pointCode", EmitDefaultValue=true)]
        public string PointCode { get; set; }

        /// <summary>
        /// Gets or Sets ModelNodeCode
        /// </summary>
        [DataMember(Name="modelNodeCode", EmitDefaultValue=true)]
        public string ModelNodeCode { get; set; }

        /// <summary>
        /// Gets or Sets SysId
        /// </summary>
        [DataMember(Name="sysId", EmitDefaultValue=false)]
        public Guid SysId { get; set; }

        /// <summary>
        /// Gets or Sets Reserve
        /// </summary>
        [DataMember(Name="reserve", EmitDefaultValue=true)]
        public string Reserve { get; set; }

        /// <summary>
        /// Gets or Sets ModelName
        /// </summary>
        [DataMember(Name="modelName", EmitDefaultValue=true)]
        public string ModelName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MappingConfig {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  PointCode: ").Append(PointCode).Append("\n");
            sb.Append("  ModelNodeCode: ").Append(ModelNodeCode).Append("\n");
            sb.Append("  SysId: ").Append(SysId).Append("\n");
            sb.Append("  Reserve: ").Append(Reserve).Append("\n");
            sb.Append("  ModelName: ").Append(ModelName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MappingConfig);
        }

        /// <summary>
        /// Returns true if MappingConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of MappingConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MappingConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                ) && 
                (
                    this.PointCode == input.PointCode ||
                    (this.PointCode != null &&
                    this.PointCode.Equals(input.PointCode))
                ) && 
                (
                    this.ModelNodeCode == input.ModelNodeCode ||
                    (this.ModelNodeCode != null &&
                    this.ModelNodeCode.Equals(input.ModelNodeCode))
                ) && 
                (
                    this.SysId == input.SysId ||
                    (this.SysId != null &&
                    this.SysId.Equals(input.SysId))
                ) && 
                (
                    this.Reserve == input.Reserve ||
                    (this.Reserve != null &&
                    this.Reserve.Equals(input.Reserve))
                ) && 
                (
                    this.ModelName == input.ModelName ||
                    (this.ModelName != null &&
                    this.ModelName.Equals(input.ModelName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.TenantId != null)
                    hashCode = hashCode * 59 + this.TenantId.GetHashCode();
                if (this.PointCode != null)
                    hashCode = hashCode * 59 + this.PointCode.GetHashCode();
                if (this.ModelNodeCode != null)
                    hashCode = hashCode * 59 + this.ModelNodeCode.GetHashCode();
                if (this.SysId != null)
                    hashCode = hashCode * 59 + this.SysId.GetHashCode();
                if (this.Reserve != null)
                    hashCode = hashCode * 59 + this.Reserve.GetHashCode();
                if (this.ModelName != null)
                    hashCode = hashCode * 59 + this.ModelName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
