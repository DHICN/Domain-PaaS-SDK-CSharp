/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.Identity.Client;
using DHICN.PAAS.SDK.Identity.Model;

namespace DHICN.PAAS.SDK.Identity.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRoleManagerApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 查询角色 Query role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>List&lt;RoleDto&gt;</returns>
        Result<List<RoleDto>> ApiAppRoleManagerQueryRolesPost (QueryRolesInput queryRolesInput = default(QueryRolesInput));

        /// <summary>
        /// 查询角色 Query role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;RoleDto&gt;</returns>
        ApiResponse<Result<List<RoleDto>>> ApiAppRoleManagerQueryRolesPostWithHttpInfo (QueryRolesInput queryRolesInput = default(QueryRolesInput));
        /// <summary>
        /// 添加角色 Add role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppRoleManagerRolePost (AddRoleInput addRoleInput = default(AddRoleInput));

        /// <summary>
        /// 添加角色 Add role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppRoleManagerRolePostWithHttpInfo (AddRoleInput addRoleInput = default(AddRoleInput));
        /// <summary>
        /// 更新角色 Update role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppRoleManagerRolePut (UpdateRoleInput updateRoleInput = default(UpdateRoleInput));

        /// <summary>
        /// 更新角色 Update role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppRoleManagerRolePutWithHttpInfo (UpdateRoleInput updateRoleInput = default(UpdateRoleInput));
        /// <summary>
        /// 删除角色 Delete role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppRoleManagerRolesDelete (List<string> ids);

        /// <summary>
        /// 删除角色 Delete role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppRoleManagerRolesDeleteWithHttpInfo (List<string> ids);
        /// <summary>
        /// 获取租户下的角色 Get roles under tenants
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;GuidStringStringKeyValue&gt;</returns>
        Result<List<GuidStringStringKeyValue>> ApiAppRoleManagerRolesGet ();

        /// <summary>
        /// 获取租户下的角色 Get roles under tenants
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;GuidStringStringKeyValue&gt;</returns>
        ApiResponse<Result<List<GuidStringStringKeyValue>>> ApiAppRoleManagerRolesGetWithHttpInfo ();
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRoleManagerApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 查询角色 Query role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>Task of List&lt;RoleDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<RoleDto>>> ApiAppRoleManagerQueryRolesPostAsync (QueryRolesInput queryRolesInput = default(QueryRolesInput));

        /// <summary>
        /// 查询角色 Query role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;RoleDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<RoleDto>>>> ApiAppRoleManagerQueryRolesPostAsyncWithHttpInfo (QueryRolesInput queryRolesInput = default(QueryRolesInput));
        /// <summary>
        /// 添加角色 Add role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppRoleManagerRolePostAsync (AddRoleInput addRoleInput = default(AddRoleInput));

        /// <summary>
        /// 添加角色 Add role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppRoleManagerRolePostAsyncWithHttpInfo (AddRoleInput addRoleInput = default(AddRoleInput));
        /// <summary>
        /// 更新角色 Update role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppRoleManagerRolePutAsync (UpdateRoleInput updateRoleInput = default(UpdateRoleInput));

        /// <summary>
        /// 更新角色 Update role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppRoleManagerRolePutAsyncWithHttpInfo (UpdateRoleInput updateRoleInput = default(UpdateRoleInput));
        /// <summary>
        /// 删除角色 Delete role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppRoleManagerRolesDeleteAsync (List<string> ids);

        /// <summary>
        /// 删除角色 Delete role
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppRoleManagerRolesDeleteAsyncWithHttpInfo (List<string> ids);
        /// <summary>
        /// 获取租户下的角色 Get roles under tenants
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;GuidStringStringKeyValue&gt;</returns>
        System.Threading.Tasks.Task<Result<List<GuidStringStringKeyValue>>> ApiAppRoleManagerRolesGetAsync ();

        /// <summary>
        /// 获取租户下的角色 Get roles under tenants
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;GuidStringStringKeyValue&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<GuidStringStringKeyValue>>>> ApiAppRoleManagerRolesGetAsyncWithHttpInfo ();
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRoleManagerApi : IRoleManagerApiSync, IRoleManagerApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class RoleManagerApi : IRoleManagerApi
    {
        private DHICN.PAAS.SDK.Identity.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="RoleManagerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RoleManagerApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RoleManagerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public RoleManagerApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.Identity.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Identity.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.Identity.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RoleManagerApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public RoleManagerApi(DHICN.PAAS.SDK.Identity.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.Identity.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Identity.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Identity.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RoleManagerApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public RoleManagerApi(DHICN.PAAS.SDK.Identity.Client.ISynchronousClient client,DHICN.PAAS.SDK.Identity.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.Identity.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.Identity.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.Identity.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.Identity.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 查询角色 Query role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>List&lt;RoleDto&gt;</returns>
        public Result<List<RoleDto>> ApiAppRoleManagerQueryRolesPost (QueryRolesInput queryRolesInput = default(QueryRolesInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<RoleDto>>> localVarResponse = ApiAppRoleManagerQueryRolesPostWithHttpInfo(queryRolesInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询角色 Query role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;RoleDto&gt;</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< List<RoleDto> >> ApiAppRoleManagerQueryRolesPostWithHttpInfo (QueryRolesInput queryRolesInput = default(QueryRolesInput))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = queryRolesInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<RoleDto> >>("/api/app/roleManager/queryRoles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerQueryRolesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询角色 Query role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>Task of List&lt;RoleDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<RoleDto>>> ApiAppRoleManagerQueryRolesPostAsync (QueryRolesInput queryRolesInput = default(QueryRolesInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<RoleDto>>> localVarResponse = await ApiAppRoleManagerQueryRolesPostAsyncWithHttpInfo(queryRolesInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询角色 Query role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="queryRolesInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;RoleDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<RoleDto>>>> ApiAppRoleManagerQueryRolesPostAsyncWithHttpInfo (QueryRolesInput queryRolesInput = default(QueryRolesInput))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = queryRolesInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<RoleDto>>>("/api/app/roleManager/queryRoles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerQueryRolesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加角色 Add role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppRoleManagerRolePost (AddRoleInput addRoleInput = default(AddRoleInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppRoleManagerRolePostWithHttpInfo(addRoleInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 添加角色 Add role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Object >> ApiAppRoleManagerRolePostWithHttpInfo (AddRoleInput addRoleInput = default(AddRoleInput))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addRoleInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/app/roleManager/role", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 添加角色 Add role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppRoleManagerRolePostAsync (AddRoleInput addRoleInput = default(AddRoleInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppRoleManagerRolePostAsyncWithHttpInfo(addRoleInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 添加角色 Add role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRoleInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiAppRoleManagerRolePostAsyncWithHttpInfo (AddRoleInput addRoleInput = default(AddRoleInput))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addRoleInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/app/roleManager/role", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新角色 Update role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppRoleManagerRolePut (UpdateRoleInput updateRoleInput = default(UpdateRoleInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppRoleManagerRolePutWithHttpInfo(updateRoleInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 更新角色 Update role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Object >> ApiAppRoleManagerRolePutWithHttpInfo (UpdateRoleInput updateRoleInput = default(UpdateRoleInput))
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateRoleInput;


            // make the HTTP request
            var localVarResponse = this.Client.Put<Result< Object >>("/api/app/roleManager/role", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolePut", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 更新角色 Update role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppRoleManagerRolePutAsync (UpdateRoleInput updateRoleInput = default(UpdateRoleInput))
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppRoleManagerRolePutAsyncWithHttpInfo(updateRoleInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 更新角色 Update role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateRoleInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiAppRoleManagerRolePutAsyncWithHttpInfo (UpdateRoleInput updateRoleInput = default(UpdateRoleInput))
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateRoleInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PutAsync<Result<Object>>("/api/app/roleManager/role", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolePut", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除角色 Delete role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppRoleManagerRolesDelete (List<string> ids)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppRoleManagerRolesDeleteWithHttpInfo(ids);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除角色 Delete role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< Object >> ApiAppRoleManagerRolesDeleteWithHttpInfo (List<string> ids)
        {
            // verify the required parameter 'ids' is set
            if (ids == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'ids' when calling RoleManagerApi->ApiAppRoleManagerRolesDelete");

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("multi", "Ids", ids));


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Result< Object >>("/api/app/roleManager/roles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolesDelete", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除角色 Delete role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppRoleManagerRolesDeleteAsync (List<string> ids)
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppRoleManagerRolesDeleteAsyncWithHttpInfo(ids);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除角色 Delete role 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="ids">ID列表 ids</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<Object>>> ApiAppRoleManagerRolesDeleteAsyncWithHttpInfo (List<string> ids)
        {
            // verify the required parameter 'ids' is set
            if (ids == null)
                throw new DHICN.PAAS.SDK.Identity.Client.ApiException(400, "Missing required parameter 'ids' when calling RoleManagerApi->ApiAppRoleManagerRolesDelete");


            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Identity.Client.ClientUtils.ParameterToMultiMap("multi", "Ids", ids));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Result<Object>>("/api/app/roleManager/roles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolesDelete", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取租户下的角色 Get roles under tenants 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;GuidStringStringKeyValue&gt;</returns>
        public Result<List<GuidStringStringKeyValue>> ApiAppRoleManagerRolesGet ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GuidStringStringKeyValue>>> localVarResponse = ApiAppRoleManagerRolesGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取租户下的角色 Get roles under tenants 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;GuidStringStringKeyValue&gt;</returns>
        public DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result< List<GuidStringStringKeyValue> >> ApiAppRoleManagerRolesGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Identity.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<GuidStringStringKeyValue> >>("/api/app/roleManager/roles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取租户下的角色 Get roles under tenants 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;GuidStringStringKeyValue&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<GuidStringStringKeyValue>>> ApiAppRoleManagerRolesGetAsync ()
        {
             DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GuidStringStringKeyValue>>> localVarResponse = await ApiAppRoleManagerRolesGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取租户下的角色 Get roles under tenants 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Identity.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;GuidStringStringKeyValue&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Identity.Client.ApiResponse<Result<List<GuidStringStringKeyValue>>>> ApiAppRoleManagerRolesGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.Identity.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Identity.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<GuidStringStringKeyValue>>>("/api/app/roleManager/roles", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppRoleManagerRolesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
