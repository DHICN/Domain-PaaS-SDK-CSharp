/* 
 * model-configuration-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ModelInformation.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ModelInformation.Model
{
    /// <summary>
    /// TemplateScenarioLogOutput
    /// </summary>
    [DataContract]
    public partial class TemplateScenarioLogOutput :  IEquatable<TemplateScenarioLogOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateScenarioLogOutput" /> class.
        /// </summary>
        /// <param name="id">配置进度信息ID configuration progress id.</param>
        /// <param name="scenarioId">模板方案ID template scenario id.</param>
        /// <param name="code">配置步骤代码 configuration step code.</param>
        /// <param name="description">配置步骤描述 configuration step description.</param>
        /// <param name="success">是否配置成功 if the configuration step is successful.</param>
        /// <param name="required">是否必需 if the configuration step is required.</param>
        /// <param name="remark">备注 remark.</param>
        /// <param name="lastModificationTime">最后一次修改时间 last modify time.</param>
        public TemplateScenarioLogOutput(Guid id = default(Guid), Guid scenarioId = default(Guid), string code = default(string), string description = default(string), bool success = default(bool), bool required = default(bool), string remark = default(string), DateTime? lastModificationTime = default(DateTime?))
        {
            this.Id = id;
            this.ScenarioId = scenarioId;
            this.Code = code;
            this.Description = description;
            this.Success = success;
            this.Required = required;
            this.Remark = remark;
            this.LastModificationTime = lastModificationTime;
        }
        
        /// <summary>
        /// 配置进度信息ID configuration progress id
        /// </summary>
        /// <value>配置进度信息ID configuration progress id</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// 模板方案ID template scenario id
        /// </summary>
        /// <value>模板方案ID template scenario id</value>
        [DataMember(Name="scenarioId", EmitDefaultValue=false)]
        public Guid ScenarioId { get; set; }

        /// <summary>
        /// 配置步骤代码 configuration step code
        /// </summary>
        /// <value>配置步骤代码 configuration step code</value>
        [DataMember(Name="code", EmitDefaultValue=true)]
        public string Code { get; set; }

        /// <summary>
        /// 配置步骤描述 configuration step description
        /// </summary>
        /// <value>配置步骤描述 configuration step description</value>
        [DataMember(Name="description", EmitDefaultValue=true)]
        public string Description { get; set; }

        /// <summary>
        /// 是否配置成功 if the configuration step is successful
        /// </summary>
        /// <value>是否配置成功 if the configuration step is successful</value>
        [DataMember(Name="success", EmitDefaultValue=false)]
        public bool Success { get; set; }

        /// <summary>
        /// 是否必需 if the configuration step is required
        /// </summary>
        /// <value>是否必需 if the configuration step is required</value>
        [DataMember(Name="required", EmitDefaultValue=false)]
        public bool Required { get; set; }

        /// <summary>
        /// 备注 remark
        /// </summary>
        /// <value>备注 remark</value>
        [DataMember(Name="remark", EmitDefaultValue=true)]
        public string Remark { get; set; }

        /// <summary>
        /// 最后一次修改时间 last modify time
        /// </summary>
        /// <value>最后一次修改时间 last modify time</value>
        [DataMember(Name="lastModificationTime", EmitDefaultValue=true)]
        public DateTime? LastModificationTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TemplateScenarioLogOutput {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ScenarioId: ").Append(ScenarioId).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("  Required: ").Append(Required).Append("\n");
            sb.Append("  Remark: ").Append(Remark).Append("\n");
            sb.Append("  LastModificationTime: ").Append(LastModificationTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TemplateScenarioLogOutput);
        }

        /// <summary>
        /// Returns true if TemplateScenarioLogOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of TemplateScenarioLogOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TemplateScenarioLogOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ScenarioId == input.ScenarioId ||
                    (this.ScenarioId != null &&
                    this.ScenarioId.Equals(input.ScenarioId))
                ) && 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Success == input.Success ||
                    this.Success.Equals(input.Success)
                ) && 
                (
                    this.Required == input.Required ||
                    this.Required.Equals(input.Required)
                ) && 
                (
                    this.Remark == input.Remark ||
                    (this.Remark != null &&
                    this.Remark.Equals(input.Remark))
                ) && 
                (
                    this.LastModificationTime == input.LastModificationTime ||
                    (this.LastModificationTime != null &&
                    this.LastModificationTime.Equals(input.LastModificationTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ScenarioId != null)
                    hashCode = hashCode * 59 + this.ScenarioId.GetHashCode();
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                hashCode = hashCode * 59 + this.Success.GetHashCode();
                hashCode = hashCode * 59 + this.Required.GetHashCode();
                if (this.Remark != null)
                    hashCode = hashCode * 59 + this.Remark.GetHashCode();
                if (this.LastModificationTime != null)
                    hashCode = hashCode * 59 + this.LastModificationTime.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
