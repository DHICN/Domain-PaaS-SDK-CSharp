/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.Identity.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.Identity.Model
{
    /// <summary>
    /// SysCodeConfigInputOutput
    /// </summary>
    [DataContract]
    public partial class SysCodeConfigInputOutput :  IEquatable<SysCodeConfigInputOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SysCodeConfigInputOutput" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="pointTypeCode">pointTypeCode.</param>
        /// <param name="pointType">pointType.</param>
        /// <param name="code">code.</param>
        /// <param name="onlinePointCode">在线点位PointCode.</param>
        /// <param name="pointName">pointName.</param>
        /// <param name="isInputPoint">isInputPoint.</param>
        /// <param name="extInfo">extInfo.</param>
        /// <param name="reserve">reserve.</param>
        /// <param name="productLine">productLine.</param>
        /// <param name="modelName">modelName.</param>
        public SysCodeConfigInputOutput(Guid id = default(Guid), string pointTypeCode = default(string), string pointType = default(string), string code = default(string), string onlinePointCode = default(string), string pointName = default(string), bool isInputPoint = default(bool), string extInfo = default(string), string reserve = default(string), string productLine = default(string), string modelName = default(string))
        {
            this.Id = id;
            this.PointTypeCode = pointTypeCode;
            this.PointType = pointType;
            this.Code = code;
            this.OnlinePointCode = onlinePointCode;
            this.PointName = pointName;
            this.IsInputPoint = isInputPoint;
            this.ExtInfo = extInfo;
            this.Reserve = reserve;
            this.ProductLine = productLine;
            this.ModelName = modelName;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets PointTypeCode
        /// </summary>
        [DataMember(Name="pointTypeCode", EmitDefaultValue=true)]
        public string PointTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets PointType
        /// </summary>
        [DataMember(Name="pointType", EmitDefaultValue=true)]
        public string PointType { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name="code", EmitDefaultValue=true)]
        public string Code { get; set; }

        /// <summary>
        /// 在线点位PointCode
        /// </summary>
        /// <value>在线点位PointCode</value>
        [DataMember(Name="onlinePointCode", EmitDefaultValue=true)]
        public string OnlinePointCode { get; set; }

        /// <summary>
        /// Gets or Sets PointName
        /// </summary>
        [DataMember(Name="pointName", EmitDefaultValue=true)]
        public string PointName { get; set; }

        /// <summary>
        /// Gets or Sets IsInputPoint
        /// </summary>
        [DataMember(Name="isInputPoint", EmitDefaultValue=false)]
        public bool IsInputPoint { get; set; }

        /// <summary>
        /// Gets or Sets ExtInfo
        /// </summary>
        [DataMember(Name="extInfo", EmitDefaultValue=true)]
        public string ExtInfo { get; set; }

        /// <summary>
        /// Gets or Sets IExtInfo
        /// </summary>
        [DataMember(Name="iExtInfo", EmitDefaultValue=false)]
        public int IExtInfo { get; private set; }

        /// <summary>
        /// Gets or Sets Reserve
        /// </summary>
        [DataMember(Name="reserve", EmitDefaultValue=true)]
        public string Reserve { get; set; }

        /// <summary>
        /// Gets or Sets ProductLine
        /// </summary>
        [DataMember(Name="productLine", EmitDefaultValue=true)]
        public string ProductLine { get; set; }

        /// <summary>
        /// Gets or Sets ModelName
        /// </summary>
        [DataMember(Name="modelName", EmitDefaultValue=true)]
        public string ModelName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SysCodeConfigInputOutput {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PointTypeCode: ").Append(PointTypeCode).Append("\n");
            sb.Append("  PointType: ").Append(PointType).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  OnlinePointCode: ").Append(OnlinePointCode).Append("\n");
            sb.Append("  PointName: ").Append(PointName).Append("\n");
            sb.Append("  IsInputPoint: ").Append(IsInputPoint).Append("\n");
            sb.Append("  ExtInfo: ").Append(ExtInfo).Append("\n");
            sb.Append("  IExtInfo: ").Append(IExtInfo).Append("\n");
            sb.Append("  Reserve: ").Append(Reserve).Append("\n");
            sb.Append("  ProductLine: ").Append(ProductLine).Append("\n");
            sb.Append("  ModelName: ").Append(ModelName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SysCodeConfigInputOutput);
        }

        /// <summary>
        /// Returns true if SysCodeConfigInputOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of SysCodeConfigInputOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SysCodeConfigInputOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.PointTypeCode == input.PointTypeCode ||
                    (this.PointTypeCode != null &&
                    this.PointTypeCode.Equals(input.PointTypeCode))
                ) && 
                (
                    this.PointType == input.PointType ||
                    (this.PointType != null &&
                    this.PointType.Equals(input.PointType))
                ) && 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.OnlinePointCode == input.OnlinePointCode ||
                    (this.OnlinePointCode != null &&
                    this.OnlinePointCode.Equals(input.OnlinePointCode))
                ) && 
                (
                    this.PointName == input.PointName ||
                    (this.PointName != null &&
                    this.PointName.Equals(input.PointName))
                ) && 
                (
                    this.IsInputPoint == input.IsInputPoint ||
                    this.IsInputPoint.Equals(input.IsInputPoint)
                ) && 
                (
                    this.ExtInfo == input.ExtInfo ||
                    (this.ExtInfo != null &&
                    this.ExtInfo.Equals(input.ExtInfo))
                ) && 
                (
                    this.IExtInfo == input.IExtInfo ||
                    this.IExtInfo.Equals(input.IExtInfo)
                ) && 
                (
                    this.Reserve == input.Reserve ||
                    (this.Reserve != null &&
                    this.Reserve.Equals(input.Reserve))
                ) && 
                (
                    this.ProductLine == input.ProductLine ||
                    (this.ProductLine != null &&
                    this.ProductLine.Equals(input.ProductLine))
                ) && 
                (
                    this.ModelName == input.ModelName ||
                    (this.ModelName != null &&
                    this.ModelName.Equals(input.ModelName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.PointTypeCode != null)
                    hashCode = hashCode * 59 + this.PointTypeCode.GetHashCode();
                if (this.PointType != null)
                    hashCode = hashCode * 59 + this.PointType.GetHashCode();
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.OnlinePointCode != null)
                    hashCode = hashCode * 59 + this.OnlinePointCode.GetHashCode();
                if (this.PointName != null)
                    hashCode = hashCode * 59 + this.PointName.GetHashCode();
                hashCode = hashCode * 59 + this.IsInputPoint.GetHashCode();
                if (this.ExtInfo != null)
                    hashCode = hashCode * 59 + this.ExtInfo.GetHashCode();
                hashCode = hashCode * 59 + this.IExtInfo.GetHashCode();
                if (this.Reserve != null)
                    hashCode = hashCode * 59 + this.Reserve.GetHashCode();
                if (this.ProductLine != null)
                    hashCode = hashCode * 59 + this.ProductLine.GetHashCode();
                if (this.ModelName != null)
                    hashCode = hashCode * 59 + this.ModelName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
