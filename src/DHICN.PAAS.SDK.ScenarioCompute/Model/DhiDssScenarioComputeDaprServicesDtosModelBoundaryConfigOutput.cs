/* 
 * scenario-compute-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.ScenarioCompute.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.ScenarioCompute.Model
{
    /// <summary>
    /// DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput
    /// </summary>
    [DataContract]
    public partial class DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput :  IEquatable<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="modelPointId">ModelPoints 表id.</param>
        /// <param name="boundaryId">Boundary id.</param>
        /// <param name="boundaryName">Boundary name.</param>
        /// <param name="boundaryType">Boundary Type.</param>
        /// <param name="showName">边界显示名称.</param>
        /// <param name="dfs0File">Dfs0 文件名称.</param>
        /// <param name="dataItem">Dfs0 文件中的数据项.</param>
        /// <param name="pointJson">点位关系(灵活的).</param>
        /// <param name="measureExpression">measureExpression.</param>
        /// <param name="forecastExpression">forecastExpression.</param>
        /// <param name="templateId">模板Id.</param>
        public DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput(Guid id = default(Guid), Guid? modelPointId = default(Guid?), string boundaryId = default(string), string boundaryName = default(string), int boundaryType = default(int), string showName = default(string), string dfs0File = default(string), string dataItem = default(string), string pointJson = default(string), DhiDssScenarioComputeDaprServicesDtosPointExpressItem measureExpression = default(DhiDssScenarioComputeDaprServicesDtosPointExpressItem), DhiDssScenarioComputeDaprServicesDtosPointExpressItem forecastExpression = default(DhiDssScenarioComputeDaprServicesDtosPointExpressItem), Guid templateId = default(Guid))
        {
            this.Id = id;
            this.ModelPointId = modelPointId;
            this.BoundaryId = boundaryId;
            this.BoundaryName = boundaryName;
            this.BoundaryType = boundaryType;
            this.ShowName = showName;
            this.Dfs0File = dfs0File;
            this.DataItem = dataItem;
            this.PointJson = pointJson;
            this.MeasureExpression = measureExpression;
            this.ForecastExpression = forecastExpression;
            this.TemplateId = templateId;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// ModelPoints 表id
        /// </summary>
        /// <value>ModelPoints 表id</value>
        [DataMember(Name="modelPointId", EmitDefaultValue=true)]
        public Guid? ModelPointId { get; set; }

        /// <summary>
        /// Boundary id
        /// </summary>
        /// <value>Boundary id</value>
        [DataMember(Name="boundaryId", EmitDefaultValue=true)]
        public string BoundaryId { get; set; }

        /// <summary>
        /// Boundary name
        /// </summary>
        /// <value>Boundary name</value>
        [DataMember(Name="boundaryName", EmitDefaultValue=true)]
        public string BoundaryName { get; set; }

        /// <summary>
        /// Boundary Type
        /// </summary>
        /// <value>Boundary Type</value>
        [DataMember(Name="boundaryType", EmitDefaultValue=false)]
        public int BoundaryType { get; set; }

        /// <summary>
        /// 边界显示名称
        /// </summary>
        /// <value>边界显示名称</value>
        [DataMember(Name="showName", EmitDefaultValue=true)]
        public string ShowName { get; set; }

        /// <summary>
        /// Dfs0 文件名称
        /// </summary>
        /// <value>Dfs0 文件名称</value>
        [DataMember(Name="dfs0File", EmitDefaultValue=true)]
        public string Dfs0File { get; set; }

        /// <summary>
        /// Dfs0 文件中的数据项
        /// </summary>
        /// <value>Dfs0 文件中的数据项</value>
        [DataMember(Name="dataItem", EmitDefaultValue=true)]
        public string DataItem { get; set; }

        /// <summary>
        /// 点位关系(灵活的)
        /// </summary>
        /// <value>点位关系(灵活的)</value>
        [DataMember(Name="pointJson", EmitDefaultValue=true)]
        public string PointJson { get; set; }

        /// <summary>
        /// Gets or Sets MeasureExpression
        /// </summary>
        [DataMember(Name="measureExpression", EmitDefaultValue=false)]
        public DhiDssScenarioComputeDaprServicesDtosPointExpressItem MeasureExpression { get; set; }

        /// <summary>
        /// Gets or Sets ForecastExpression
        /// </summary>
        [DataMember(Name="forecastExpression", EmitDefaultValue=false)]
        public DhiDssScenarioComputeDaprServicesDtosPointExpressItem ForecastExpression { get; set; }

        /// <summary>
        /// 模板Id
        /// </summary>
        /// <value>模板Id</value>
        [DataMember(Name="templateId", EmitDefaultValue=false)]
        public Guid TemplateId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ModelPointId: ").Append(ModelPointId).Append("\n");
            sb.Append("  BoundaryId: ").Append(BoundaryId).Append("\n");
            sb.Append("  BoundaryName: ").Append(BoundaryName).Append("\n");
            sb.Append("  BoundaryType: ").Append(BoundaryType).Append("\n");
            sb.Append("  ShowName: ").Append(ShowName).Append("\n");
            sb.Append("  Dfs0File: ").Append(Dfs0File).Append("\n");
            sb.Append("  DataItem: ").Append(DataItem).Append("\n");
            sb.Append("  PointJson: ").Append(PointJson).Append("\n");
            sb.Append("  MeasureExpression: ").Append(MeasureExpression).Append("\n");
            sb.Append("  ForecastExpression: ").Append(ForecastExpression).Append("\n");
            sb.Append("  TemplateId: ").Append(TemplateId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput);
        }

        /// <summary>
        /// Returns true if DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ModelPointId == input.ModelPointId ||
                    (this.ModelPointId != null &&
                    this.ModelPointId.Equals(input.ModelPointId))
                ) && 
                (
                    this.BoundaryId == input.BoundaryId ||
                    (this.BoundaryId != null &&
                    this.BoundaryId.Equals(input.BoundaryId))
                ) && 
                (
                    this.BoundaryName == input.BoundaryName ||
                    (this.BoundaryName != null &&
                    this.BoundaryName.Equals(input.BoundaryName))
                ) && 
                (
                    this.BoundaryType == input.BoundaryType ||
                    this.BoundaryType.Equals(input.BoundaryType)
                ) && 
                (
                    this.ShowName == input.ShowName ||
                    (this.ShowName != null &&
                    this.ShowName.Equals(input.ShowName))
                ) && 
                (
                    this.Dfs0File == input.Dfs0File ||
                    (this.Dfs0File != null &&
                    this.Dfs0File.Equals(input.Dfs0File))
                ) && 
                (
                    this.DataItem == input.DataItem ||
                    (this.DataItem != null &&
                    this.DataItem.Equals(input.DataItem))
                ) && 
                (
                    this.PointJson == input.PointJson ||
                    (this.PointJson != null &&
                    this.PointJson.Equals(input.PointJson))
                ) && 
                (
                    this.MeasureExpression == input.MeasureExpression ||
                    (this.MeasureExpression != null &&
                    this.MeasureExpression.Equals(input.MeasureExpression))
                ) && 
                (
                    this.ForecastExpression == input.ForecastExpression ||
                    (this.ForecastExpression != null &&
                    this.ForecastExpression.Equals(input.ForecastExpression))
                ) && 
                (
                    this.TemplateId == input.TemplateId ||
                    (this.TemplateId != null &&
                    this.TemplateId.Equals(input.TemplateId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ModelPointId != null)
                    hashCode = hashCode * 59 + this.ModelPointId.GetHashCode();
                if (this.BoundaryId != null)
                    hashCode = hashCode * 59 + this.BoundaryId.GetHashCode();
                if (this.BoundaryName != null)
                    hashCode = hashCode * 59 + this.BoundaryName.GetHashCode();
                hashCode = hashCode * 59 + this.BoundaryType.GetHashCode();
                if (this.ShowName != null)
                    hashCode = hashCode * 59 + this.ShowName.GetHashCode();
                if (this.Dfs0File != null)
                    hashCode = hashCode * 59 + this.Dfs0File.GetHashCode();
                if (this.DataItem != null)
                    hashCode = hashCode * 59 + this.DataItem.GetHashCode();
                if (this.PointJson != null)
                    hashCode = hashCode * 59 + this.PointJson.GetHashCode();
                if (this.MeasureExpression != null)
                    hashCode = hashCode * 59 + this.MeasureExpression.GetHashCode();
                if (this.ForecastExpression != null)
                    hashCode = hashCode * 59 + this.ForecastExpression.GetHashCode();
                if (this.TemplateId != null)
                    hashCode = hashCode * 59 + this.TemplateId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
