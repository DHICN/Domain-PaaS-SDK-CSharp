/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ResultAnalysis.Client;
using DHICN.PAAS.SDK.ResultAnalysis.Model;

namespace DHICN.PAAS.SDK.ResultAnalysis.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWaterHammerResultAnalysisApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisWaterHammerFlowDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerFlowDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisWaterHammerPressureDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerPressureDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        Result<BaseTimeseriesOutput> ApiV1ResultAnalysisWaterHammerTimeseriesGet (string modelId, string scenarioId, string dataType = default(string));

        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        ApiResponse<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisWaterHammerTimeseriesGetWithHttpInfo (string modelId, string scenarioId, string dataType = default(string));
        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisWaterHammerVelocityDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerVelocityDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWaterHammerResultAnalysisApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerFlowDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWaterHammerFlowDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerPressureDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWaterHammerPressureDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisWaterHammerTimeseriesGetAsync (string modelId, string scenarioId, string dataType = default(string));

        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisWaterHammerTimeseriesGetAsyncWithHttpInfo (string modelId, string scenarioId, string dataType = default(string));
        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerVelocityDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWaterHammerVelocityDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWaterHammerResultAnalysisApi : IWaterHammerResultAnalysisApiSync, IWaterHammerResultAnalysisApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class WaterHammerResultAnalysisApi : IWaterHammerResultAnalysisApi
    {
        private DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="WaterHammerResultAnalysisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WaterHammerResultAnalysisApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WaterHammerResultAnalysisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WaterHammerResultAnalysisApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WaterHammerResultAnalysisApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public WaterHammerResultAnalysisApi(DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WaterHammerResultAnalysisApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public WaterHammerResultAnalysisApi(DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient client,DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisWaterHammerFlowDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisWaterHammerFlowDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisWaterHammerFlowDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerFlowDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/water-hammer/flow-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerFlowDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerFlowDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisWaterHammerFlowDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水锤流量模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWaterHammerFlowDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerFlowDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/water-hammer/flow-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerFlowDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisWaterHammerPressureDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisWaterHammerPressureDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisWaterHammerPressureDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerPressureDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/water-hammer/pressure-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerPressureDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerPressureDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisWaterHammerPressureDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水锤压力模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWaterHammerPressureDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerPressureDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/water-hammer/pressure-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerPressureDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        public Result<BaseTimeseriesOutput> ApiV1ResultAnalysisWaterHammerTimeseriesGet (string modelId, string scenarioId, string dataType = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = ApiV1ResultAnalysisWaterHammerTimeseriesGetWithHttpInfo(modelId, scenarioId, dataType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseTimeseriesOutput >> ApiV1ResultAnalysisWaterHammerTimeseriesGetWithHttpInfo (string modelId, string scenarioId, string dataType = default(string))
        {
            // verify the required parameter 'modelId' is set
            if (modelId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'modelId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerTimeseriesGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelId", modelId));
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "DataType", dataType));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseTimeseriesOutput >>("/api/v1/result-analysis/water-hammer/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisWaterHammerTimeseriesGetAsync (string modelId, string scenarioId, string dataType = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = await ApiV1ResultAnalysisWaterHammerTimeseriesGetAsyncWithHttpInfo(modelId, scenarioId, dataType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取单个管网的水锤模拟结果 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelId">模型id</param>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="dataType"> (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisWaterHammerTimeseriesGetAsyncWithHttpInfo (string modelId, string scenarioId, string dataType = default(string))
        {
            // verify the required parameter 'modelId' is set
            if (modelId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'modelId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerTimeseriesGet");

            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerTimeseriesGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelId", modelId));
            if (dataType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "DataType", dataType));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseTimeseriesOutput>>("/api/v1/result-analysis/water-hammer/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisWaterHammerVelocityDynamicGet (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisWaterHammerVelocityDynamicGetWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisWaterHammerVelocityDynamicGetWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerVelocityDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/water-hammer/velocity-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerVelocityDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWaterHammerVelocityDynamicGetAsync (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisWaterHammerVelocityDynamicGetAsyncWithHttpInfo(scenarioId, frequency, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据方案id获取全管网水锤流速模拟结果值 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案id</param>
        /// <param name="frequency">抽样频率 (optional)</param>
        /// <param name="startTime">开始时间 (optional)</param>
        /// <param name="endTime">结束时间 (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWaterHammerVelocityDynamicGetAsyncWithHttpInfo (string scenarioId, int? frequency = default(int?), string startTime = default(string), string endTime = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WaterHammerResultAnalysisApi->ApiV1ResultAnalysisWaterHammerVelocityDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/water-hammer/velocity-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWaterHammerVelocityDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
