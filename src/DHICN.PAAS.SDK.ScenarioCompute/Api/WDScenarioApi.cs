/* 
 * scenario-compute-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ScenarioCompute.Client;
using DHICN.PAAS.SDK.ScenarioCompute.Model;

namespace DHICN.PAAS.SDK.ScenarioCompute.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWDScenarioApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 创建供水领域自动预报的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdAutoForecastCreatePost (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));

        /// <summary>
        /// 创建供水领域自动预报的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdAutoForecastCreatePostWithHttpInfo (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));
        /// <summary>
        /// 创建关阀方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdCloseValveCreatePost (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));

        /// <summary>
        /// 创建关阀方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdCloseValveCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));
        /// <summary>
        /// 删除方案和方案的模型数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1ScenarioComputeWdDeleteScenarioGet (string scenarioId = default(string));

        /// <summary>
        /// 删除方案和方案的模型数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1ScenarioComputeWdDeleteScenarioGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 创建模拟管道冲洗方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdFlushingCreatePost (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput));

        /// <summary>
        /// 创建模拟管道冲洗方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdFlushingCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput));
        /// <summary>
        /// 创建人工预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdManualForecastCreatePost (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));

        /// <summary>
        /// 创建人工预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdManualForecastCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));
        /// <summary>
        /// 创建爆管事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePost (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput));

        /// <summary>
        /// 创建爆管事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput));
        /// <summary>
        /// 创建规划评估方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdPlanningCreatePost (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput));

        /// <summary>
        /// 创建规划评估方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdPlanningCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput));
        /// <summary>
        /// 创建调度方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdScheduleCreatePost (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput));

        /// <summary>
        /// 创建调度方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdScheduleCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput));
        /// <summary>
        /// 创建水锤模拟方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdWaterhammerCreatePost (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput));

        /// <summary>
        /// 创建水锤模拟方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdWaterhammerCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput));
        /// <summary>
        /// 创建水质事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdWqAccidentCreatePost (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput));

        /// <summary>
        /// 创建水质事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdWqAccidentCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWDScenarioApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 创建供水领域自动预报的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdAutoForecastCreatePostAsync (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));

        /// <summary>
        /// 创建供水领域自动预报的方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdAutoForecastCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));
        /// <summary>
        /// 创建关阀方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdCloseValveCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));

        /// <summary>
        /// 创建关阀方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdCloseValveCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));
        /// <summary>
        /// 删除方案和方案的模型数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1ScenarioComputeWdDeleteScenarioGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 删除方案和方案的模型数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1ScenarioComputeWdDeleteScenarioGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 创建模拟管道冲洗方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdFlushingCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput));

        /// <summary>
        /// 创建模拟管道冲洗方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdFlushingCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput));
        /// <summary>
        /// 创建人工预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdManualForecastCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));

        /// <summary>
        /// 创建人工预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdManualForecastCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput));
        /// <summary>
        /// 创建爆管事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput));

        /// <summary>
        /// 创建爆管事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput));
        /// <summary>
        /// 创建规划评估方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdPlanningCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput));

        /// <summary>
        /// 创建规划评估方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdPlanningCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput));
        /// <summary>
        /// 创建调度方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdScheduleCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput));

        /// <summary>
        /// 创建调度方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdScheduleCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput));
        /// <summary>
        /// 创建水锤模拟方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdWaterhammerCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput));

        /// <summary>
        /// 创建水锤模拟方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdWaterhammerCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput));
        /// <summary>
        /// 创建水质事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdWqAccidentCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput));

        /// <summary>
        /// 创建水质事故方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdWqAccidentCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWDScenarioApi : IWDScenarioApiSync, IWDScenarioApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class WDScenarioApi : IWDScenarioApi
    {
        private DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="WDScenarioApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WDScenarioApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WDScenarioApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WDScenarioApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WDScenarioApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public WDScenarioApi(DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WDScenarioApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public WDScenarioApi(DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient client,DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 创建供水领域自动预报的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdAutoForecastCreatePost (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdAutoForecastCreatePostWithHttpInfo(dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建供水领域自动预报的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdAutoForecastCreatePostWithHttpInfo (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/auto-forecast/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdAutoForecastCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建供水领域自动预报的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdAutoForecastCreatePostAsync (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdAutoForecastCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建供水领域自动预报的方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdAutoForecastCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/auto-forecast/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdAutoForecastCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建关阀方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdCloseValveCreatePost (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdCloseValveCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建关阀方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdCloseValveCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/close-valve/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdCloseValveCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建关阀方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdCloseValveCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdCloseValveCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建关阀方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdCloseValveCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/close-valve/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdCloseValveCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除方案和方案的模型数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1ScenarioComputeWdDeleteScenarioGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1ScenarioComputeWdDeleteScenarioGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除方案和方案的模型数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ApiV1ScenarioComputeWdDeleteScenarioGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Object >>("/api/v1/scenario-compute/wd/delete-scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdDeleteScenarioGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除方案和方案的模型数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1ScenarioComputeWdDeleteScenarioGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1ScenarioComputeWdDeleteScenarioGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除方案和方案的模型数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ApiV1ScenarioComputeWdDeleteScenarioGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Object>>("/api/v1/scenario-compute/wd/delete-scenario", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdDeleteScenarioGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建模拟管道冲洗方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdFlushingCreatePost (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdFlushingCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建模拟管道冲洗方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdFlushingCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/flushing/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdFlushingCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建模拟管道冲洗方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdFlushingCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdFlushingCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建模拟管道冲洗方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdFlushingCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdFlushingScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/flushing/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdFlushingCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建人工预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdManualForecastCreatePost (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdManualForecastCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建人工预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdManualForecastCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/manual-forecast/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdManualForecastCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建人工预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdManualForecastCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdManualForecastCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建人工预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdManualForecastCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdCloseValveScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/manual-forecast/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdManualForecastCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建爆管事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePost (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建爆管事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/pipe-burst-accident/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdPipeBurstAccidentCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建爆管事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建爆管事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdPipeBurstAccidentCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdPipeBurstAccidentScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/pipe-burst-accident/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdPipeBurstAccidentCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建规划评估方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdPlanningCreatePost (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdPlanningCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建规划评估方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdPlanningCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/planning/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdPlanningCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建规划评估方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdPlanningCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdPlanningCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建规划评估方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdPlanningCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdPlanningScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/planning/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdPlanningCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建调度方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdScheduleCreatePost (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdScheduleCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建调度方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdScheduleCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/schedule/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdScheduleCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建调度方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdScheduleCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdScheduleCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建调度方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdScheduleCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdScheduleScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/schedule/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdScheduleCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建水锤模拟方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdWaterhammerCreatePost (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdWaterhammerCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建水锤模拟方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdWaterhammerCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/waterhammer/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdWaterhammerCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建水锤模拟方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdWaterhammerCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdWaterhammerCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建水锤模拟方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdWaterhammerCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdWaterHammerScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/waterhammer/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdWaterhammerCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建水质事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiV1ScenarioComputeWdWqAccidentCreatePost (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiV1ScenarioComputeWdWqAccidentCreatePostWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建水质事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiV1ScenarioComputeWdWqAccidentCreatePostWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/v1/scenario-compute/wd/wq-accident/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdWqAccidentCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建水质事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiV1ScenarioComputeWdWqAccidentCreatePostAsync (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiV1ScenarioComputeWdWqAccidentCreatePostAsyncWithHttpInfo(dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建水质事故方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiV1ScenarioComputeWdWqAccidentCreatePostAsyncWithHttpInfo (DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput = default(DhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeWdDtosCreateWdwqAccidentScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/v1/scenario-compute/wd/wq-accident/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ScenarioComputeWdWqAccidentCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
