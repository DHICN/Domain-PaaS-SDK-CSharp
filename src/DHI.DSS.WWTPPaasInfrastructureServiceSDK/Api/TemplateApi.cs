/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client;
using DHI.DSS.WWTPPaasInfrastructureServiceSDK.Model;

namespace DHI.DSS.WWTPPaasInfrastructureServiceSDK.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITemplateApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario
        /// </summary>
        /// <remarks>
        /// 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiV2ModelConfigTemplateDeletePost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario
        /// </summary>
        /// <remarks>
        /// 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiV2ModelConfigTemplateDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>string</returns>
        Result<string> ApiV2ModelConfigTemplateDownloadGet (string templateScenarioId = default(string));

        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>ApiResponse of string</returns>
        ApiResponse<Result<string>> ApiV2ModelConfigTemplateDownloadGetWithHttpInfo (string templateScenarioId = default(string));
        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;TemplateOutput&gt;</returns>
        Result<List<TemplateOutput>> ApiV2ModelConfigTemplateGetAllGet ();

        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;TemplateOutput&gt;</returns>
        ApiResponse<Result<List<TemplateOutput>>> ApiV2ModelConfigTemplateGetAllGetWithHttpInfo ();
        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario
        /// </summary>
        /// <remarks>
        /// 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>TemplateOutput</returns>
        Result<TemplateOutput> ApiV2ModelConfigTemplateUploadCreatePost (string modelName = default(string), int? modelType = default(int?));

        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario
        /// </summary>
        /// <remarks>
        /// 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>ApiResponse of TemplateOutput</returns>
        ApiResponse<Result<TemplateOutput>> ApiV2ModelConfigTemplateUploadCreatePostWithHttpInfo (string modelName = default(string), int? modelType = default(int?));
        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario
        /// </summary>
        /// <remarks>
        /// 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>TemplateOutput</returns>
        Result<TemplateOutput> ApiV2ModelConfigTemplateUploadUpdatePost (string templateScenarioId = default(string));

        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario
        /// </summary>
        /// <remarks>
        /// 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>ApiResponse of TemplateOutput</returns>
        ApiResponse<Result<TemplateOutput>> ApiV2ModelConfigTemplateUploadUpdatePostWithHttpInfo (string templateScenarioId = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITemplateApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario
        /// </summary>
        /// <remarks>
        /// 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiV2ModelConfigTemplateDeletePostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario
        /// </summary>
        /// <remarks>
        /// 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiV2ModelConfigTemplateDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of string</returns>
        System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigTemplateDownloadGetAsync (string templateScenarioId = default(string));

        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<string>>> ApiV2ModelConfigTemplateDownloadGetAsyncWithHttpInfo (string templateScenarioId = default(string));
        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;TemplateOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<TemplateOutput>>> ApiV2ModelConfigTemplateGetAllGetAsync ();

        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;TemplateOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<TemplateOutput>>>> ApiV2ModelConfigTemplateGetAllGetAsyncWithHttpInfo ();
        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario
        /// </summary>
        /// <remarks>
        /// 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of TemplateOutput</returns>
        System.Threading.Tasks.Task<Result<TemplateOutput>> ApiV2ModelConfigTemplateUploadCreatePostAsync (string modelName = default(string), int? modelType = default(int?));

        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario
        /// </summary>
        /// <remarks>
        /// 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of ApiResponse (TemplateOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<TemplateOutput>>> ApiV2ModelConfigTemplateUploadCreatePostAsyncWithHttpInfo (string modelName = default(string), int? modelType = default(int?));
        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario
        /// </summary>
        /// <remarks>
        /// 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of TemplateOutput</returns>
        System.Threading.Tasks.Task<Result<TemplateOutput>> ApiV2ModelConfigTemplateUploadUpdatePostAsync (string templateScenarioId = default(string));

        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario
        /// </summary>
        /// <remarks>
        /// 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </remarks>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of ApiResponse (TemplateOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<TemplateOutput>>> ApiV2ModelConfigTemplateUploadUpdatePostAsyncWithHttpInfo (string templateScenarioId = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITemplateApi : ITemplateApiSync, ITemplateApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TemplateApi : ITemplateApi
    {
        private DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TemplateApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TemplateApi(String basePath)
        {
            this.Configuration = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.GlobalConfiguration.Instance,
                new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TemplateApi(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.MergeConfigurations(
                DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public TemplateApi(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ISynchronousClient client,DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IAsynchronousClient asyncClient, DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiV2ModelConfigTemplateDeletePost (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<bool>> localVarResponse = ApiV2ModelConfigTemplateDeletePostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< bool >> ApiV2ModelConfigTemplateDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/v2/model-config/template/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiV2ModelConfigTemplateDeletePostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<bool>> localVarResponse = await ApiV2ModelConfigTemplateDeletePostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除模型模板并删除模板方案 Delete model template file and delete the template scenario 删除模型模板压缩文件（.zip, .7z），并删除模板方案 Delete model template compressed file with extension .zip or .7z, and delete the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<bool>>> ApiV2ModelConfigTemplateDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/v2/model-config/template/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>string</returns>
        public Result<string> ApiV2ModelConfigTemplateDownloadGet (string templateScenarioId = default(string))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<string>> localVarResponse = ApiV2ModelConfigTemplateDownloadGetWithHttpInfo(templateScenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>ApiResponse of string</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< string >> ApiV2ModelConfigTemplateDownloadGetWithHttpInfo (string templateScenarioId = default(string))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (templateScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "templateScenarioId", templateScenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< string >>("/api/v2/model-config/template/download", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateDownloadGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of string</returns>
        public async System.Threading.Tasks.Task<Result<string>> ApiV2ModelConfigTemplateDownloadGetAsync (string templateScenarioId = default(string))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<string>> localVarResponse = await ApiV2ModelConfigTemplateDownloadGetAsyncWithHttpInfo(templateScenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取下载模型模板文件的url Get url for downloading the template file 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<string>>> ApiV2ModelConfigTemplateDownloadGetAsyncWithHttpInfo (string templateScenarioId = default(string))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (templateScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "templateScenarioId", templateScenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<string>>("/api/v2/model-config/template/download", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateDownloadGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;TemplateOutput&gt;</returns>
        public Result<List<TemplateOutput>> ApiV2ModelConfigTemplateGetAllGet ()
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<TemplateOutput>>> localVarResponse = ApiV2ModelConfigTemplateGetAllGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;TemplateOutput&gt;</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< List<TemplateOutput> >> ApiV2ModelConfigTemplateGetAllGetWithHttpInfo ()
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<TemplateOutput> >>("/api/v2/model-config/template/get-all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateGetAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;TemplateOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<TemplateOutput>>> ApiV2ModelConfigTemplateGetAllGetAsync ()
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<TemplateOutput>>> localVarResponse = await ApiV2ModelConfigTemplateGetAllGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取模板方案列表 Get all the template scenarios 
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;TemplateOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<List<TemplateOutput>>>> ApiV2ModelConfigTemplateGetAllGetAsyncWithHttpInfo ()
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<TemplateOutput>>>("/api/v2/model-config/template/get-all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateGetAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>TemplateOutput</returns>
        public Result<TemplateOutput> ApiV2ModelConfigTemplateUploadCreatePost (string modelName = default(string), int? modelType = default(int?))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<TemplateOutput>> localVarResponse = ApiV2ModelConfigTemplateUploadCreatePostWithHttpInfo(modelName, modelType);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>ApiResponse of TemplateOutput</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< TemplateOutput >> ApiV2ModelConfigTemplateUploadCreatePostWithHttpInfo (string modelName = default(string), int? modelType = default(int?))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "modelName", modelName));
            }
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< TemplateOutput >>("/api/v2/model-config/template/upload-create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateUploadCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of TemplateOutput</returns>
        public async System.Threading.Tasks.Task<Result<TemplateOutput>> ApiV2ModelConfigTemplateUploadCreatePostAsync (string modelName = default(string), int? modelType = default(int?))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<TemplateOutput>> localVarResponse = await ApiV2ModelConfigTemplateUploadCreatePostAsyncWithHttpInfo(modelName, modelType);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 上传模型模板并创建模板方案 Upload model template file and create a template scenario 上传模型模板压缩文件（.zip, .7z），保存到minIO，并创建模板方案 Upload model template compressed file with extension .zip or .7z, upload to minio and create a new template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelName">模型名称 model name (optional)</param>
        /// <param name="modelType">模型类型 model type (optional)</param>
        /// <returns>Task of ApiResponse (TemplateOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<TemplateOutput>>> ApiV2ModelConfigTemplateUploadCreatePostAsyncWithHttpInfo (string modelName = default(string), int? modelType = default(int?))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "modelName", modelName));
            }
            if (modelType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "modelType", modelType));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<TemplateOutput>>("/api/v2/model-config/template/upload-create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateUploadCreatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>TemplateOutput</returns>
        public Result<TemplateOutput> ApiV2ModelConfigTemplateUploadUpdatePost (string templateScenarioId = default(string))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<TemplateOutput>> localVarResponse = ApiV2ModelConfigTemplateUploadUpdatePostWithHttpInfo(templateScenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>ApiResponse of TemplateOutput</returns>
        public DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result< TemplateOutput >> ApiV2ModelConfigTemplateUploadUpdatePostWithHttpInfo (string templateScenarioId = default(string))
        {
            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (templateScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "templateScenarioId", templateScenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< TemplateOutput >>("/api/v2/model-config/template/upload-update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateUploadUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of TemplateOutput</returns>
        public async System.Threading.Tasks.Task<Result<TemplateOutput>> ApiV2ModelConfigTemplateUploadUpdatePostAsync (string templateScenarioId = default(string))
        {
             DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<TemplateOutput>> localVarResponse = await ApiV2ModelConfigTemplateUploadUpdatePostAsyncWithHttpInfo(templateScenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 上传模型模板并更新模板方案 Upload model template file and update the template scenario 重新上传模型模板压缩文件（.zip, .7z），保存到minIO，并更新模板方案 Re-upload model template compressed file with extension .zip or .7z, upload to minio and update the existing template scenario
        /// </summary>
        /// <exception cref="DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateScenarioId">模板方案ID template scenario id (optional)</param>
        /// <returns>Task of ApiResponse (TemplateOutput)</returns>
        public async System.Threading.Tasks.Task<DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ApiResponse<Result<TemplateOutput>>> ApiV2ModelConfigTemplateUploadUpdatePostAsyncWithHttpInfo (string templateScenarioId = default(string))
        {

            DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions localVarRequestOptions = new DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (templateScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.ClientUtils.ParameterToMultiMap("", "templateScenarioId", templateScenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<TemplateOutput>>("/api/v2/model-config/template/upload-update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2ModelConfigTemplateUploadUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
