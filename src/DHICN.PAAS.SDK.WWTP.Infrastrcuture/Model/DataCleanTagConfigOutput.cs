/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.WWTP.Infrastrcuture.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.WWTP.Infrastrcuture.Model
{
    /// <summary>
    /// DataCleanTagConfigOutput
    /// </summary>
    [DataContract]
    public partial class DataCleanTagConfigOutput :  IEquatable<DataCleanTagConfigOutput>, IValidatableObject
    {
        /// <summary>
        /// Defines Grade
        /// </summary>
        public enum GradeEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2

        }

        /// <summary>
        /// Gets or Sets Grade
        /// </summary>
        [DataMember(Name="grade", EmitDefaultValue=false)]
        public GradeEnum? Grade { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DataCleanTagConfigOutput" /> class.
        /// </summary>
        /// <param name="id">配置ID config id.</param>
        /// <param name="tag">标签 data clean tag.</param>
        /// <param name="status">状态信息 device status.</param>
        /// <param name="message">维护预警 device maintenance.</param>
        /// <param name="health">是否正常 if the device is health.</param>
        /// <param name="label">状态标识 status label.</param>
        /// <param name="_default">是否默认 if it is a default tag.</param>
        /// <param name="grade">grade.</param>
        public DataCleanTagConfigOutput(Guid id = default(Guid), string tag = default(string), string status = default(string), string message = default(string), bool health = default(bool), string label = default(string), bool _default = default(bool), GradeEnum? grade = default(GradeEnum?))
        {
            this.Id = id;
            this.Tag = tag;
            this.Status = status;
            this.Message = message;
            this.Health = health;
            this.Label = label;
            this.Default = _default;
            this.Grade = grade;
        }
        
        /// <summary>
        /// 配置ID config id
        /// </summary>
        /// <value>配置ID config id</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// 标签 data clean tag
        /// </summary>
        /// <value>标签 data clean tag</value>
        [DataMember(Name="tag", EmitDefaultValue=true)]
        public string Tag { get; set; }

        /// <summary>
        /// 状态信息 device status
        /// </summary>
        /// <value>状态信息 device status</value>
        [DataMember(Name="status", EmitDefaultValue=true)]
        public string Status { get; set; }

        /// <summary>
        /// 维护预警 device maintenance
        /// </summary>
        /// <value>维护预警 device maintenance</value>
        [DataMember(Name="message", EmitDefaultValue=true)]
        public string Message { get; set; }

        /// <summary>
        /// 是否正常 if the device is health
        /// </summary>
        /// <value>是否正常 if the device is health</value>
        [DataMember(Name="health", EmitDefaultValue=false)]
        public bool Health { get; set; }

        /// <summary>
        /// 状态标识 status label
        /// </summary>
        /// <value>状态标识 status label</value>
        [DataMember(Name="label", EmitDefaultValue=true)]
        public string Label { get; set; }

        /// <summary>
        /// 是否默认 if it is a default tag
        /// </summary>
        /// <value>是否默认 if it is a default tag</value>
        [DataMember(Name="default", EmitDefaultValue=false)]
        public bool Default { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DataCleanTagConfigOutput {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Tag: ").Append(Tag).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Health: ").Append(Health).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Default: ").Append(Default).Append("\n");
            sb.Append("  Grade: ").Append(Grade).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DataCleanTagConfigOutput);
        }

        /// <summary>
        /// Returns true if DataCleanTagConfigOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of DataCleanTagConfigOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DataCleanTagConfigOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Tag == input.Tag ||
                    (this.Tag != null &&
                    this.Tag.Equals(input.Tag))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.Health == input.Health ||
                    this.Health.Equals(input.Health)
                ) && 
                (
                    this.Label == input.Label ||
                    (this.Label != null &&
                    this.Label.Equals(input.Label))
                ) && 
                (
                    this.Default == input.Default ||
                    this.Default.Equals(input.Default)
                ) && 
                (
                    this.Grade == input.Grade ||
                    this.Grade.Equals(input.Grade)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Tag != null)
                    hashCode = hashCode * 59 + this.Tag.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                hashCode = hashCode * 59 + this.Health.GetHashCode();
                if (this.Label != null)
                    hashCode = hashCode * 59 + this.Label.GetHashCode();
                hashCode = hashCode * 59 + this.Default.GetHashCode();
                hashCode = hashCode * 59 + this.Grade.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
