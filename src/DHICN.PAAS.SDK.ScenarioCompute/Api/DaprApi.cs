/* 
 * scenario-compute-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ScenarioCompute.Client;
using DHICN.PAAS.SDK.ScenarioCompute.Model;

namespace DHICN.PAAS.SDK.ScenarioCompute.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDaprApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 创建自动预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiAppDaprAutoComputeTenantIdPost (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));

        /// <summary>
        /// 创建自动预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiAppDaprAutoComputeTenantIdPostWithHttpInfo (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));
        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息，
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput</returns>
        Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput> ApiAppDaprDeviceIndicatorByIdGet (string tenantId = default(string), string indicatorId = default(string));

        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息，
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput</returns>
        ApiResponse<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>> ApiAppDaprDeviceIndicatorByIdGetWithHttpInfo (string tenantId = default(string), string indicatorId = default(string));
        /// <summary>
        /// 获取编辑条件配置
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;</returns>
        Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>> ApiAppDaprModelBoundariesGet (string tenantId = default(string), string templateId = default(string));

        /// <summary>
        /// 获取编辑条件配置
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;</returns>
        ApiResponse<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>> ApiAppDaprModelBoundariesGetWithHttpInfo (string tenantId = default(string), string templateId = default(string));
        /// <summary>
        /// /api/app/dapr/rainfall-data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>double</returns>
        Result<double> ApiAppDaprRainfallDataGet (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// /api/app/dapr/rainfall-data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>ApiResponse of double</returns>
        ApiResponse<Result<double>> ApiAppDaprRainfallDataGetWithHttpInfo (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 通过ModelDriver 运行模型
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppDaprRunModelPost (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo));

        /// <summary>
        /// 通过ModelDriver 运行模型
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppDaprRunModelPostWithHttpInfo (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDaprApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 创建自动预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiAppDaprAutoComputeTenantIdPostAsync (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));

        /// <summary>
        /// 创建自动预报方案
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiAppDaprAutoComputeTenantIdPostAsyncWithHttpInfo (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput));
        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息，
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput</returns>
        System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>> ApiAppDaprDeviceIndicatorByIdGetAsync (string tenantId = default(string), string indicatorId = default(string));

        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息，
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>>> ApiAppDaprDeviceIndicatorByIdGetAsyncWithHttpInfo (string tenantId = default(string), string indicatorId = default(string));
        /// <summary>
        /// 获取编辑条件配置
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>Task of List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>> ApiAppDaprModelBoundariesGetAsync (string tenantId = default(string), string templateId = default(string));

        /// <summary>
        /// 获取编辑条件配置
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>>> ApiAppDaprModelBoundariesGetAsyncWithHttpInfo (string tenantId = default(string), string templateId = default(string));
        /// <summary>
        /// /api/app/dapr/rainfall-data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>Task of double</returns>
        System.Threading.Tasks.Task<Result<double>> ApiAppDaprRainfallDataGetAsync (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string));

        /// <summary>
        /// /api/app/dapr/rainfall-data
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>Task of ApiResponse (double)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<double>>> ApiAppDaprRainfallDataGetAsyncWithHttpInfo (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string));
        /// <summary>
        /// 通过ModelDriver 运行模型
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppDaprRunModelPostAsync (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo));

        /// <summary>
        /// 通过ModelDriver 运行模型
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppDaprRunModelPostAsyncWithHttpInfo (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDaprApi : IDaprApiSync, IDaprApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DaprApi : IDaprApi
    {
        private DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DaprApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DaprApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DaprApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DaprApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DaprApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DaprApi(DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DaprApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DaprApi(DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient client,DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 创建自动预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public Result<DhiDssScenarioComputeScenarioDtosScenarioInfo> ApiAppDaprAutoComputeTenantIdPost (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = ApiAppDaprAutoComputeTenantIdPostWithHttpInfo(tenantId, dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 创建自动预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >> ApiAppDaprAutoComputeTenantIdPostWithHttpInfo (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {
            // verify the required parameter 'tenantId' is set
            if (tenantId == null)
                throw new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException(400, "Missing required parameter 'tenantId' when calling DaprApi->ApiAppDaprAutoComputeTenantIdPost");

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("tenantId", DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToString(tenantId)); // path parameter
            localVarRequestOptions.Data = dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< DhiDssScenarioComputeScenarioDtosScenarioInfo >>("/api/app/dapr/auto-compute/{tenantId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprAutoComputeTenantIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 创建自动预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosScenarioInfo</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> ApiAppDaprAutoComputeTenantIdPostAsync (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>> localVarResponse = await ApiAppDaprAutoComputeTenantIdPostAsyncWithHttpInfo(tenantId, dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 创建自动预报方案 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"></param>
        /// <param name="dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosScenarioInfo)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>> ApiAppDaprAutoComputeTenantIdPostAsyncWithHttpInfo (string tenantId, DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput = default(DhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput))
        {
            // verify the required parameter 'tenantId' is set
            if (tenantId == null)
                throw new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException(400, "Missing required parameter 'tenantId' when calling DaprApi->ApiAppDaprAutoComputeTenantIdPost");


            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("tenantId", DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToString(tenantId)); // path parameter
            localVarRequestOptions.Data = dhiDssScenarioComputeScenarioDtosCreateAutoScenarioInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<DhiDssScenarioComputeScenarioDtosScenarioInfo>>("/api/app/dapr/auto-compute/{tenantId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprAutoComputeTenantIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息， 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput</returns>
        public Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput> ApiAppDaprDeviceIndicatorByIdGet (string tenantId = default(string), string indicatorId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>> localVarResponse = ApiAppDaprDeviceIndicatorByIdGetWithHttpInfo(tenantId, indicatorId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息， 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>ApiResponse of DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput >> ApiAppDaprDeviceIndicatorByIdGetWithHttpInfo (string tenantId = default(string), string indicatorId = default(string))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (indicatorId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "indicatorId", indicatorId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput >>("/api/app/dapr/device-indicator-by-id", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprDeviceIndicatorByIdGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息， 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>Task of DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput</returns>
        public async System.Threading.Tasks.Task<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>> ApiAppDaprDeviceIndicatorByIdGetAsync (string tenantId = default(string), string indicatorId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>> localVarResponse = await ApiAppDaprDeviceIndicatorByIdGetAsyncWithHttpInfo(tenantId, indicatorId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据设备指标Id 获取指标的详细信息， 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="indicatorId"> (optional)</param>
        /// <returns>Task of ApiResponse (DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>>> ApiAppDaprDeviceIndicatorByIdGetAsyncWithHttpInfo (string tenantId = default(string), string indicatorId = default(string))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (indicatorId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "indicatorId", indicatorId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<DhiDssScenarioComputeScenarioDtosDeviceIndicatorOutput>>("/api/app/dapr/device-indicator-by-id", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprDeviceIndicatorByIdGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取编辑条件配置 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;</returns>
        public Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>> ApiAppDaprModelBoundariesGet (string tenantId = default(string), string templateId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>> localVarResponse = ApiAppDaprModelBoundariesGetWithHttpInfo(tenantId, templateId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取编辑条件配置 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput> >> ApiAppDaprModelBoundariesGetWithHttpInfo (string tenantId = default(string), string templateId = default(string))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (templateId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "templateId", templateId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput> >>("/api/app/dapr/model-boundaries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprModelBoundariesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取编辑条件配置 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>Task of List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>> ApiAppDaprModelBoundariesGetAsync (string tenantId = default(string), string templateId = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>> localVarResponse = await ApiAppDaprModelBoundariesGetAsyncWithHttpInfo(tenantId, templateId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取编辑条件配置 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="templateId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>>> ApiAppDaprModelBoundariesGetAsyncWithHttpInfo (string tenantId = default(string), string templateId = default(string))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "tenantId", tenantId));
            }
            if (templateId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "templateId", templateId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DhiDssScenarioComputeDaprServicesDtosModelBoundaryConfigOutput>>>("/api/app/dapr/model-boundaries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprModelBoundariesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/app/dapr/rainfall-data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>double</returns>
        public Result<double> ApiAppDaprRainfallDataGet (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<double>> localVarResponse = ApiAppDaprRainfallDataGetWithHttpInfo(tenantId, deviceId, indicator, startTime, endTime);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/app/dapr/rainfall-data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>ApiResponse of double</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< double >> ApiAppDaprRainfallDataGetWithHttpInfo (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "TenantId", tenantId));
            }
            if (deviceId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "DeviceId", deviceId));
            }
            if (indicator != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "Indicator", indicator));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< double >>("/api/app/dapr/rainfall-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprRainfallDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/app/dapr/rainfall-data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>Task of double</returns>
        public async System.Threading.Tasks.Task<Result<double>> ApiAppDaprRainfallDataGetAsync (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<double>> localVarResponse = await ApiAppDaprRainfallDataGetAsyncWithHttpInfo(tenantId, deviceId, indicator, startTime, endTime);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/app/dapr/rainfall-data 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tenantId"> (optional)</param>
        /// <param name="deviceId"> (optional)</param>
        /// <param name="indicator"> (optional)</param>
        /// <param name="startTime"> (optional)</param>
        /// <param name="endTime"> (optional)</param>
        /// <returns>Task of ApiResponse (double)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<double>>> ApiAppDaprRainfallDataGetAsyncWithHttpInfo (string tenantId = default(string), string deviceId = default(string), string indicator = default(string), string startTime = default(string), string endTime = default(string))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (tenantId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "TenantId", tenantId));
            }
            if (deviceId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "DeviceId", deviceId));
            }
            if (indicator != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "Indicator", indicator));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<double>>("/api/app/dapr/rainfall-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprRainfallDataGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过ModelDriver 运行模型 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppDaprRunModelPost (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppDaprRunModelPostWithHttpInfo(dhiDssScenarioComputeDaprServicesDtosRunModelInfo);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 通过ModelDriver 运行模型 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ApiAppDaprRunModelPostWithHttpInfo (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = dhiDssScenarioComputeDaprServicesDtosRunModelInfo;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/app/dapr/run-model", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprRunModelPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 通过ModelDriver 运行模型 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppDaprRunModelPostAsync (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppDaprRunModelPostAsyncWithHttpInfo(dhiDssScenarioComputeDaprServicesDtosRunModelInfo);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 通过ModelDriver 运行模型 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="dhiDssScenarioComputeDaprServicesDtosRunModelInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ApiAppDaprRunModelPostAsyncWithHttpInfo (DhiDssScenarioComputeDaprServicesDtosRunModelInfo dhiDssScenarioComputeDaprServicesDtosRunModelInfo = default(DhiDssScenarioComputeDaprServicesDtosRunModelInfo))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = dhiDssScenarioComputeDaprServicesDtosRunModelInfo;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/app/dapr/run-model", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppDaprRunModelPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
