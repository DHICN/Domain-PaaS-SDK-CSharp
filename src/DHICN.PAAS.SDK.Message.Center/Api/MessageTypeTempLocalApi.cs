/* 
 * message-center-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.Message.Center.Client;
using DHICN.PAAS.SDK.Message.Center.Model;

namespace DHICN.PAAS.SDK.Message.Center.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMessageTypeTempLocalApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeTemplateBatchAddPost (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>));

        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeTemplateBatchAddPostWithHttpInfo (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>));
        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeTemplateDeletePost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeTemplateDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>MsgTypeTempLocalOutputPage</returns>
        Result<MsgTypeTempLocalOutputPage> ApiV1MessageTypeTemplateGetListByPageGet (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));

        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>ApiResponse of MsgTypeTempLocalOutputPage</returns>
        ApiResponse<Result<MsgTypeTempLocalOutputPage>> ApiV1MessageTypeTemplateGetListByPageGetWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));
        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>MsgTypeTempLocalOutput</returns>
        Result<MsgTypeTempLocalOutput> ApiV1MessageTypeTemplateGetTemplateGet (string msgType, string language);

        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>ApiResponse of MsgTypeTempLocalOutput</returns>
        ApiResponse<Result<MsgTypeTempLocalOutput>> ApiV1MessageTypeTemplateGetTemplateGetWithHttpInfo (string msgType, string language);
        /// <summary>
        /// 修改消息类型内容模板 | update message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1MessageTypeTemplateUpdatePost (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>));

        /// <summary>
        /// 修改消息类型内容模板 | update message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1MessageTypeTemplateUpdatePostWithHttpInfo (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMessageTypeTempLocalApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeTemplateBatchAddPostAsync (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>));

        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeTemplateBatchAddPostAsyncWithHttpInfo (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>));
        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeTemplateDeletePostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeTemplateDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of MsgTypeTempLocalOutputPage</returns>
        System.Threading.Tasks.Task<Result<MsgTypeTempLocalOutputPage>> ApiV1MessageTypeTemplateGetListByPageGetAsync (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));

        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of ApiResponse (MsgTypeTempLocalOutputPage)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<MsgTypeTempLocalOutputPage>>> ApiV1MessageTypeTemplateGetListByPageGetAsyncWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?));
        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>Task of MsgTypeTempLocalOutput</returns>
        System.Threading.Tasks.Task<Result<MsgTypeTempLocalOutput>> ApiV1MessageTypeTemplateGetTemplateGetAsync (string msgType, string language);

        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>Task of ApiResponse (MsgTypeTempLocalOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<MsgTypeTempLocalOutput>>> ApiV1MessageTypeTemplateGetTemplateGetAsyncWithHttpInfo (string msgType, string language);
        /// <summary>
        /// 修改消息类型内容模板 | update message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeTemplateUpdatePostAsync (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>));

        /// <summary>
        /// 修改消息类型内容模板 | update message type template
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1MessageTypeTemplateUpdatePostAsyncWithHttpInfo (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMessageTypeTempLocalApi : IMessageTypeTempLocalApiSync, IMessageTypeTempLocalApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class MessageTypeTempLocalApi : IMessageTypeTempLocalApi
    {
        private DHICN.PAAS.SDK.Message.Center.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeTempLocalApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MessageTypeTempLocalApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeTempLocalApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MessageTypeTempLocalApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.Message.Center.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Message.Center.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.Message.Center.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeTempLocalApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public MessageTypeTempLocalApi(DHICN.PAAS.SDK.Message.Center.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.Message.Center.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.Message.Center.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.Message.Center.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTypeTempLocalApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public MessageTypeTempLocalApi(DHICN.PAAS.SDK.Message.Center.Client.ISynchronousClient client,DHICN.PAAS.SDK.Message.Center.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.Message.Center.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.Message.Center.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.Message.Center.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.Message.Center.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeTemplateBatchAddPost (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeTemplateBatchAddPostWithHttpInfo(addMsgTypeTempLocalInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeTemplateBatchAddPostWithHttpInfo (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addMsgTypeTempLocalInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type-template/batch-add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateBatchAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeTemplateBatchAddPostAsync (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeTemplateBatchAddPostAsyncWithHttpInfo(addMsgTypeTempLocalInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 批量新增消息类型内容模板 | batch add message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeTemplateBatchAddPostAsyncWithHttpInfo (List<AddMsgTypeTempLocalInput> addMsgTypeTempLocalInput = default(List<AddMsgTypeTempLocalInput>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addMsgTypeTempLocalInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type-template/batch-add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateBatchAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeTemplateDeletePost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeTemplateDeletePostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeTemplateDeletePostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type-template/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeTemplateDeletePostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeTemplateDeletePostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除消息类型内容模板 | batch delete message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeTemplateDeletePostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type-template/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>MsgTypeTempLocalOutputPage</returns>
        public Result<MsgTypeTempLocalOutputPage> ApiV1MessageTypeTemplateGetListByPageGet (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MsgTypeTempLocalOutputPage>> localVarResponse = ApiV1MessageTypeTemplateGetListByPageGetWithHttpInfo(keyWords, pageIndex, pageSize);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>ApiResponse of MsgTypeTempLocalOutputPage</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< MsgTypeTempLocalOutputPage >> ApiV1MessageTypeTemplateGetListByPageGetWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (keyWords != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "KeyWords", keyWords));
            }
            if (pageIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageIndex", pageIndex));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageSize", pageSize));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< MsgTypeTempLocalOutputPage >>("/api/v1/message-type-template/get-list-by-page", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateGetListByPageGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of MsgTypeTempLocalOutputPage</returns>
        public async System.Threading.Tasks.Task<Result<MsgTypeTempLocalOutputPage>> ApiV1MessageTypeTemplateGetListByPageGetAsync (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MsgTypeTempLocalOutputPage>> localVarResponse = await ApiV1MessageTypeTemplateGetListByPageGetAsyncWithHttpInfo(keyWords, pageIndex, pageSize);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 查询消息类型内容模板 | query message type template by page 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="keyWords"> (optional)</param>
        /// <param name="pageIndex"> (optional)</param>
        /// <param name="pageSize"> (optional)</param>
        /// <returns>Task of ApiResponse (MsgTypeTempLocalOutputPage)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MsgTypeTempLocalOutputPage>>> ApiV1MessageTypeTemplateGetListByPageGetAsyncWithHttpInfo (string keyWords = default(string), int? pageIndex = default(int?), int? pageSize = default(int?))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (keyWords != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "KeyWords", keyWords));
            }
            if (pageIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageIndex", pageIndex));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "PageSize", pageSize));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<MsgTypeTempLocalOutputPage>>("/api/v1/message-type-template/get-list-by-page", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateGetListByPageGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>MsgTypeTempLocalOutput</returns>
        public Result<MsgTypeTempLocalOutput> ApiV1MessageTypeTemplateGetTemplateGet (string msgType, string language)
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MsgTypeTempLocalOutput>> localVarResponse = ApiV1MessageTypeTemplateGetTemplateGetWithHttpInfo(msgType, language);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>ApiResponse of MsgTypeTempLocalOutput</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< MsgTypeTempLocalOutput >> ApiV1MessageTypeTemplateGetTemplateGetWithHttpInfo (string msgType, string language)
        {
            // verify the required parameter 'msgType' is set
            if (msgType == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'msgType' when calling MessageTypeTempLocalApi->ApiV1MessageTypeTemplateGetTemplateGet");

            // verify the required parameter 'language' is set
            if (language == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'language' when calling MessageTypeTempLocalApi->ApiV1MessageTypeTemplateGetTemplateGet");

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "MsgType", msgType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "Language", language));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< MsgTypeTempLocalOutput >>("/api/v1/message-type-template/get-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateGetTemplateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>Task of MsgTypeTempLocalOutput</returns>
        public async System.Threading.Tasks.Task<Result<MsgTypeTempLocalOutput>> ApiV1MessageTypeTemplateGetTemplateGetAsync (string msgType, string language)
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MsgTypeTempLocalOutput>> localVarResponse = await ApiV1MessageTypeTemplateGetTemplateGetAsyncWithHttpInfo(msgType, language);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据消息类型和语言获取模板 get tempalte by message type and language 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="msgType">消息类型  &lt;br&gt; message&#39;s type </param>
        /// <param name="language">模板语言  &lt;br&gt; tempalte&#39;s language </param>
        /// <returns>Task of ApiResponse (MsgTypeTempLocalOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<MsgTypeTempLocalOutput>>> ApiV1MessageTypeTemplateGetTemplateGetAsyncWithHttpInfo (string msgType, string language)
        {
            // verify the required parameter 'msgType' is set
            if (msgType == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'msgType' when calling MessageTypeTempLocalApi->ApiV1MessageTypeTemplateGetTemplateGet");

            // verify the required parameter 'language' is set
            if (language == null)
                throw new DHICN.PAAS.SDK.Message.Center.Client.ApiException(400, "Missing required parameter 'language' when calling MessageTypeTempLocalApi->ApiV1MessageTypeTemplateGetTemplateGet");


            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "MsgType", msgType));
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.ParameterToMultiMap("", "Language", language));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<MsgTypeTempLocalOutput>>("/api/v1/message-type-template/get-template", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateGetTemplateGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改消息类型内容模板 | update message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1MessageTypeTemplateUpdatePost (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1MessageTypeTemplateUpdatePostWithHttpInfo(updateMsgTypeTempLocalInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 修改消息类型内容模板 | update message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result< Object >> ApiV1MessageTypeTemplateUpdatePostWithHttpInfo (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>))
        {
            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.Message.Center.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateMsgTypeTempLocalInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/message-type-template/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改消息类型内容模板 | update message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1MessageTypeTemplateUpdatePostAsync (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>))
        {
             DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1MessageTypeTemplateUpdatePostAsyncWithHttpInfo(updateMsgTypeTempLocalInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 修改消息类型内容模板 | update message type template 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.Message.Center.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateMsgTypeTempLocalInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.Message.Center.Client.ApiResponse<Result<Object>>> ApiV1MessageTypeTemplateUpdatePostAsyncWithHttpInfo (List<UpdateMsgTypeTempLocalInput> updateMsgTypeTempLocalInput = default(List<UpdateMsgTypeTempLocalInput>))
        {

            DHICN.PAAS.SDK.Message.Center.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.Message.Center.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateMsgTypeTempLocalInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/message-type-template/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1MessageTypeTemplateUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
