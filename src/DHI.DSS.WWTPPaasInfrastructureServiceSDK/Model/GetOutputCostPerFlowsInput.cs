/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.WWTPPaasInfrastructureServiceSDK.Model
{
    /// <summary>
    /// GetOutputCostPerFlowsInput
    /// </summary>
    [DataContract]
    public partial class GetOutputCostPerFlowsInput :  IEquatable<GetOutputCostPerFlowsInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetOutputCostPerFlowsInput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetOutputCostPerFlowsInput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetOutputCostPerFlowsInput" /> class.
        /// </summary>
        /// <param name="nodeCodes">模型点位编码 model node codes (required).</param>
        /// <param name="sTime">开始时间 start time (required).</param>
        /// <param name="eTime">结束时间 end time (required).</param>
        public GetOutputCostPerFlowsInput(List<string> nodeCodes = default(List<string>), DateTime sTime = default(DateTime), DateTime eTime = default(DateTime))
        {
            // to ensure "nodeCodes" is required (not null)
            this.NodeCodes = nodeCodes ?? throw new ArgumentNullException("nodeCodes is a required property for GetOutputCostPerFlowsInput and cannot be null");
            this.STime = sTime;
            this.ETime = eTime;
        }
        
        /// <summary>
        /// 模型点位编码 model node codes
        /// </summary>
        /// <value>模型点位编码 model node codes</value>
        [DataMember(Name="nodeCodes", EmitDefaultValue=false)]
        public List<string> NodeCodes { get; set; }

        /// <summary>
        /// 开始时间 start time
        /// </summary>
        /// <value>开始时间 start time</value>
        [DataMember(Name="sTime", EmitDefaultValue=false)]
        public DateTime STime { get; set; }

        /// <summary>
        /// 结束时间 end time
        /// </summary>
        /// <value>结束时间 end time</value>
        [DataMember(Name="eTime", EmitDefaultValue=false)]
        public DateTime ETime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetOutputCostPerFlowsInput {\n");
            sb.Append("  NodeCodes: ").Append(NodeCodes).Append("\n");
            sb.Append("  STime: ").Append(STime).Append("\n");
            sb.Append("  ETime: ").Append(ETime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetOutputCostPerFlowsInput);
        }

        /// <summary>
        /// Returns true if GetOutputCostPerFlowsInput instances are equal
        /// </summary>
        /// <param name="input">Instance of GetOutputCostPerFlowsInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetOutputCostPerFlowsInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NodeCodes == input.NodeCodes ||
                    this.NodeCodes != null &&
                    input.NodeCodes != null &&
                    this.NodeCodes.SequenceEqual(input.NodeCodes)
                ) && 
                (
                    this.STime == input.STime ||
                    (this.STime != null &&
                    this.STime.Equals(input.STime))
                ) && 
                (
                    this.ETime == input.ETime ||
                    (this.ETime != null &&
                    this.ETime.Equals(input.ETime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NodeCodes != null)
                    hashCode = hashCode * 59 + this.NodeCodes.GetHashCode();
                if (this.STime != null)
                    hashCode = hashCode * 59 + this.STime.GetHashCode();
                if (this.ETime != null)
                    hashCode = hashCode * 59 + this.ETime.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
