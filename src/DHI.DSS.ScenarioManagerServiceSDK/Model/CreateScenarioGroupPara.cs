/* 
 * scenario-manager-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.ScenarioManagerServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.ScenarioManagerServiceSDK.Model
{
    /// <summary>
    /// CreateScenarioGroupPara
    /// </summary>
    [DataContract]
    public partial class CreateScenarioGroupPara :  IEquatable<CreateScenarioGroupPara>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateScenarioGroupPara" /> class.
        /// </summary>
        /// <param name="parentId">父方案组ID parent scenario group&#39;s Id.</param>
        /// <param name="groupName">方案组名称 scenario group name.</param>
        public CreateScenarioGroupPara(Guid? parentId = default(Guid?), string groupName = default(string))
        {
            this.ParentId = parentId;
            this.GroupName = groupName;
        }
        
        /// <summary>
        /// 父方案组ID parent scenario group&#39;s Id
        /// </summary>
        /// <value>父方案组ID parent scenario group&#39;s Id</value>
        [DataMember(Name="parentId", EmitDefaultValue=true)]
        public Guid? ParentId { get; set; }

        /// <summary>
        /// 方案组名称 scenario group name
        /// </summary>
        /// <value>方案组名称 scenario group name</value>
        [DataMember(Name="groupName", EmitDefaultValue=true)]
        public string GroupName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateScenarioGroupPara {\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("  GroupName: ").Append(GroupName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateScenarioGroupPara);
        }

        /// <summary>
        /// Returns true if CreateScenarioGroupPara instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateScenarioGroupPara to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateScenarioGroupPara input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ParentId == input.ParentId ||
                    (this.ParentId != null &&
                    this.ParentId.Equals(input.ParentId))
                ) && 
                (
                    this.GroupName == input.GroupName ||
                    (this.GroupName != null &&
                    this.GroupName.Equals(input.GroupName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ParentId != null)
                    hashCode = hashCode * 59 + this.ParentId.GetHashCode();
                if (this.GroupName != null)
                    hashCode = hashCode * 59 + this.GroupName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
