/* 
 * result-analysis-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ResultAnalysis.Client;
using DHICN.PAAS.SDK.ResultAnalysis.Model;

namespace DHICN.PAAS.SDK.ResultAnalysis.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWqResultAnalysisApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeWqOutput&gt;</returns>
        Result<List<ModelResultPipeWqOutput>> ApiV1ResultAnalysisWqNetworkBasicAllGet (string scenarioId = default(string));

        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeWqOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipeWqOutput>>> ApiV1ResultAnalysisWqNetworkBasicAllGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality
        /// </summary>
        /// <remarks>
        /// 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>ModelResultPipeWQsOutput</returns>
        Result<ModelResultPipeWQsOutput> ApiV1ResultAnalysisWqNetworkDynamicPost (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput));

        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality
        /// </summary>
        /// <remarks>
        /// 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeWQsOutput</returns>
        ApiResponse<Result<ModelResultPipeWQsOutput>> ApiV1ResultAnalysisWqNetworkDynamicPostWithHttpInfo (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput));
        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes
        /// </summary>
        /// <remarks>
        /// 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        Result<BaseDynamicOutput> ApiV1ResultAnalysisWqNetworkNodeDynamicGet (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?));

        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes
        /// </summary>
        /// <remarks>
        /// 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        ApiResponse<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWqNetworkNodeDynamicGetWithHttpInfo (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?));
        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node
        /// </summary>
        /// <remarks>
        /// 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        Result<BaseTimeseriesOutput> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGet (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string));

        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node
        /// </summary>
        /// <remarks>
        /// 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        ApiResponse<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetWithHttpInfo (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string));
        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>List&lt;ModelResultPipePumpStatisticOutput&gt;</returns>
        Result<List<ModelResultPipePumpStatisticOutput>> ApiV1ResultAnalysisWqNetworkPumpStatisticGet (string scenarioid = default(string));

        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipePumpStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipePumpStatisticOutput>>> ApiV1ResultAnalysisWqNetworkPumpStatisticGetWithHttpInfo (string scenarioid = default(string));
        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;</returns>
        Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;</returns>
        Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ModelResultPipeSewagePlantStatisticOutput</returns>
        Result<ModelResultPipeSewagePlantStatisticOutput> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeSewagePlantStatisticOutput</returns>
        ApiResponse<Result<ModelResultPipeSewagePlantStatisticOutput>> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;</returns>
        Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ModelResultPipeSmartWellOverFlowStatisticOutput</returns>
        Result<ModelResultPipeSmartWellOverFlowStatisticOutput> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeSmartWellOverFlowStatisticOutput</returns>
        ApiResponse<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSmartWellStatisticOutput&gt;</returns>
        Result<List<ModelResultPipeSmartWellStatisticOutput>> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSmartWellStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipeSmartWellStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeStorageStatisticOutput&gt;</returns>
        Result<List<ModelResultPipeStorageStatisticOutput>> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeStorageStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipeStorageStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;</returns>
        Result<List<ModelResultPipePumpVolumeStatisticOutput>> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipePumpVolumeStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ModelResultPipeDispatchStatisticOutput</returns>
        Result<ModelResultPipeDispatchStatisticOutput> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGet (string scenarioid = default(string));

        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeDispatchStatisticOutput</returns>
        ApiResponse<Result<ModelResultPipeDispatchStatisticOutput>> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetWithHttpInfo (string scenarioid = default(string));
        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeValveStatisticOutput&gt;</returns>
        Result<List<ModelResultPipeValveStatisticOutput>> ApiV1ResultAnalysisWqNetworkValveStatisticGet (string scenarioid = default(string));

        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeValveStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultPipeValveStatisticOutput>>> ApiV1ResultAnalysisWqNetworkValveStatisticGetWithHttpInfo (string scenarioid = default(string));
        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultBranchAffectedInfoOutput&gt;</returns>
        Result<List<ModelResultBranchAffectedInfoOutput>> ApiV1ResultAnalysisWqRiverAffectedzoneGet (string scenarioId = default(string));

        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultBranchAffectedInfoOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultBranchAffectedInfoOutput>>> ApiV1ResultAnalysisWqRiverAffectedzoneGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;ModelResultRiverWqOutput&gt;</returns>
        Result<List<ModelResultRiverWqOutput>> ApiV1ResultAnalysisWqRiverBasicAllGet (string scenarioId = default(string));

        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverWqOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverWqOutput>>> ApiV1ResultAnalysisWqRiverBasicAllGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverDamStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverDamStatisticOutput>> ApiV1ResultAnalysisWqRiverDamControlStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverDamStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverDamStatisticOutput>>> ApiV1ResultAnalysisWqRiverDamControlStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality
        /// </summary>
        /// <remarks>
        /// 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>ModelResultRiverWQsOutput</returns>
        Result<ModelResultRiverWQsOutput> ApiV1ResultAnalysisWqRiverDynamicPost (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput));

        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality
        /// </summary>
        /// <remarks>
        /// 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>ApiResponse of ModelResultRiverWQsOutput</returns>
        ApiResponse<Result<ModelResultRiverWQsOutput>> ApiV1ResultAnalysisWqRiverDynamicPostWithHttpInfo (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput));
        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverGateTotalStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverGateTotalStatisticOutput>> ApiV1ResultAnalysisWqRiverGateControlStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverGateTotalStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverGateTotalStatisticOutput>>> ApiV1ResultAnalysisWqRiverGateControlStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverGateStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverGateStatisticOutput>> ApiV1ResultAnalysisWqRiverGateStatisticGet (string sceanrioId = default(string));

        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverGateStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverGateStatisticOutput>>> ApiV1ResultAnalysisWqRiverGateStatisticGetWithHttpInfo (string sceanrioId = default(string));
        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverQualifiedStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverQualifiedStatisticOutput>> ApiV1ResultAnalysisWqRiverKeysectionStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverQualifiedStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverQualifiedStatisticOutput>>> ApiV1ResultAnalysisWqRiverKeysectionStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverPumpTotalStatisticOutput>> ApiV1ResultAnalysisWqRiverPumpControlStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverPumpTotalStatisticOutput>>> ApiV1ResultAnalysisWqRiverPumpControlStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverPumpStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverPumpStatisticOutput>> ApiV1ResultAnalysisWqRiverPumpStatisticGet (string sceanrioId = default(string));

        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverPumpStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverPumpStatisticOutput>>> ApiV1ResultAnalysisWqRiverPumpStatisticGetWithHttpInfo (string sceanrioId = default(string));
        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents
        /// </summary>
        /// <remarks>
        /// 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>List&lt;ModelResultStationWqStatisticOutput&gt;</returns>
        Result<List<ModelResultStationWqStatisticOutput>> ApiV1ResultAnalysisWqRiverStationStatisticPost (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput));

        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents
        /// </summary>
        /// <remarks>
        /// 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultStationWqStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultStationWqStatisticOutput>>> ApiV1ResultAnalysisWqRiverStationStatisticPostWithHttpInfo (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput));
        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverWqStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverWqStatisticOutput>> ApiV1ResultAnalysisWqRiverStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverWqStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverWqStatisticOutput>>> ApiV1ResultAnalysisWqRiverStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverControlStatisticOutput&gt;</returns>
        Result<List<ModelResultRiverControlStatisticOutput>> ApiV1ResultAnalysisWqRiverStructureControlStatisticGet (string scenarioId = default(string));

        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverControlStatisticOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultRiverControlStatisticOutput>>> ApiV1ResultAnalysisWqRiverStructureControlStatisticGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ModelResultRiverGatePumpStatisticOutput</returns>
        Result<ModelResultRiverGatePumpStatisticOutput> ApiV1ResultAnalysisWqRiverStructureStatisticGet (string sceanrioId = default(string));

        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ApiResponse of ModelResultRiverGatePumpStatisticOutput</returns>
        ApiResponse<Result<ModelResultRiverGatePumpStatisticOutput>> ApiV1ResultAnalysisWqRiverStructureStatisticGetWithHttpInfo (string sceanrioId = default(string));
        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river
        /// </summary>
        /// <remarks>
        /// 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>ModelResultWqTimeseriesOutput</returns>
        Result<ModelResultWqTimeseriesOutput> ApiV1ResultAnalysisWqRiverTimeseriesPost (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput));

        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river
        /// </summary>
        /// <remarks>
        /// 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>ApiResponse of ModelResultWqTimeseriesOutput</returns>
        ApiResponse<Result<ModelResultWqTimeseriesOutput>> ApiV1ResultAnalysisWqRiverTimeseriesPostWithHttpInfo (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput));
        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;ModelResultTimesOutput&gt;</returns>
        Result<List<ModelResultTimesOutput>> ApiV1ResultAnalysisWqTimeinfoGet (string scenarioId = default(string));

        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultTimesOutput&gt;</returns>
        ApiResponse<Result<List<ModelResultTimesOutput>>> ApiV1ResultAnalysisWqTimeinfoGetWithHttpInfo (string scenarioId = default(string));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWqResultAnalysisApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeWqOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipeWqOutput>>> ApiV1ResultAnalysisWqNetworkBasicAllGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeWqOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipeWqOutput>>>> ApiV1ResultAnalysisWqNetworkBasicAllGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality
        /// </summary>
        /// <remarks>
        /// 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>Task of ModelResultPipeWQsOutput</returns>
        System.Threading.Tasks.Task<Result<ModelResultPipeWQsOutput>> ApiV1ResultAnalysisWqNetworkDynamicPostAsync (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput));

        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality
        /// </summary>
        /// <remarks>
        /// 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeWQsOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelResultPipeWQsOutput>>> ApiV1ResultAnalysisWqNetworkDynamicPostAsyncWithHttpInfo (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput));
        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes
        /// </summary>
        /// <remarks>
        /// 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWqNetworkNodeDynamicGetAsync (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?));

        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes
        /// </summary>
        /// <remarks>
        /// 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWqNetworkNodeDynamicGetAsyncWithHttpInfo (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?));
        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node
        /// </summary>
        /// <remarks>
        /// 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetAsync (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string));

        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node
        /// </summary>
        /// <remarks>
        /// 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetAsyncWithHttpInfo (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string));
        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipePumpStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipePumpStatisticOutput>>> ApiV1ResultAnalysisWqNetworkPumpStatisticGetAsync (string scenarioid = default(string));

        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipePumpStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipePumpStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkPumpStatisticGetAsyncWithHttpInfo (string scenarioid = default(string));
        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ModelResultPipeSewagePlantStatisticOutput</returns>
        System.Threading.Tasks.Task<Result<ModelResultPipeSewagePlantStatisticOutput>> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeSewagePlantStatisticOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelResultPipeSewagePlantStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ModelResultPipeSmartWellOverFlowStatisticOutput</returns>
        System.Threading.Tasks.Task<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeSmartWellOverFlowStatisticOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSmartWellStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipeSmartWellStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSmartWellStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipeSmartWellStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeStorageStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipeStorageStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeStorageStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipeStorageStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipePumpVolumeStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipePumpVolumeStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ModelResultPipeDispatchStatisticOutput</returns>
        System.Threading.Tasks.Task<Result<ModelResultPipeDispatchStatisticOutput>> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetAsync (string scenarioid = default(string));

        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeDispatchStatisticOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelResultPipeDispatchStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetAsyncWithHttpInfo (string scenarioid = default(string));
        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeValveStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultPipeValveStatisticOutput>>> ApiV1ResultAnalysisWqNetworkValveStatisticGetAsync (string scenarioid = default(string));

        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeValveStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultPipeValveStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkValveStatisticGetAsyncWithHttpInfo (string scenarioid = default(string));
        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultBranchAffectedInfoOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultBranchAffectedInfoOutput>>> ApiV1ResultAnalysisWqRiverAffectedzoneGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultBranchAffectedInfoOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultBranchAffectedInfoOutput>>>> ApiV1ResultAnalysisWqRiverAffectedzoneGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverWqOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverWqOutput>>> ApiV1ResultAnalysisWqRiverBasicAllGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverWqOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverWqOutput>>>> ApiV1ResultAnalysisWqRiverBasicAllGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverDamStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverDamStatisticOutput>>> ApiV1ResultAnalysisWqRiverDamControlStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverDamStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverDamStatisticOutput>>>> ApiV1ResultAnalysisWqRiverDamControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality
        /// </summary>
        /// <remarks>
        /// 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>Task of ModelResultRiverWQsOutput</returns>
        System.Threading.Tasks.Task<Result<ModelResultRiverWQsOutput>> ApiV1ResultAnalysisWqRiverDynamicPostAsync (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput));

        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality
        /// </summary>
        /// <remarks>
        /// 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultRiverWQsOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelResultRiverWQsOutput>>> ApiV1ResultAnalysisWqRiverDynamicPostAsyncWithHttpInfo (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput));
        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverGateTotalStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverGateTotalStatisticOutput>>> ApiV1ResultAnalysisWqRiverGateControlStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverGateTotalStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverGateTotalStatisticOutput>>>> ApiV1ResultAnalysisWqRiverGateControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverGateStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverGateStatisticOutput>>> ApiV1ResultAnalysisWqRiverGateStatisticGetAsync (string sceanrioId = default(string));

        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverGateStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverGateStatisticOutput>>>> ApiV1ResultAnalysisWqRiverGateStatisticGetAsyncWithHttpInfo (string sceanrioId = default(string));
        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverQualifiedStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverQualifiedStatisticOutput>>> ApiV1ResultAnalysisWqRiverKeysectionStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverQualifiedStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverQualifiedStatisticOutput>>>> ApiV1ResultAnalysisWqRiverKeysectionStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverPumpTotalStatisticOutput>>> ApiV1ResultAnalysisWqRiverPumpControlStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverPumpTotalStatisticOutput>>>> ApiV1ResultAnalysisWqRiverPumpControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverPumpStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverPumpStatisticOutput>>> ApiV1ResultAnalysisWqRiverPumpStatisticGetAsync (string sceanrioId = default(string));

        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverPumpStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverPumpStatisticOutput>>>> ApiV1ResultAnalysisWqRiverPumpStatisticGetAsyncWithHttpInfo (string sceanrioId = default(string));
        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents
        /// </summary>
        /// <remarks>
        /// 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultStationWqStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultStationWqStatisticOutput>>> ApiV1ResultAnalysisWqRiverStationStatisticPostAsync (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput));

        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents
        /// </summary>
        /// <remarks>
        /// 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultStationWqStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultStationWqStatisticOutput>>>> ApiV1ResultAnalysisWqRiverStationStatisticPostAsyncWithHttpInfo (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput));
        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverWqStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverWqStatisticOutput>>> ApiV1ResultAnalysisWqRiverStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverWqStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverWqStatisticOutput>>>> ApiV1ResultAnalysisWqRiverStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverControlStatisticOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultRiverControlStatisticOutput>>> ApiV1ResultAnalysisWqRiverStructureControlStatisticGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverControlStatisticOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultRiverControlStatisticOutput>>>> ApiV1ResultAnalysisWqRiverStructureControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ModelResultRiverGatePumpStatisticOutput</returns>
        System.Threading.Tasks.Task<Result<ModelResultRiverGatePumpStatisticOutput>> ApiV1ResultAnalysisWqRiverStructureStatisticGetAsync (string sceanrioId = default(string));

        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps
        /// </summary>
        /// <remarks>
        /// 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultRiverGatePumpStatisticOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelResultRiverGatePumpStatisticOutput>>> ApiV1ResultAnalysisWqRiverStructureStatisticGetAsyncWithHttpInfo (string sceanrioId = default(string));
        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river
        /// </summary>
        /// <remarks>
        /// 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>Task of ModelResultWqTimeseriesOutput</returns>
        System.Threading.Tasks.Task<Result<ModelResultWqTimeseriesOutput>> ApiV1ResultAnalysisWqRiverTimeseriesPostAsync (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput));

        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river
        /// </summary>
        /// <remarks>
        /// 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultWqTimeseriesOutput)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<ModelResultWqTimeseriesOutput>>> ApiV1ResultAnalysisWqRiverTimeseriesPostAsyncWithHttpInfo (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput));
        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;ModelResultTimesOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ModelResultTimesOutput>>> ApiV1ResultAnalysisWqTimeinfoGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultTimesOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ModelResultTimesOutput>>>> ApiV1ResultAnalysisWqTimeinfoGetAsyncWithHttpInfo (string scenarioId = default(string));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWqResultAnalysisApi : IWqResultAnalysisApiSync, IWqResultAnalysisApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class WqResultAnalysisApi : IWqResultAnalysisApi
    {
        private DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="WqResultAnalysisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WqResultAnalysisApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WqResultAnalysisApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WqResultAnalysisApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WqResultAnalysisApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public WqResultAnalysisApi(DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ResultAnalysis.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WqResultAnalysisApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public WqResultAnalysisApi(DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient client,DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ResultAnalysis.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeWqOutput&gt;</returns>
        public Result<List<ModelResultPipeWqOutput>> ApiV1ResultAnalysisWqNetworkBasicAllGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeWqOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkBasicAllGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeWqOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipeWqOutput> >> ApiV1ResultAnalysisWqNetworkBasicAllGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipeWqOutput> >>("/api/v1/result-analysis/wq/network/basic-all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkBasicAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeWqOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipeWqOutput>>> ApiV1ResultAnalysisWqNetworkBasicAllGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeWqOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkBasicAllGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取管道基础水质结果数据 Get network basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeWqOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeWqOutput>>>> ApiV1ResultAnalysisWqNetworkBasicAllGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipeWqOutput>>>("/api/v1/result-analysis/wq/network/basic-all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkBasicAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>ModelResultPipeWQsOutput</returns>
        public Result<ModelResultPipeWQsOutput> ApiV1ResultAnalysisWqNetworkDynamicPost (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeWQsOutput>> localVarResponse = ApiV1ResultAnalysisWqNetworkDynamicPostWithHttpInfo(modelResultPipeWqInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeWQsOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< ModelResultPipeWQsOutput >> ApiV1ResultAnalysisWqNetworkDynamicPostWithHttpInfo (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = modelResultPipeWqInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< ModelResultPipeWQsOutput >>("/api/v1/result-analysis/wq/network/dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkDynamicPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>Task of ModelResultPipeWQsOutput</returns>
        public async System.Threading.Tasks.Task<Result<ModelResultPipeWQsOutput>> ApiV1ResultAnalysisWqNetworkDynamicPostAsync (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeWQsOutput>> localVarResponse = await ApiV1ResultAnalysisWqNetworkDynamicPostAsyncWithHttpInfo(modelResultPipeWqInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 管道水质动态结果 Get dynamic results of pipeline water quality 获取管道水质的动态变化时间序列结果 Get the dynamic change time series results of pipeline water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultPipeWqInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeWQsOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeWQsOutput>>> ApiV1ResultAnalysisWqNetworkDynamicPostAsyncWithHttpInfo (ModelResultPipeWqInput modelResultPipeWqInput = default(ModelResultPipeWqInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = modelResultPipeWqInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<ModelResultPipeWQsOutput>>("/api/v1/result-analysis/wq/network/dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkDynamicPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>BaseDynamicOutput</returns>
        public Result<BaseDynamicOutput> ApiV1ResultAnalysisWqNetworkNodeDynamicGet (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = ApiV1ResultAnalysisWqNetworkNodeDynamicGetWithHttpInfo(scenarioId, qualityCode, startTime, endTime, frequency);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>ApiResponse of BaseDynamicOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseDynamicOutput >> ApiV1ResultAnalysisWqNetworkNodeDynamicGetWithHttpInfo (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WqResultAnalysisApi->ApiV1ResultAnalysisWqNetworkNodeDynamicGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (qualityCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "QualityCode", qualityCode));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseDynamicOutput >>("/api/v1/result-analysis/wq/network/node-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkNodeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>Task of BaseDynamicOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseDynamicOutput>> ApiV1ResultAnalysisWqNetworkNodeDynamicGetAsync (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>> localVarResponse = await ApiV1ResultAnalysisWqNetworkNodeDynamicGetAsyncWithHttpInfo(scenarioId, qualityCode, startTime, endTime, frequency);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有节点的水质数据 Get water quality data of all nodes 获取所有节点时间范围内的指定水质项数据 Get the specified water quality item data within the time range of all nodes
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 (optional)</param>
        /// <param name="startTime">开始时间 start time (optional)</param>
        /// <param name="endTime">结束时间 end time (optional)</param>
        /// <param name="frequency">频率 frequency (optional)</param>
        /// <returns>Task of ApiResponse (BaseDynamicOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseDynamicOutput>>> ApiV1ResultAnalysisWqNetworkNodeDynamicGetAsyncWithHttpInfo (string scenarioId, string qualityCode = default(string), string startTime = default(string), string endTime = default(string), int? frequency = default(int?))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WqResultAnalysisApi->ApiV1ResultAnalysisWqNetworkNodeDynamicGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (qualityCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "QualityCode", qualityCode));
            }
            if (startTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "StartTime", startTime));
            }
            if (endTime != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "EndTime", endTime));
            }
            if (frequency != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Frequency", frequency));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseDynamicOutput>>("/api/v1/result-analysis/wq/network/node-dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkNodeDynamicGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>BaseTimeseriesOutput</returns>
        public Result<BaseTimeseriesOutput> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGet (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetWithHttpInfo(scenarioId, qualityCode, modelFeatureId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>ApiResponse of BaseTimeseriesOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< BaseTimeseriesOutput >> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetWithHttpInfo (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WqResultAnalysisApi->ApiV1ResultAnalysisWqNetworkNodeTimeseriesGet");

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (qualityCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "QualityCode", qualityCode));
            }
            if (modelFeatureId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelFeatureId", modelFeatureId));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< BaseTimeseriesOutput >>("/api/v1/result-analysis/wq/network/node-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkNodeTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>Task of BaseTimeseriesOutput</returns>
        public async System.Threading.Tasks.Task<Result<BaseTimeseriesOutput>> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetAsync (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>> localVarResponse = await ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetAsyncWithHttpInfo(scenarioId, qualityCode, modelFeatureId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取单个节点的水质数据 Get water quality data of a single node 获取单个节点指定水质项数据 Get the data of the specified water quality item of a single node
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案的ID scenario’s ID</param>
        /// <param name="qualityCode">水质项 water quality item (optional)</param>
        /// <param name="modelFeatureId">模型ID modelfeature id (optional)</param>
        /// <returns>Task of ApiResponse (BaseTimeseriesOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<BaseTimeseriesOutput>>> ApiV1ResultAnalysisWqNetworkNodeTimeseriesGetAsyncWithHttpInfo (string scenarioId, string qualityCode = default(string), string modelFeatureId = default(string))
        {
            // verify the required parameter 'scenarioId' is set
            if (scenarioId == null)
                throw new DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException(400, "Missing required parameter 'scenarioId' when calling WqResultAnalysisApi->ApiV1ResultAnalysisWqNetworkNodeTimeseriesGet");


            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (qualityCode != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "QualityCode", qualityCode));
            }
            if (modelFeatureId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ModelFeatureId", modelFeatureId));
            }
            localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<BaseTimeseriesOutput>>("/api/v1/result-analysis/wq/network/node-timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkNodeTimeseriesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>List&lt;ModelResultPipePumpStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipePumpStatisticOutput>> ApiV1ResultAnalysisWqNetworkPumpStatisticGet (string scenarioid = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipePumpStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkPumpStatisticGetWithHttpInfo(scenarioid);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipePumpStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipePumpStatisticOutput> >> ApiV1ResultAnalysisWqNetworkPumpStatisticGetWithHttpInfo (string scenarioid = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioid != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Scenarioid", scenarioid));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipePumpStatisticOutput> >>("/api/v1/result-analysis/wq/network/pump-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkPumpStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipePumpStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipePumpStatisticOutput>>> ApiV1ResultAnalysisWqNetworkPumpStatisticGetAsync (string scenarioid = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipePumpStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkPumpStatisticGetAsyncWithHttpInfo(scenarioid);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 管网泵的开启时长与补水总量 Get the starting time and total make-up water of the pipe network pump 根据方案ID，获取管网泵的开启时长与补水总量的统计信息 Get the statistical information of the starting time and total make-up water of the pipe network pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipePumpStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipePumpStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkPumpStatisticGetAsyncWithHttpInfo (string scenarioid = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioid != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Scenarioid", scenarioid));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipePumpStatisticOutput>>>("/api/v1/result-analysis/wq/network/pump-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkPumpStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipeSewagePlantAvgStatisticOutput> >> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipeSewagePlantAvgStatisticOutput> >>("/api/v1/result-analysis/wq/network/sewageplant-avg-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 管网污水处理厂平均浓度统计 statistics of average concentration of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂进水总量和水质平均浓度预估统计信息 Get the estimated statistics of total inflow and average concentration of water quality of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSewagePlantAvgStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipeSewagePlantAvgStatisticOutput>>>("/api/v1/result-analysis/wq/network/sewageplant-avg-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSewageplantAvgStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipeSewagePlantInstantStatisticOutput> >> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipeSewagePlantInstantStatisticOutput> >>("/api/v1/result-analysis/wq/network/sewageplant-instantaneous-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 管网污水处理厂瞬时浓度统计 Get instantaneous concentration statistics of pipe network sewage treatment plant 根据方案ID，获取管网污水处理厂瞬时水质浓度统计信息 Get statistical information of instantaneous water quality concentration of pipe network sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSewagePlantInstantStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipeSewagePlantInstantStatisticOutput>>>("/api/v1/result-analysis/wq/network/sewageplant-instantaneous-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSewageplantInstantaneousStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ModelResultPipeSewagePlantStatisticOutput</returns>
        public Result<ModelResultPipeSewagePlantStatisticOutput> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeSewagePlantStatisticOutput>> localVarResponse = ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeSewagePlantStatisticOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< ModelResultPipeSewagePlantStatisticOutput >> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ModelResultPipeSewagePlantStatisticOutput >>("/api/v1/result-analysis/wq/network/sewageplant-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSewageplantStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ModelResultPipeSewagePlantStatisticOutput</returns>
        public async System.Threading.Tasks.Task<Result<ModelResultPipeSewagePlantStatisticOutput>> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeSewagePlantStatisticOutput>> localVarResponse = await ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 污水处理厂运行统计 Get operation statistics of sewage treatment plant 根据方案ID，获取污水处理厂进水总量、水质平均浓度和瞬时浓度的统计信息 Get statistical information of total inflow, average water quality concentration and instantaneous concentration of sewage treatment plant of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeSewagePlantStatisticOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeSewagePlantStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSewageplantStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ModelResultPipeSewagePlantStatisticOutput>>("/api/v1/result-analysis/wq/network/sewageplant-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSewageplantStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipeSmartWellTotalLoadStatisticOutput> >> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipeSmartWellTotalLoadStatisticOutput> >>("/api/v1/result-analysis/wq/network/smartwell-load-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 智能分流排放负荷总量，包含分流井个数，水质项，水质的负荷量。 Get the total amount of intelligent shunt discharge load 根据方案ID，获取智能分流井个数，水质项，水质的负荷量的统计信息 Get statistical information on the number of intelligent diversion wells, water quality items and water quality load of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSmartWellTotalLoadStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipeSmartWellTotalLoadStatisticOutput>>>("/api/v1/result-analysis/wq/network/smartwell-load-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSmartwellLoadStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ModelResultPipeSmartWellOverFlowStatisticOutput</returns>
        public Result<ModelResultPipeSmartWellOverFlowStatisticOutput> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>> localVarResponse = ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeSmartWellOverFlowStatisticOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< ModelResultPipeSmartWellOverFlowStatisticOutput >> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ModelResultPipeSmartWellOverFlowStatisticOutput >>("/api/v1/result-analysis/wq/network/smartwell-overflow-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ModelResultPipeSmartWellOverFlowStatisticOutput</returns>
        public async System.Threading.Tasks.Task<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>> localVarResponse = await ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/v1/result-analysis/wq/network/smartwell-overflow-statistic 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeSmartWellOverFlowStatisticOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ModelResultPipeSmartWellOverFlowStatisticOutput>>("/api/v1/result-analysis/wq/network/smartwell-overflow-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSmartwellOverflowStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeSmartWellStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipeSmartWellStatisticOutput>> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSmartWellStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeSmartWellStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipeSmartWellStatisticOutput> >> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipeSmartWellStatisticOutput> >>("/api/v1/result-analysis/wq/network/smartwell-valve-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeSmartWellStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipeSmartWellStatisticOutput>>> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSmartWellStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 智能分流井运行统计，包含排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get statistics of intelligent diverter well valves 根据方案ID，获取排污阀、排河阀状态，排河阀累计开启时间，井仓液位 Get the status of drain valve and drain valve, cumulative opening time of drain valve, and sump liquid level of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeSmartWellStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeSmartWellStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipeSmartWellStatisticOutput>>>("/api/v1/result-analysis/wq/network/smartwell-valve-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkSmartwellValveStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeStorageStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipeStorageStatisticOutput>> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeStorageStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeStorageStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipeStorageStatisticOutput> >> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipeStorageStatisticOutput> >>("/api/v1/result-analysis/wq/network/storagepipe-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeStorageStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipeStorageStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeStorageStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 调蓄管道调蓄量统计 Get statistics of storage capacity of storage pipeline 根据方案ID，获取调蓄管道调蓄总量和出水量信息 Get the information of the total storage volume and water yield of the storage pipeline of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeStorageStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeStorageStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipeStorageStatisticOutput>>>("/api/v1/result-analysis/wq/network/storagepipe-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkStoragepipeStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipePumpVolumeStatisticOutput>> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipePumpVolumeStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipePumpVolumeStatisticOutput> >> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipePumpVolumeStatisticOutput> >>("/api/v1/result-analysis/wq/network/storagepump-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipePumpVolumeStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipePumpVolumeStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 管网调蓄泵站调蓄量统计 Get statistics of the storage capacity of the pipe network storage pump 根据方案ID，获取调蓄泵站调蓄量信息 Get the storage capacity information of the storage pump of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipePumpVolumeStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipePumpVolumeStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipePumpVolumeStatisticOutput>>>("/api/v1/result-analysis/wq/network/storagepump-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkStoragepumpStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ModelResultPipeDispatchStatisticOutput</returns>
        public Result<ModelResultPipeDispatchStatisticOutput> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGet (string scenarioid = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeDispatchStatisticOutput>> localVarResponse = ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetWithHttpInfo(scenarioid);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ApiResponse of ModelResultPipeDispatchStatisticOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< ModelResultPipeDispatchStatisticOutput >> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetWithHttpInfo (string scenarioid = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioid != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Scenarioid", scenarioid));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ModelResultPipeDispatchStatisticOutput >>("/api/v1/result-analysis/wq/network/structure-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkStructureControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ModelResultPipeDispatchStatisticOutput</returns>
        public async System.Threading.Tasks.Task<Result<ModelResultPipeDispatchStatisticOutput>> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetAsync (string scenarioid = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeDispatchStatisticOutput>> localVarResponse = await ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetAsyncWithHttpInfo(scenarioid);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长，泵的开启时长与补水总量 Get statistics of pipe network valves and pumps 根据方案ID，获取管网阀门的最大开度与开启时长，泵的开启时长与补水总量的统计信息 Get the statistics of the maximum opening and opening duration of pipe network valves, the opening duration of pumps and the total amount of make-up water of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultPipeDispatchStatisticOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultPipeDispatchStatisticOutput>>> ApiV1ResultAnalysisWqNetworkStructureControlStatisticGetAsyncWithHttpInfo (string scenarioid = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioid != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Scenarioid", scenarioid));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ModelResultPipeDispatchStatisticOutput>>("/api/v1/result-analysis/wq/network/structure-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkStructureControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>List&lt;ModelResultPipeValveStatisticOutput&gt;</returns>
        public Result<List<ModelResultPipeValveStatisticOutput>> ApiV1ResultAnalysisWqNetworkValveStatisticGet (string scenarioid = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeValveStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqNetworkValveStatisticGetWithHttpInfo(scenarioid);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultPipeValveStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultPipeValveStatisticOutput> >> ApiV1ResultAnalysisWqNetworkValveStatisticGetWithHttpInfo (string scenarioid = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioid != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Scenarioid", scenarioid));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultPipeValveStatisticOutput> >>("/api/v1/result-analysis/wq/network/valve-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkValveStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultPipeValveStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultPipeValveStatisticOutput>>> ApiV1ResultAnalysisWqNetworkValveStatisticGetAsync (string scenarioid = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeValveStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqNetworkValveStatisticGetAsyncWithHttpInfo(scenarioid);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 管网阀门的最大开度与开启时长 Get the maximum opening and opening duration of pipe network valves 根据方案ID，获取管网阀门的最大开度与开启时长统计信息 Get statistics of maximum opening and opening duration of pipe network valves of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioid"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultPipeValveStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultPipeValveStatisticOutput>>>> ApiV1ResultAnalysisWqNetworkValveStatisticGetAsyncWithHttpInfo (string scenarioid = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioid != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "Scenarioid", scenarioid));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultPipeValveStatisticOutput>>>("/api/v1/result-analysis/wq/network/valve-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqNetworkValveStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultBranchAffectedInfoOutput&gt;</returns>
        public Result<List<ModelResultBranchAffectedInfoOutput>> ApiV1ResultAnalysisWqRiverAffectedzoneGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultBranchAffectedInfoOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverAffectedzoneGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultBranchAffectedInfoOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultBranchAffectedInfoOutput> >> ApiV1ResultAnalysisWqRiverAffectedzoneGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultBranchAffectedInfoOutput> >>("/api/v1/result-analysis/wq/river/affectedzone", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverAffectedzoneGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultBranchAffectedInfoOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultBranchAffectedInfoOutput>>> ApiV1ResultAnalysisWqRiverAffectedzoneGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultBranchAffectedInfoOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverAffectedzoneGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 突发水污染事故，统计受影响的河道 Get the river affected by sudden water pollution accident 根据方案ID，获取突发水污染事故所有河道是否受影响 Get whether all rivers are affected by sudden water pollution accidents of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultBranchAffectedInfoOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultBranchAffectedInfoOutput>>>> ApiV1ResultAnalysisWqRiverAffectedzoneGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultBranchAffectedInfoOutput>>>("/api/v1/result-analysis/wq/river/affectedzone", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverAffectedzoneGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;ModelResultRiverWqOutput&gt;</returns>
        public Result<List<ModelResultRiverWqOutput>> ApiV1ResultAnalysisWqRiverBasicAllGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverWqOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverBasicAllGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverWqOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverWqOutput> >> ApiV1ResultAnalysisWqRiverBasicAllGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverWqOutput> >>("/api/v1/result-analysis/wq/river/basic-all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverBasicAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverWqOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverWqOutput>>> ApiV1ResultAnalysisWqRiverBasicAllGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverWqOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverBasicAllGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取河道基础水质结果数据 Get river basic water quality result 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverWqOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverWqOutput>>>> ApiV1ResultAnalysisWqRiverBasicAllGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverWqOutput>>>("/api/v1/result-analysis/wq/river/basic-all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverBasicAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverDamStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverDamStatisticOutput>> ApiV1ResultAnalysisWqRiverDamControlStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverDamStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverDamControlStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverDamStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverDamStatisticOutput> >> ApiV1ResultAnalysisWqRiverDamControlStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverDamStatisticOutput> >>("/api/v1/result-analysis/wq/river/dam-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverDamControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverDamStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverDamStatisticOutput>>> ApiV1ResultAnalysisWqRiverDamControlStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverDamStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverDamControlStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位 Get maximum and minimum control water levels of the dam 根据方案ID，获取坝的最高控制水位与最低控制水位 Get the maximum control water level and minimum control water level of the dam of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverDamStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverDamStatisticOutput>>>> ApiV1ResultAnalysisWqRiverDamControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverDamStatisticOutput>>>("/api/v1/result-analysis/wq/river/dam-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverDamControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>ModelResultRiverWQsOutput</returns>
        public Result<ModelResultRiverWQsOutput> ApiV1ResultAnalysisWqRiverDynamicPost (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultRiverWQsOutput>> localVarResponse = ApiV1ResultAnalysisWqRiverDynamicPostWithHttpInfo(modelResultRiverWqInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>ApiResponse of ModelResultRiverWQsOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< ModelResultRiverWQsOutput >> ApiV1ResultAnalysisWqRiverDynamicPostWithHttpInfo (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = modelResultRiverWqInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< ModelResultRiverWQsOutput >>("/api/v1/result-analysis/wq/river/dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverDynamicPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>Task of ModelResultRiverWQsOutput</returns>
        public async System.Threading.Tasks.Task<Result<ModelResultRiverWQsOutput>> ApiV1ResultAnalysisWqRiverDynamicPostAsync (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultRiverWQsOutput>> localVarResponse = await ApiV1ResultAnalysisWqRiverDynamicPostAsyncWithHttpInfo(modelResultRiverWqInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 河道水质动态结果 Get dynamic results of river water quality 获取河道水质的动态变化时间序列结果 Get the dynamic change time series results of river water quality.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultRiverWqInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultRiverWQsOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultRiverWQsOutput>>> ApiV1ResultAnalysisWqRiverDynamicPostAsyncWithHttpInfo (ModelResultRiverWqInput modelResultRiverWqInput = default(ModelResultRiverWqInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = modelResultRiverWqInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<ModelResultRiverWQsOutput>>("/api/v1/result-analysis/wq/river/dynamic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverDynamicPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverGateTotalStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverGateTotalStatisticOutput>> ApiV1ResultAnalysisWqRiverGateControlStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverGateTotalStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverGateControlStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverGateTotalStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverGateTotalStatisticOutput> >> ApiV1ResultAnalysisWqRiverGateControlStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverGateTotalStatisticOutput> >>("/api/v1/result-analysis/wq/river/gate-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverGateControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverGateTotalStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverGateTotalStatisticOutput>>> ApiV1ResultAnalysisWqRiverGateControlStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverGateTotalStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverGateControlStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 闸的总开停次数与开启时长 Get the total opening and closing times and opening duration of the brake 根据方案ID，获取闸的开停次数与开启时长 Get the opening and closing times and opening duration of the gate of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverGateTotalStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverGateTotalStatisticOutput>>>> ApiV1ResultAnalysisWqRiverGateControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverGateTotalStatisticOutput>>>("/api/v1/result-analysis/wq/river/gate-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverGateControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverGateStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverGateStatisticOutput>> ApiV1ResultAnalysisWqRiverGateStatisticGet (string sceanrioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverGateStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverGateStatisticGetWithHttpInfo(sceanrioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverGateStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverGateStatisticOutput> >> ApiV1ResultAnalysisWqRiverGateStatisticGetWithHttpInfo (string sceanrioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (sceanrioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "SceanrioId", sceanrioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverGateStatisticOutput> >>("/api/v1/result-analysis/wq/river/gate-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverGateStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverGateStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverGateStatisticOutput>>> ApiV1ResultAnalysisWqRiverGateStatisticGetAsync (string sceanrioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverGateStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverGateStatisticGetAsyncWithHttpInfo(sceanrioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 河网闸运行情况统计 Get statistics of river network gate 根据方案ID，获取河网闸运行情况统计，包含开关状态、开启时长补水量、补水时长、开启次数等信息 Get operation statistics of river network gate of a scenario, including switch status, opening duration, water supplement amount, water supplement duration, opening times and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverGateStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverGateStatisticOutput>>>> ApiV1ResultAnalysisWqRiverGateStatisticGetAsyncWithHttpInfo (string sceanrioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (sceanrioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "SceanrioId", sceanrioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverGateStatisticOutput>>>("/api/v1/result-analysis/wq/river/gate-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverGateStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverQualifiedStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverQualifiedStatisticOutput>> ApiV1ResultAnalysisWqRiverKeysectionStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverQualifiedStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverKeysectionStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverQualifiedStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverQualifiedStatisticOutput> >> ApiV1ResultAnalysisWqRiverKeysectionStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverQualifiedStatisticOutput> >>("/api/v1/result-analysis/wq/river/keysection-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverKeysectionStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverQualifiedStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverQualifiedStatisticOutput>>> ApiV1ResultAnalysisWqRiverKeysectionStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverQualifiedStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverKeysectionStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 河网断面达标率调度统计 Get the dispatching statistics of the standard rate of river network section 根据方案ID，获取河网断面达标率调度统计，包含考核断面、水质达标率列表等信息 Get the dispatching statistics of the standard rate of river network section of a scenario, including assessment section, water quality compliance rate list and other information.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverQualifiedStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverQualifiedStatisticOutput>>>> ApiV1ResultAnalysisWqRiverKeysectionStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverQualifiedStatisticOutput>>>("/api/v1/result-analysis/wq/river/keysection-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverKeysectionStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverPumpTotalStatisticOutput>> ApiV1ResultAnalysisWqRiverPumpControlStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverPumpTotalStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverPumpControlStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverPumpTotalStatisticOutput> >> ApiV1ResultAnalysisWqRiverPumpControlStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverPumpTotalStatisticOutput> >>("/api/v1/result-analysis/wq/river/pump-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverPumpControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverPumpTotalStatisticOutput>>> ApiV1ResultAnalysisWqRiverPumpControlStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverPumpTotalStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverPumpControlStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 泵的总补水时长和补水总量 Get total make-up water duration and total make-up water volume of the pump 根据方案ID，获取泵的补水时长与补水总量 Get the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverPumpTotalStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverPumpTotalStatisticOutput>>>> ApiV1ResultAnalysisWqRiverPumpControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverPumpTotalStatisticOutput>>>("/api/v1/result-analysis/wq/river/pump-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverPumpControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverPumpStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverPumpStatisticOutput>> ApiV1ResultAnalysisWqRiverPumpStatisticGet (string sceanrioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverPumpStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverPumpStatisticGetWithHttpInfo(sceanrioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverPumpStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverPumpStatisticOutput> >> ApiV1ResultAnalysisWqRiverPumpStatisticGetWithHttpInfo (string sceanrioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (sceanrioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "SceanrioId", sceanrioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverPumpStatisticOutput> >>("/api/v1/result-analysis/wq/river/pump-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverPumpStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverPumpStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverPumpStatisticOutput>>> ApiV1ResultAnalysisWqRiverPumpStatisticGetAsync (string sceanrioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverPumpStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverPumpStatisticGetAsyncWithHttpInfo(sceanrioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 河网泵运行情况统计 Get statistics of river network pump operation 根据方案ID，获取河网泵运行情况信息统计，包含补水量、补水时长等信息 Get the operation information statistics of river network pumps of a scenario， including the water make-up amount, water make-up duration and other information .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverPumpStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverPumpStatisticOutput>>>> ApiV1ResultAnalysisWqRiverPumpStatisticGetAsyncWithHttpInfo (string sceanrioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (sceanrioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "SceanrioId", sceanrioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverPumpStatisticOutput>>>("/api/v1/result-analysis/wq/river/pump-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverPumpStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>List&lt;ModelResultStationWqStatisticOutput&gt;</returns>
        public Result<List<ModelResultStationWqStatisticOutput>> ApiV1ResultAnalysisWqRiverStationStatisticPost (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultStationWqStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverStationStatisticPostWithHttpInfo(modelResultStationWqStatisticInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultStationWqStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultStationWqStatisticOutput> >> ApiV1ResultAnalysisWqRiverStationStatisticPostWithHttpInfo (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = modelResultStationWqStatisticInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< List<ModelResultStationWqStatisticOutput> >>("/api/v1/result-analysis/wq/river/station-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStationStatisticPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultStationWqStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultStationWqStatisticOutput>>> ApiV1ResultAnalysisWqRiverStationStatisticPostAsync (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultStationWqStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverStationStatisticPostAsyncWithHttpInfo(modelResultStationWqStatisticInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 突发水污染事故，统计某个计算点上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 Get information on sudden water pollution accidents 根据方案ID、水质项、考核断面，获取统计该断面上的污染物浓度变化曲线，以及污染物的到达时间、离开时间、最大浓度值 According to the scheme ID, water quality item and assessment section, obtain the pollutant concentration change curve on the section, as well as the arrival time, departure time and maximum concentration value of pollutants.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultStationWqStatisticInput"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultStationWqStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultStationWqStatisticOutput>>>> ApiV1ResultAnalysisWqRiverStationStatisticPostAsyncWithHttpInfo (ModelResultStationWqStatisticInput modelResultStationWqStatisticInput = default(ModelResultStationWqStatisticInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = modelResultStationWqStatisticInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<List<ModelResultStationWqStatisticOutput>>>("/api/v1/result-analysis/wq/river/station-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStationStatisticPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverWqStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverWqStatisticOutput>> ApiV1ResultAnalysisWqRiverStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverWqStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverWqStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverWqStatisticOutput> >> ApiV1ResultAnalysisWqRiverStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverWqStatisticOutput> >>("/api/v1/result-analysis/wq/river/statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverWqStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverWqStatisticOutput>>> ApiV1ResultAnalysisWqRiverStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverWqStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取河道水质预报统计 river water quality forecast statistics 根据方案ID，获取河道水质达标率、超标时长，水质项浓度最大值统计 Get the statistics of river water quality compliance rate, exceeding standard duration and maximum concentration of water quality items of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverWqStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverWqStatisticOutput>>>> ApiV1ResultAnalysisWqRiverStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverWqStatisticOutput>>>("/api/v1/result-analysis/wq/river/statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>List&lt;ModelResultRiverControlStatisticOutput&gt;</returns>
        public Result<List<ModelResultRiverControlStatisticOutput>> ApiV1ResultAnalysisWqRiverStructureControlStatisticGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverControlStatisticOutput>>> localVarResponse = ApiV1ResultAnalysisWqRiverStructureControlStatisticGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultRiverControlStatisticOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultRiverControlStatisticOutput> >> ApiV1ResultAnalysisWqRiverStructureControlStatisticGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultRiverControlStatisticOutput> >>("/api/v1/result-analysis/wq/river/structure-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStructureControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of List&lt;ModelResultRiverControlStatisticOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultRiverControlStatisticOutput>>> ApiV1ResultAnalysisWqRiverStructureControlStatisticGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverControlStatisticOutput>>> localVarResponse = await ApiV1ResultAnalysisWqRiverStructureControlStatisticGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get statistical information of dam, gate and pump of structures 根据方案ID，获取坝的最高控制水位与最低控制水位，闸的开停次数与开启时长，泵的补水时长与补水总量 Get the maximum control water level and minimum control water level of the dam, the opening and closing times and opening duration of the gate, the water make-up duration of the pump and the total water make-up of a scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultRiverControlStatisticOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultRiverControlStatisticOutput>>>> ApiV1ResultAnalysisWqRiverStructureControlStatisticGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultRiverControlStatisticOutput>>>("/api/v1/result-analysis/wq/river/structure-control-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStructureControlStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ModelResultRiverGatePumpStatisticOutput</returns>
        public Result<ModelResultRiverGatePumpStatisticOutput> ApiV1ResultAnalysisWqRiverStructureStatisticGet (string sceanrioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultRiverGatePumpStatisticOutput>> localVarResponse = ApiV1ResultAnalysisWqRiverStructureStatisticGetWithHttpInfo(sceanrioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>ApiResponse of ModelResultRiverGatePumpStatisticOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< ModelResultRiverGatePumpStatisticOutput >> ApiV1ResultAnalysisWqRiverStructureStatisticGetWithHttpInfo (string sceanrioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (sceanrioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "SceanrioId", sceanrioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< ModelResultRiverGatePumpStatisticOutput >>("/api/v1/result-analysis/wq/river/structure-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStructureStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ModelResultRiverGatePumpStatisticOutput</returns>
        public async System.Threading.Tasks.Task<Result<ModelResultRiverGatePumpStatisticOutput>> ApiV1ResultAnalysisWqRiverStructureStatisticGetAsync (string sceanrioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultRiverGatePumpStatisticOutput>> localVarResponse = await ApiV1ResultAnalysisWqRiverStructureStatisticGetAsyncWithHttpInfo(sceanrioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 河网闸门、泵运行预报统计 Get the operation forecast statistical information of river network gates and pumps 根据方案ID，获取河网闸门、泵站的运行统计信息，包含开启时长，开关状态、补水量等信息 Get the operation statistics of river network gates and pump stations, including the opening duration, switch status, water supplement amount and other information of a scenario .
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="sceanrioId"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultRiverGatePumpStatisticOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultRiverGatePumpStatisticOutput>>> ApiV1ResultAnalysisWqRiverStructureStatisticGetAsyncWithHttpInfo (string sceanrioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (sceanrioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "SceanrioId", sceanrioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<ModelResultRiverGatePumpStatisticOutput>>("/api/v1/result-analysis/wq/river/structure-statistic", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverStructureStatisticGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>ModelResultWqTimeseriesOutput</returns>
        public Result<ModelResultWqTimeseriesOutput> ApiV1ResultAnalysisWqRiverTimeseriesPost (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultWqTimeseriesOutput>> localVarResponse = ApiV1ResultAnalysisWqRiverTimeseriesPostWithHttpInfo(modelResultWqTimeseriesInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>ApiResponse of ModelResultWqTimeseriesOutput</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< ModelResultWqTimeseriesOutput >> ApiV1ResultAnalysisWqRiverTimeseriesPostWithHttpInfo (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = modelResultWqTimeseriesInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< ModelResultWqTimeseriesOutput >>("/api/v1/result-analysis/wq/river/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverTimeseriesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>Task of ModelResultWqTimeseriesOutput</returns>
        public async System.Threading.Tasks.Task<Result<ModelResultWqTimeseriesOutput>> ApiV1ResultAnalysisWqRiverTimeseriesPostAsync (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultWqTimeseriesOutput>> localVarResponse = await ApiV1ResultAnalysisWqRiverTimeseriesPostAsyncWithHttpInfo(modelResultWqTimeseriesInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取河道单点时间序列结果 Get single point time series results of river 获取方案中单个河道里程的时间序列数据 Get time series data of single river Chainage in the scenario.
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="modelResultWqTimeseriesInput"> (optional)</param>
        /// <returns>Task of ApiResponse (ModelResultWqTimeseriesOutput)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<ModelResultWqTimeseriesOutput>>> ApiV1ResultAnalysisWqRiverTimeseriesPostAsyncWithHttpInfo (ModelResultWqTimeseriesInput modelResultWqTimeseriesInput = default(ModelResultWqTimeseriesInput))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = modelResultWqTimeseriesInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<ModelResultWqTimeseriesOutput>>("/api/v1/result-analysis/wq/river/timeseries", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqRiverTimeseriesPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;ModelResultTimesOutput&gt;</returns>
        public Result<List<ModelResultTimesOutput>> ApiV1ResultAnalysisWqTimeinfoGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultTimesOutput>>> localVarResponse = ApiV1ResultAnalysisWqTimeinfoGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;ModelResultTimesOutput&gt;</returns>
        public DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result< List<ModelResultTimesOutput> >> ApiV1ResultAnalysisWqTimeinfoGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ModelResultTimesOutput> >>("/api/v1/result-analysis/wq/timeinfo", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqTimeinfoGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;ModelResultTimesOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ModelResultTimesOutput>>> ApiV1ResultAnalysisWqTimeinfoGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultTimesOutput>>> localVarResponse = await ApiV1ResultAnalysisWqTimeinfoGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取方案模型的时间信息 Get model time info of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ResultAnalysis.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;ModelResultTimesOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ResultAnalysis.Client.ApiResponse<Result<List<ModelResultTimesOutput>>>> ApiV1ResultAnalysisWqTimeinfoGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ResultAnalysis.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ResultAnalysis.Client.ClientUtils.ParameterToMultiMap("", "ScenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ModelResultTimesOutput>>>("/api/v1/result-analysis/wq/timeinfo", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ResultAnalysisWqTimeinfoGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
