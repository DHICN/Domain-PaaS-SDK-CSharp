/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.Identity.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.Identity.Model
{
    /// <summary>
    /// GetProNumSimLabIndexConfigOutput
    /// </summary>
    [DataContract]
    public partial class GetProNumSimLabIndexConfigOutput :  IEquatable<GetProNumSimLabIndexConfigOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetProNumSimLabIndexConfigOutput" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetProNumSimLabIndexConfigOutput() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetProNumSimLabIndexConfigOutput" /> class.
        /// </summary>
        /// <param name="code">指标名称 (required).</param>
        /// <param name="modelNodes">modelNodes (required).</param>
        /// <param name="outputFile">计算结果值,存入的文件名 (required).</param>
        /// <param name="remRateFile">去除率结果值,存入的文件名 (required).</param>
        /// <param name="id">id.</param>
        public GetProNumSimLabIndexConfigOutput(string code = default(string), ScenarioModelNodeDto modelNodes = default(ScenarioModelNodeDto), string outputFile = default(string), string remRateFile = default(string), Guid id = default(Guid))
        {
            // to ensure "code" is required (not null)
            this.Code = code ?? throw new ArgumentNullException("code is a required property for GetProNumSimLabIndexConfigOutput and cannot be null");
            // to ensure "modelNodes" is required (not null)
            this.ModelNodes = modelNodes ?? throw new ArgumentNullException("modelNodes is a required property for GetProNumSimLabIndexConfigOutput and cannot be null");
            // to ensure "outputFile" is required (not null)
            this.OutputFile = outputFile ?? throw new ArgumentNullException("outputFile is a required property for GetProNumSimLabIndexConfigOutput and cannot be null");
            // to ensure "remRateFile" is required (not null)
            this.RemRateFile = remRateFile ?? throw new ArgumentNullException("remRateFile is a required property for GetProNumSimLabIndexConfigOutput and cannot be null");
            this.Id = id;
        }
        
        /// <summary>
        /// 指标名称
        /// </summary>
        /// <value>指标名称</value>
        [DataMember(Name="code", EmitDefaultValue=false)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets ModelNodes
        /// </summary>
        [DataMember(Name="modelNodes", EmitDefaultValue=false)]
        public ScenarioModelNodeDto ModelNodes { get; set; }

        /// <summary>
        /// 计算结果值,存入的文件名
        /// </summary>
        /// <value>计算结果值,存入的文件名</value>
        [DataMember(Name="outputFile", EmitDefaultValue=false)]
        public string OutputFile { get; set; }

        /// <summary>
        /// 去除率结果值,存入的文件名
        /// </summary>
        /// <value>去除率结果值,存入的文件名</value>
        [DataMember(Name="remRateFile", EmitDefaultValue=false)]
        public string RemRateFile { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetProNumSimLabIndexConfigOutput {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  ModelNodes: ").Append(ModelNodes).Append("\n");
            sb.Append("  OutputFile: ").Append(OutputFile).Append("\n");
            sb.Append("  RemRateFile: ").Append(RemRateFile).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetProNumSimLabIndexConfigOutput);
        }

        /// <summary>
        /// Returns true if GetProNumSimLabIndexConfigOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of GetProNumSimLabIndexConfigOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetProNumSimLabIndexConfigOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.ModelNodes == input.ModelNodes ||
                    (this.ModelNodes != null &&
                    this.ModelNodes.Equals(input.ModelNodes))
                ) && 
                (
                    this.OutputFile == input.OutputFile ||
                    (this.OutputFile != null &&
                    this.OutputFile.Equals(input.OutputFile))
                ) && 
                (
                    this.RemRateFile == input.RemRateFile ||
                    (this.RemRateFile != null &&
                    this.RemRateFile.Equals(input.RemRateFile))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.ModelNodes != null)
                    hashCode = hashCode * 59 + this.ModelNodes.GetHashCode();
                if (this.OutputFile != null)
                    hashCode = hashCode * 59 + this.OutputFile.GetHashCode();
                if (this.RemRateFile != null)
                    hashCode = hashCode * 59 + this.RemRateFile.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
