/* 
 * wwtp-paas-main-bus-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.WWTP.MainBus.Client;
using DHICN.PAAS.SDK.WWTP.MainBus.Model;

namespace DHICN.PAAS.SDK.WWTP.MainBus.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISystemSettingApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiSystemSettingAddProcessedSettingsPost (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));

        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiSystemSettingAddProcessedSettingsPostWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));
        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiSystemSettingDeleteProcessedSettingsPost (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiSystemSettingDeleteProcessedSettingsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;ProcessedSettingDto&gt;</returns>
        Result<List<ProcessedSettingDto>> ApiSystemSettingGetAllProcessedSettingsGet ();

        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;ProcessedSettingDto&gt;</returns>
        ApiResponse<Result<List<ProcessedSettingDto>>> ApiSystemSettingGetAllProcessedSettingsGetWithHttpInfo ();
        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiSystemSettingUpdateProcessedSettingsPost (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));

        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiSystemSettingUpdateProcessedSettingsPostWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));
        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        Result<List<AlarmConfigInOut>> ApiV2SystemSettingInletAlarmConfigGet (string inlet = default(string), string modelName = default(string));

        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        ApiResponse<Result<List<AlarmConfigInOut>>> ApiV2SystemSettingInletAlarmConfigGetWithHttpInfo (string inlet = default(string), string modelName = default(string));
        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;InletParametersOutput&gt;</returns>
        Result<List<InletParametersOutput>> ApiV2SystemSettingInletParametersGet (string inlet = default(string), string modelName = default(string));

        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;InletParametersOutput&gt;</returns>
        ApiResponse<Result<List<InletParametersOutput>>> ApiV2SystemSettingInletParametersGetWithHttpInfo (string inlet = default(string), string modelName = default(string));
        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;WqSimulationIndicatorOutput&gt;</returns>
        Result<List<WqSimulationIndicatorOutput>> ApiV2SystemSettingWqSimulationIndicatorsGet ();

        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;WqSimulationIndicatorOutput&gt;</returns>
        ApiResponse<Result<List<WqSimulationIndicatorOutput>>> ApiV2SystemSettingWqSimulationIndicatorsGetWithHttpInfo ();
        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV2SystemSettingWqSimulationIndicatorsUpdatePost (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>));

        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV2SystemSettingWqSimulationIndicatorsUpdatePostWithHttpInfo (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISystemSettingApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiSystemSettingAddProcessedSettingsPostAsync (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));

        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiSystemSettingAddProcessedSettingsPostAsyncWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));
        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiSystemSettingDeleteProcessedSettingsPostAsync (List<Guid> requestBody = default(List<Guid>));

        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiSystemSettingDeleteProcessedSettingsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>));
        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;ProcessedSettingDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<ProcessedSettingDto>>> ApiSystemSettingGetAllProcessedSettingsGetAsync ();

        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;ProcessedSettingDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<ProcessedSettingDto>>>> ApiSystemSettingGetAllProcessedSettingsGetAsyncWithHttpInfo ();
        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiSystemSettingUpdateProcessedSettingsPostAsync (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));

        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiSystemSettingUpdateProcessedSettingsPostAsyncWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>));
        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiV2SystemSettingInletAlarmConfigGetAsync (string inlet = default(string), string modelName = default(string));

        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<AlarmConfigInOut>>>> ApiV2SystemSettingInletAlarmConfigGetAsyncWithHttpInfo (string inlet = default(string), string modelName = default(string));
        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;InletParametersOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<InletParametersOutput>>> ApiV2SystemSettingInletParametersGetAsync (string inlet = default(string), string modelName = default(string));

        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;InletParametersOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<InletParametersOutput>>>> ApiV2SystemSettingInletParametersGetAsyncWithHttpInfo (string inlet = default(string), string modelName = default(string));
        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;WqSimulationIndicatorOutput&gt;</returns>
        System.Threading.Tasks.Task<Result<List<WqSimulationIndicatorOutput>>> ApiV2SystemSettingWqSimulationIndicatorsGetAsync ();

        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;WqSimulationIndicatorOutput&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<WqSimulationIndicatorOutput>>>> ApiV2SystemSettingWqSimulationIndicatorsGetAsyncWithHttpInfo ();
        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV2SystemSettingWqSimulationIndicatorsUpdatePostAsync (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>));

        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV2SystemSettingWqSimulationIndicatorsUpdatePostAsyncWithHttpInfo (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISystemSettingApi : ISystemSettingApiSync, ISystemSettingApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class SystemSettingApi : ISystemSettingApi
    {
        private DHICN.PAAS.SDK.WWTP.MainBus.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="SystemSettingApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SystemSettingApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SystemSettingApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SystemSettingApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.WWTP.MainBus.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SystemSettingApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public SystemSettingApi(DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.WWTP.MainBus.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SystemSettingApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public SystemSettingApi(DHICN.PAAS.SDK.WWTP.MainBus.Client.ISynchronousClient client,DHICN.PAAS.SDK.WWTP.MainBus.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.WWTP.MainBus.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.WWTP.MainBus.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiSystemSettingAddProcessedSettingsPost (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiSystemSettingAddProcessedSettingsPostWithHttpInfo(processedSettingDto);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiSystemSettingAddProcessedSettingsPostWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = processedSettingDto;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/SystemSetting/AddProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingAddProcessedSettingsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiSystemSettingAddProcessedSettingsPostAsync (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiSystemSettingAddProcessedSettingsPostAsyncWithHttpInfo(processedSettingDto);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 增加所有清洗配置点位 Add processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiSystemSettingAddProcessedSettingsPostAsyncWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = processedSettingDto;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/SystemSetting/AddProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingAddProcessedSettingsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiSystemSettingDeleteProcessedSettingsPost (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiSystemSettingDeleteProcessedSettingsPostWithHttpInfo(requestBody);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiSystemSettingDeleteProcessedSettingsPostWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = requestBody;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/SystemSetting/DeleteProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingDeleteProcessedSettingsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiSystemSettingDeleteProcessedSettingsPostAsync (List<Guid> requestBody = default(List<Guid>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiSystemSettingDeleteProcessedSettingsPostAsyncWithHttpInfo(requestBody);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 根据ID删除清洗配置点位 Delete processed settings by ids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="requestBody"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiSystemSettingDeleteProcessedSettingsPostAsyncWithHttpInfo (List<Guid> requestBody = default(List<Guid>))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = requestBody;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/SystemSetting/DeleteProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingDeleteProcessedSettingsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;ProcessedSettingDto&gt;</returns>
        public Result<List<ProcessedSettingDto>> ApiSystemSettingGetAllProcessedSettingsGet ()
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<ProcessedSettingDto>>> localVarResponse = ApiSystemSettingGetAllProcessedSettingsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;ProcessedSettingDto&gt;</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< List<ProcessedSettingDto> >> ApiSystemSettingGetAllProcessedSettingsGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<ProcessedSettingDto> >>("/api/SystemSetting/GetAllProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingGetAllProcessedSettingsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;ProcessedSettingDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<ProcessedSettingDto>>> ApiSystemSettingGetAllProcessedSettingsGetAsync ()
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<ProcessedSettingDto>>> localVarResponse = await ApiSystemSettingGetAllProcessedSettingsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取所有清洗配置点位 Get all the processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;ProcessedSettingDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<ProcessedSettingDto>>>> ApiSystemSettingGetAllProcessedSettingsGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<ProcessedSettingDto>>>("/api/SystemSetting/GetAllProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingGetAllProcessedSettingsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiSystemSettingUpdateProcessedSettingsPost (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiSystemSettingUpdateProcessedSettingsPostWithHttpInfo(processedSettingDto);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiSystemSettingUpdateProcessedSettingsPostWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = processedSettingDto;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/SystemSetting/UpdateProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingUpdateProcessedSettingsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiSystemSettingUpdateProcessedSettingsPostAsync (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiSystemSettingUpdateProcessedSettingsPostAsyncWithHttpInfo(processedSettingDto);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 修改清洗配置点位 Update processed settings for data clean algorithm 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="processedSettingDto"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiSystemSettingUpdateProcessedSettingsPostAsyncWithHttpInfo (List<ProcessedSettingDto> processedSettingDto = default(List<ProcessedSettingDto>))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = processedSettingDto;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/SystemSetting/UpdateProcessedSettings", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiSystemSettingUpdateProcessedSettingsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;AlarmConfigInOut&gt;</returns>
        public Result<List<AlarmConfigInOut>> ApiV2SystemSettingInletAlarmConfigGet (string inlet = default(string), string modelName = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = ApiV2SystemSettingInletAlarmConfigGetWithHttpInfo(inlet, modelName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;AlarmConfigInOut&gt;</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< List<AlarmConfigInOut> >> ApiV2SystemSettingInletAlarmConfigGetWithHttpInfo (string inlet = default(string), string modelName = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "inlet", inlet));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "modelName", modelName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<AlarmConfigInOut> >>("/api/v2/system-setting/inlet-alarm-config", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingInletAlarmConfigGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;AlarmConfigInOut&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<AlarmConfigInOut>>> ApiV2SystemSettingInletAlarmConfigGetAsync (string inlet = default(string), string modelName = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<AlarmConfigInOut>>> localVarResponse = await ApiV2SystemSettingInletAlarmConfigGetAsyncWithHttpInfo(inlet, modelName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 进水水质预警配置查询 Get inlet water quality alarm config 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;AlarmConfigInOut&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<AlarmConfigInOut>>>> ApiV2SystemSettingInletAlarmConfigGetAsyncWithHttpInfo (string inlet = default(string), string modelName = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "inlet", inlet));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "modelName", modelName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<AlarmConfigInOut>>>("/api/v2/system-setting/inlet-alarm-config", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingInletAlarmConfigGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>List&lt;InletParametersOutput&gt;</returns>
        public Result<List<InletParametersOutput>> ApiV2SystemSettingInletParametersGet (string inlet = default(string), string modelName = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<InletParametersOutput>>> localVarResponse = ApiV2SystemSettingInletParametersGetWithHttpInfo(inlet, modelName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>ApiResponse of List&lt;InletParametersOutput&gt;</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< List<InletParametersOutput> >> ApiV2SystemSettingInletParametersGetWithHttpInfo (string inlet = default(string), string modelName = default(string))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "inlet", inlet));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "modelName", modelName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<InletParametersOutput> >>("/api/v2/system-setting/inlet-parameters", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingInletParametersGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of List&lt;InletParametersOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<InletParametersOutput>>> ApiV2SystemSettingInletParametersGetAsync (string inlet = default(string), string modelName = default(string))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<InletParametersOutput>>> localVarResponse = await ApiV2SystemSettingInletParametersGetAsyncWithHttpInfo(inlet, modelName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 进水水质组分比例设置查询 Get inlet water quality parameter settings 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="inlet">进水点 inlet (optional)</param>
        /// <param name="modelName">模板模型名称 template model name (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;InletParametersOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<InletParametersOutput>>>> ApiV2SystemSettingInletParametersGetAsyncWithHttpInfo (string inlet = default(string), string modelName = default(string))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (inlet != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "inlet", inlet));
            }
            if (modelName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.ParameterToMultiMap("", "modelName", modelName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<InletParametersOutput>>>("/api/v2/system-setting/inlet-parameters", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingInletParametersGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;WqSimulationIndicatorOutput&gt;</returns>
        public Result<List<WqSimulationIndicatorOutput>> ApiV2SystemSettingWqSimulationIndicatorsGet ()
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<WqSimulationIndicatorOutput>>> localVarResponse = ApiV2SystemSettingWqSimulationIndicatorsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;WqSimulationIndicatorOutput&gt;</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< List<WqSimulationIndicatorOutput> >> ApiV2SystemSettingWqSimulationIndicatorsGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<WqSimulationIndicatorOutput> >>("/api/v2/system-setting/wq-simulation-indicators", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingWqSimulationIndicatorsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;WqSimulationIndicatorOutput&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<WqSimulationIndicatorOutput>>> ApiV2SystemSettingWqSimulationIndicatorsGetAsync ()
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<WqSimulationIndicatorOutput>>> localVarResponse = await ApiV2SystemSettingWqSimulationIndicatorsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// 水质模拟预测点位配置查询 Get indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;WqSimulationIndicatorOutput&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<List<WqSimulationIndicatorOutput>>>> ApiV2SystemSettingWqSimulationIndicatorsGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<WqSimulationIndicatorOutput>>>("/api/v2/system-setting/wq-simulation-indicators", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingWqSimulationIndicatorsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV2SystemSettingWqSimulationIndicatorsUpdatePost (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = ApiV2SystemSettingWqSimulationIndicatorsUpdatePostWithHttpInfo(wqSimulationIndicatorInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result< Object >> ApiV2SystemSettingWqSimulationIndicatorsUpdatePostWithHttpInfo (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>))
        {
            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.WWTP.MainBus.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = wqSimulationIndicatorInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v2/system-setting/wq-simulation-indicators/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingWqSimulationIndicatorsUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV2SystemSettingWqSimulationIndicatorsUpdatePostAsync (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>))
        {
             DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV2SystemSettingWqSimulationIndicatorsUpdatePostAsyncWithHttpInfo(wqSimulationIndicatorInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 水质模拟预测点位配置更新 Update indicator config data for water quality simulation and analysis 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="wqSimulationIndicatorInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.WWTP.MainBus.Client.ApiResponse<Result<Object>>> ApiV2SystemSettingWqSimulationIndicatorsUpdatePostAsyncWithHttpInfo (List<WqSimulationIndicatorInput> wqSimulationIndicatorInput = default(List<WqSimulationIndicatorInput>))
        {

            DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.WWTP.MainBus.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = wqSimulationIndicatorInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v2/system-setting/wq-simulation-indicators/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV2SystemSettingWqSimulationIndicatorsUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
