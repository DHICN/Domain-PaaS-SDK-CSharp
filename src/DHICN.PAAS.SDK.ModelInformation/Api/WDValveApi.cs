/* 
 * model-information-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ModelInformation.Client;
using DHICN.PAAS.SDK.ModelInformation.Model;

namespace DHICN.PAAS.SDK.ModelInformation.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWDValveApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1ModelInformationDomainWdValveAddPost (AddValveInput addValveInput = default(AddValveInput));

        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1ModelInformationDomainWdValveAddPostWithHttpInfo (AddValveInput addValveInput = default(AddValveInput));
        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;QueryValveDto&gt;</returns>
        Result<List<QueryValveDto>> ApiV1ModelInformationDomainWdValveAllGet (string scenarioId = default(string));

        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryValveDto&gt;</returns>
        ApiResponse<Result<List<QueryValveDto>>> ApiV1ModelInformationDomainWdValveAllGetWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1ModelInformationDomainWdValveDeletePost (DeleteInput deleteInput = default(DeleteInput));

        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1ModelInformationDomainWdValveDeletePostWithHttpInfo (DeleteInput deleteInput = default(DeleteInput));
        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>List&lt;QueryValveDto&gt;</returns>
        Result<List<QueryValveDto>> ApiV1ModelInformationDomainWdValveListGet (string scenarioId = default(string), List<string> muids = default(List<string>));

        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryValveDto&gt;</returns>
        ApiResponse<Result<List<QueryValveDto>>> ApiV1ModelInformationDomainWdValveListGetWithHttpInfo (string scenarioId = default(string), List<string> muids = default(List<string>));
        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1ModelInformationDomainWdValveResavePost (AddValveInput addValveInput = default(AddValveInput));

        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1ModelInformationDomainWdValveResavePostWithHttpInfo (AddValveInput addValveInput = default(AddValveInput));
        /// <summary>
        /// 修改阀门要素信息 Update valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiV1ModelInformationDomainWdValveUpdatePost (UpdateValveInput updateValveInput = default(UpdateValveInput));

        /// <summary>
        /// 修改阀门要素信息 Update valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiV1ModelInformationDomainWdValveUpdatePostWithHttpInfo (UpdateValveInput updateValveInput = default(UpdateValveInput));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWDValveApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveAddPostAsync (AddValveInput addValveInput = default(AddValveInput));

        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveAddPostAsyncWithHttpInfo (AddValveInput addValveInput = default(AddValveInput));
        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;QueryValveDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryValveDto>>> ApiV1ModelInformationDomainWdValveAllGetAsync (string scenarioId = default(string));

        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryValveDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryValveDto>>>> ApiV1ModelInformationDomainWdValveAllGetAsyncWithHttpInfo (string scenarioId = default(string));
        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveDeletePostAsync (DeleteInput deleteInput = default(DeleteInput));

        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveDeletePostAsyncWithHttpInfo (DeleteInput deleteInput = default(DeleteInput));
        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>Task of List&lt;QueryValveDto&gt;</returns>
        System.Threading.Tasks.Task<Result<List<QueryValveDto>>> ApiV1ModelInformationDomainWdValveListGetAsync (string scenarioId = default(string), List<string> muids = default(List<string>));

        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryValveDto&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<QueryValveDto>>>> ApiV1ModelInformationDomainWdValveListGetAsyncWithHttpInfo (string scenarioId = default(string), List<string> muids = default(List<string>));
        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveResavePostAsync (AddValveInput addValveInput = default(AddValveInput));

        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveResavePostAsyncWithHttpInfo (AddValveInput addValveInput = default(AddValveInput));
        /// <summary>
        /// 修改阀门要素信息 Update valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveUpdatePostAsync (UpdateValveInput updateValveInput = default(UpdateValveInput));

        /// <summary>
        /// 修改阀门要素信息 Update valve information
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveUpdatePostAsyncWithHttpInfo (UpdateValveInput updateValveInput = default(UpdateValveInput));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IWDValveApi : IWDValveApiSync, IWDValveApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class WDValveApi : IWDValveApi
    {
        private DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="WDValveApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WDValveApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WDValveApi"/> class.
        /// </summary>
        /// <returns></returns>
        public WDValveApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ModelInformation.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WDValveApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public WDValveApi(DHICN.PAAS.SDK.ModelInformation.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ModelInformation.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ModelInformation.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="WDValveApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public WDValveApi(DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient client,DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ModelInformation.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ModelInformation.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ModelInformation.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1ModelInformationDomainWdValveAddPost (AddValveInput addValveInput = default(AddValveInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1ModelInformationDomainWdValveAddPostWithHttpInfo(addValveInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< Object >> ApiV1ModelInformationDomainWdValveAddPostWithHttpInfo (AddValveInput addValveInput = default(AddValveInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addValveInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/model-information/domain-wd/valve/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveAddPostAsync (AddValveInput addValveInput = default(AddValveInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1ModelInformationDomainWdValveAddPostAsyncWithHttpInfo(addValveInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 新增阀门要素编辑信息 Add valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveAddPostAsyncWithHttpInfo (AddValveInput addValveInput = default(AddValveInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addValveInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/model-information/domain-wd/valve/add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>List&lt;QueryValveDto&gt;</returns>
        public Result<List<QueryValveDto>> ApiV1ModelInformationDomainWdValveAllGet (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<QueryValveDto>>> localVarResponse = ApiV1ModelInformationDomainWdValveAllGetWithHttpInfo(scenarioId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryValveDto&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<QueryValveDto> >> ApiV1ModelInformationDomainWdValveAllGetWithHttpInfo (string scenarioId = default(string))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<QueryValveDto> >>("/api/v1/model-information/domain-wd/valve/all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of List&lt;QueryValveDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryValveDto>>> ApiV1ModelInformationDomainWdValveAllGetAsync (string scenarioId = default(string))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<QueryValveDto>>> localVarResponse = await ApiV1ModelInformationDomainWdValveAllGetAsyncWithHttpInfo(scenarioId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取指定方案下所有的阀门要素信息 Get all valves information of a scenario 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryValveDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<QueryValveDto>>>> ApiV1ModelInformationDomainWdValveAllGetAsyncWithHttpInfo (string scenarioId = default(string))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<QueryValveDto>>>("/api/v1/model-information/domain-wd/valve/all", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveAllGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1ModelInformationDomainWdValveDeletePost (DeleteInput deleteInput = default(DeleteInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1ModelInformationDomainWdValveDeletePostWithHttpInfo(deleteInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< Object >> ApiV1ModelInformationDomainWdValveDeletePostWithHttpInfo (DeleteInput deleteInput = default(DeleteInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = deleteInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/model-information/domain-wd/valve/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveDeletePostAsync (DeleteInput deleteInput = default(DeleteInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1ModelInformationDomainWdValveDeletePostAsyncWithHttpInfo(deleteInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 删除阀门要素编辑信息 Delete valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="deleteInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveDeletePostAsyncWithHttpInfo (DeleteInput deleteInput = default(DeleteInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = deleteInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/model-information/domain-wd/valve/delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>List&lt;QueryValveDto&gt;</returns>
        public Result<List<QueryValveDto>> ApiV1ModelInformationDomainWdValveListGet (string scenarioId = default(string), List<string> muids = default(List<string>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<QueryValveDto>>> localVarResponse = ApiV1ModelInformationDomainWdValveListGetWithHttpInfo(scenarioId, muids);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>ApiResponse of List&lt;QueryValveDto&gt;</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< List<QueryValveDto> >> ApiV1ModelInformationDomainWdValveListGetWithHttpInfo (string scenarioId = default(string), List<string> muids = default(List<string>))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (muids != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("multi", "muids", muids));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<QueryValveDto> >>("/api/v1/model-information/domain-wd/valve/list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>Task of List&lt;QueryValveDto&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<QueryValveDto>>> ApiV1ModelInformationDomainWdValveListGetAsync (string scenarioId = default(string), List<string> muids = default(List<string>))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<QueryValveDto>>> localVarResponse = await ApiV1ModelInformationDomainWdValveListGetAsyncWithHttpInfo(scenarioId, muids);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 获取指定方案下指定muids的阀门要素信息 Get valves information of a scenario by muids 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scenarioId">方案ID scenario id (optional)</param>
        /// <param name="muids">模型中阀门ID列表 valve muids (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;QueryValveDto&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<List<QueryValveDto>>>> ApiV1ModelInformationDomainWdValveListGetAsyncWithHttpInfo (string scenarioId = default(string), List<string> muids = default(List<string>))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (scenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("", "scenarioId", scenarioId));
            }
            if (muids != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.ParameterToMultiMap("multi", "muids", muids));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<QueryValveDto>>>("/api/v1/model-information/domain-wd/valve/list", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveListGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1ModelInformationDomainWdValveResavePost (AddValveInput addValveInput = default(AddValveInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1ModelInformationDomainWdValveResavePostWithHttpInfo(addValveInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< Object >> ApiV1ModelInformationDomainWdValveResavePostWithHttpInfo (AddValveInput addValveInput = default(AddValveInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addValveInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/model-information/domain-wd/valve/resave", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveResavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveResavePostAsync (AddValveInput addValveInput = default(AddValveInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1ModelInformationDomainWdValveResavePostAsyncWithHttpInfo(addValveInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 保存阀门要素信息，原有阀门信息会被删除 Save valve information, old valve information will be deleted 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addValveInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveResavePostAsyncWithHttpInfo (AddValveInput addValveInput = default(AddValveInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addValveInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/model-information/domain-wd/valve/resave", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveResavePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改阀门要素信息 Update valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiV1ModelInformationDomainWdValveUpdatePost (UpdateValveInput updateValveInput = default(UpdateValveInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = ApiV1ModelInformationDomainWdValveUpdatePostWithHttpInfo(updateValveInput);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 修改阀门要素信息 Update valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result< Object >> ApiV1ModelInformationDomainWdValveUpdatePostWithHttpInfo (UpdateValveInput updateValveInput = default(UpdateValveInput))
        {
            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ModelInformation.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = updateValveInput;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/v1/model-information/domain-wd/valve/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 修改阀门要素信息 Update valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiV1ModelInformationDomainWdValveUpdatePostAsync (UpdateValveInput updateValveInput = default(UpdateValveInput))
        {
             DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>> localVarResponse = await ApiV1ModelInformationDomainWdValveUpdatePostAsyncWithHttpInfo(updateValveInput);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 修改阀门要素信息 Update valve information 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ModelInformation.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateValveInput"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ModelInformation.Client.ApiResponse<Result<Object>>> ApiV1ModelInformationDomainWdValveUpdatePostAsyncWithHttpInfo (UpdateValveInput updateValveInput = default(UpdateValveInput))
        {

            DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ModelInformation.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = updateValveInput;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/v1/model-information/domain-wd/valve/update", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiV1ModelInformationDomainWdValveUpdatePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
