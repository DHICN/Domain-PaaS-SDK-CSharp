/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.IdentityServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.IdentityServiceSDK.Model
{
    /// <summary>
    /// GetUserPersOutput
    /// </summary>
    [DataContract]
    public partial class GetUserPersOutput :  IEquatable<GetUserPersOutput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetUserPersOutput" /> class.
        /// </summary>
        /// <param name="userInfo">userInfo.</param>
        /// <param name="userPers">用户权限信息 user permission information.</param>
        public GetUserPersOutput(UserInfo userInfo = default(UserInfo), List<UserMenuPer> userPers = default(List<UserMenuPer>))
        {
            this.UserInfo = userInfo;
            this.UserPers = userPers;
        }
        
        /// <summary>
        /// Gets or Sets UserInfo
        /// </summary>
        [DataMember(Name="userInfo", EmitDefaultValue=false)]
        public UserInfo UserInfo { get; set; }

        /// <summary>
        /// 用户权限信息 user permission information
        /// </summary>
        /// <value>用户权限信息 user permission information</value>
        [DataMember(Name="userPers", EmitDefaultValue=true)]
        public List<UserMenuPer> UserPers { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetUserPersOutput {\n");
            sb.Append("  UserInfo: ").Append(UserInfo).Append("\n");
            sb.Append("  UserPers: ").Append(UserPers).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetUserPersOutput);
        }

        /// <summary>
        /// Returns true if GetUserPersOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of GetUserPersOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetUserPersOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.UserInfo == input.UserInfo ||
                    (this.UserInfo != null &&
                    this.UserInfo.Equals(input.UserInfo))
                ) && 
                (
                    this.UserPers == input.UserPers ||
                    this.UserPers != null &&
                    input.UserPers != null &&
                    this.UserPers.SequenceEqual(input.UserPers)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserInfo != null)
                    hashCode = hashCode * 59 + this.UserInfo.GetHashCode();
                if (this.UserPers != null)
                    hashCode = hashCode * 59 + this.UserPers.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
