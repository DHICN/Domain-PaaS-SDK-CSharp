/* 
 * wwtp-paas-infrastructure-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.WWTPPaasInfrastructureServiceSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.WWTPPaasInfrastructureServiceSDK.Model
{
    /// <summary>
    /// TemplateOutput
    /// </summary>
    [DataContract]
    public partial class TemplateOutput :  IEquatable<TemplateOutput>, IValidatableObject
    {
        /// <summary>
        /// 模型类型，分为WWTP, WWTPOptim, WWTPMLab model type including WWTP, WWTPOptim, WWTPMLab
        /// </summary>
        /// <value>模型类型，分为WWTP, WWTPOptim, WWTPMLab model type including WWTP, WWTPOptim, WWTPMLab</value>
        public enum ModelTypeEnum
        {
            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2,

            /// <summary>
            /// Enum NUMBER_3 for value: 3
            /// </summary>
            NUMBER_3 = 3

        }

        /// <summary>
        /// 模型类型，分为WWTP, WWTPOptim, WWTPMLab model type including WWTP, WWTPOptim, WWTPMLab
        /// </summary>
        /// <value>模型类型，分为WWTP, WWTPOptim, WWTPMLab model type including WWTP, WWTPOptim, WWTPMLab</value>
        [DataMember(Name="modelType", EmitDefaultValue=false)]
        public ModelTypeEnum? ModelType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateOutput" /> class.
        /// </summary>
        /// <param name="id">模板方案ID template scenario id.</param>
        /// <param name="modelName">模型名称（即模板方案名称） model name as well as template scenario name.</param>
        /// <param name="modelType">模型类型，分为WWTP, WWTPOptim, WWTPMLab model type including WWTP, WWTPOptim, WWTPMLab.</param>
        /// <param name="modelFileName">模板文件名称（压缩文件） compressed model file name.</param>
        /// <param name="createTime">创建时间 create time.</param>
        public TemplateOutput(Guid id = default(Guid), string modelName = default(string), ModelTypeEnum? modelType = default(ModelTypeEnum?), string modelFileName = default(string), DateTime createTime = default(DateTime))
        {
            this.Id = id;
            this.ModelName = modelName;
            this.ModelType = modelType;
            this.ModelFileName = modelFileName;
            this.CreateTime = createTime;
        }
        
        /// <summary>
        /// 模板方案ID template scenario id
        /// </summary>
        /// <value>模板方案ID template scenario id</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid Id { get; set; }

        /// <summary>
        /// 模型名称（即模板方案名称） model name as well as template scenario name
        /// </summary>
        /// <value>模型名称（即模板方案名称） model name as well as template scenario name</value>
        [DataMember(Name="modelName", EmitDefaultValue=true)]
        public string ModelName { get; set; }

        /// <summary>
        /// 模板文件名称（压缩文件） compressed model file name
        /// </summary>
        /// <value>模板文件名称（压缩文件） compressed model file name</value>
        [DataMember(Name="modelFileName", EmitDefaultValue=true)]
        public string ModelFileName { get; set; }

        /// <summary>
        /// 创建时间 create time
        /// </summary>
        /// <value>创建时间 create time</value>
        [DataMember(Name="createTime", EmitDefaultValue=false)]
        public DateTime CreateTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TemplateOutput {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ModelName: ").Append(ModelName).Append("\n");
            sb.Append("  ModelType: ").Append(ModelType).Append("\n");
            sb.Append("  ModelFileName: ").Append(ModelFileName).Append("\n");
            sb.Append("  CreateTime: ").Append(CreateTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TemplateOutput);
        }

        /// <summary>
        /// Returns true if TemplateOutput instances are equal
        /// </summary>
        /// <param name="input">Instance of TemplateOutput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TemplateOutput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ModelName == input.ModelName ||
                    (this.ModelName != null &&
                    this.ModelName.Equals(input.ModelName))
                ) && 
                (
                    this.ModelType == input.ModelType ||
                    this.ModelType.Equals(input.ModelType)
                ) && 
                (
                    this.ModelFileName == input.ModelFileName ||
                    (this.ModelFileName != null &&
                    this.ModelFileName.Equals(input.ModelFileName))
                ) && 
                (
                    this.CreateTime == input.CreateTime ||
                    (this.CreateTime != null &&
                    this.CreateTime.Equals(input.CreateTime))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.ModelName != null)
                    hashCode = hashCode * 59 + this.ModelName.GetHashCode();
                hashCode = hashCode * 59 + this.ModelType.GetHashCode();
                if (this.ModelFileName != null)
                    hashCode = hashCode * 59 + this.ModelFileName.GetHashCode();
                if (this.CreateTime != null)
                    hashCode = hashCode * 59 + this.CreateTime.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
