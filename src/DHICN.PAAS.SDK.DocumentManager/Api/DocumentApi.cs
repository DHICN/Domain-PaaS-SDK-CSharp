/* 
 * document-manager-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.DocumentManager.Client;
using DHICN.PAAS.SDK.DocumentManager.Model;

namespace DHICN.PAAS.SDK.DocumentManager.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDocumentApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// /api/Generic/Document/AddDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>string</returns>
        Result<string> ApiGenericDocumentAddDocumentPost (AddDocumentModel addDocumentModel = default(AddDocumentModel));

        /// <summary>
        /// /api/Generic/Document/AddDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        ApiResponse<Result<string>> ApiGenericDocumentAddDocumentPostWithHttpInfo (AddDocumentModel addDocumentModel = default(AddDocumentModel));
        /// <summary>
        /// /api/Generic/Document/AddGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentAddGroupByPathPost (string body = default(string));

        /// <summary>
        /// /api/Generic/Document/AddGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentAddGroupByPathPostWithHttpInfo (string body = default(string));
        /// <summary>
        /// /api/Generic/Document/AddGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentAddGroupPost (AddingGroupModel addingGroupModel = default(AddingGroupModel));

        /// <summary>
        /// /api/Generic/Document/AddGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentAddGroupPostWithHttpInfo (AddingGroupModel addingGroupModel = default(AddingGroupModel));
        /// <summary>
        /// /api/Generic/Document/AddItem
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>string</returns>
        Result<string> ApiGenericDocumentAddItemPost (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel));

        /// <summary>
        /// /api/Generic/Document/AddItem
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        ApiResponse<Result<string>> ApiGenericDocumentAddItemPostWithHttpInfo (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel));
        /// <summary>
        /// /api/Generic/Document/Add
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>Document</returns>
        Result<Document> ApiGenericDocumentAddPost (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel));

        /// <summary>
        /// /api/Generic/Document/Add
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        ApiResponse<Result<Document>> ApiGenericDocumentAddPostWithHttpInfo (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel));
        /// <summary>
        /// /api/Generic/Document/Change
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiGenericDocumentChangePost (Document document = default(Document));

        /// <summary>
        /// /api/Generic/Document/Change
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiGenericDocumentChangePostWithHttpInfo (Document document = default(Document));
        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentCopyGroupByPathPost (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel));

        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentCopyGroupByPathPostWithHttpInfo (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel));
        /// <summary>
        /// /api/Generic/Document/CopyGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentCopyGroupPost (CopyGroupModel copyGroupModel = default(CopyGroupModel));

        /// <summary>
        /// /api/Generic/Document/CopyGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentCopyGroupPostWithHttpInfo (CopyGroupModel copyGroupModel = default(CopyGroupModel));
        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiGenericDocumentDeleteAssociatedGroupsPost (Guid? body = default(Guid?));

        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiGenericDocumentDeleteAssociatedGroupsPostWithHttpInfo (Guid? body = default(Guid?));
        /// <summary>
        /// /api/Generic/Document/DeleteByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiGenericDocumentDeleteByPathPost (string body = default(string));

        /// <summary>
        /// /api/Generic/Document/DeleteByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiGenericDocumentDeleteByPathPostWithHttpInfo (string body = default(string));
        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiGenericDocumentDeleteGroupByPathPost (string body = default(string));

        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiGenericDocumentDeleteGroupByPathPostWithHttpInfo (string body = default(string));
        /// <summary>
        /// /api/Generic/Document/DeleteGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiGenericDocumentDeleteGroupPost (Guid? body = default(Guid?));

        /// <summary>
        /// /api/Generic/Document/DeleteGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiGenericDocumentDeleteGroupPostWithHttpInfo (Guid? body = default(Guid?));
        /// <summary>
        /// /api/Generic/Document/Delete
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        Result<bool> ApiGenericDocumentDeletePost (Guid? body = default(Guid?));

        /// <summary>
        /// /api/Generic/Document/Delete
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        ApiResponse<Result<bool>> ApiGenericDocumentDeletePostWithHttpInfo (Guid? body = default(Guid?));
        /// <summary>
        /// /api/Generic/Document/FindGroupByName
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        Result<List<Group>> ApiGenericDocumentFindGroupByNameGet (string searchingName = default(string));

        /// <summary>
        /// /api/Generic/Document/FindGroupByName
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        ApiResponse<Result<List<Group>>> ApiGenericDocumentFindGroupByNameGetWithHttpInfo (string searchingName = default(string));
        /// <summary>
        /// /api/Generic/Document/FindSubPathes
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>List&lt;string&gt;</returns>
        Result<List<string>> ApiGenericDocumentFindSubPathesGet (string parentPath = default(string), string searchPattern = default(string));

        /// <summary>
        /// /api/Generic/Document/FindSubPathes
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>ApiResponse of List&lt;string&gt;</returns>
        ApiResponse<Result<List<string>>> ApiGenericDocumentFindSubPathesGetWithHttpInfo (string parentPath = default(string), string searchPattern = default(string));
        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        Result<List<Group>> ApiGenericDocumentGetAllSubGroupsGet (string parentGroupId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        ApiResponse<Result<List<Group>>> ApiGenericDocumentGetAllSubGroupsGetWithHttpInfo (string parentGroupId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>List&lt;DocumentGroupItem&gt;</returns>
        Result<List<DocumentGroupItem>> ApiGenericDocumentGetAssociatedGroupItemsGet (string itemId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;DocumentGroupItem&gt;</returns>
        ApiResponse<Result<List<DocumentGroupItem>>> ApiGenericDocumentGetAssociatedGroupItemsGetWithHttpInfo (string itemId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>HttpResponseMessage</returns>
        Result<HttpResponseMessage> ApiGenericDocumentGetDocumentByPathGet (string path = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>ApiResponse of HttpResponseMessage</returns>
        ApiResponse<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentByPathGetWithHttpInfo (string path = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>HttpResponseMessage</returns>
        Result<HttpResponseMessage> ApiGenericDocumentGetDocumentGet (string documentId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>ApiResponse of HttpResponseMessage</returns>
        ApiResponse<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentGetWithHttpInfo (string documentId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Document</returns>
        Result<Document> ApiGenericDocumentGetDocumentInfoByPathGet (string path = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        ApiResponse<Result<Document>> ApiGenericDocumentGetDocumentInfoByPathGetWithHttpInfo (string path = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>HttpResponseMessage</returns>
        Result<HttpResponseMessage> ApiGenericDocumentGetDocumentWithMediaTypeGet (string id = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>ApiResponse of HttpResponseMessage</returns>
        ApiResponse<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentWithMediaTypeGetWithHttpInfo (string id = default(string));
        /// <summary>
        /// /api/Generic/Document/GetGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentGetGroupByPathGet (string groupPath = default(string));

        /// <summary>
        /// /api/Generic/Document/GetGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentGetGroupByPathGetWithHttpInfo (string groupPath = default(string));
        /// <summary>
        /// /api/Generic/Document/GetInfo
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Document</returns>
        Result<Document> ApiGenericDocumentGetInfoGet (string groupPath = default(string));

        /// <summary>
        /// /api/Generic/Document/GetInfo
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        ApiResponse<Result<Document>> ApiGenericDocumentGetInfoGetWithHttpInfo (string groupPath = default(string));
        /// <summary>
        /// /api/Generic/Document/GetItemByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Document</returns>
        Result<Document> ApiGenericDocumentGetItemByPathGet (string path = default(string));

        /// <summary>
        /// /api/Generic/Document/GetItemByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        ApiResponse<Result<Document>> ApiGenericDocumentGetItemByPathGetWithHttpInfo (string path = default(string));
        /// <summary>
        /// /api/Generic/Document/GetParentGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentGetParentGroupGet (string groupId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetParentGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentGetParentGroupGetWithHttpInfo (string groupId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        Result<List<Group>> ApiGenericDocumentGetSubGroupsByPathGet (string parentGroupPath = default(string));

        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        ApiResponse<Result<List<Group>>> ApiGenericDocumentGetSubGroupsByPathGetWithHttpInfo (string parentGroupPath = default(string));
        /// <summary>
        /// /api/Generic/Document/GetSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        Result<List<Group>> ApiGenericDocumentGetSubGroupsGet (string parentGroupId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        ApiResponse<Result<List<Group>>> ApiGenericDocumentGetSubGroupsGetWithHttpInfo (string parentGroupId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>List&lt;Document&gt;</returns>
        Result<List<Document>> ApiGenericDocumentGetSubItemsByGroupGet (string parentId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Document&gt;</returns>
        ApiResponse<Result<List<Document>>> ApiGenericDocumentGetSubItemsByGroupGetWithHttpInfo (string parentId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetTopGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;Group&gt;</returns>
        Result<List<Group>> ApiGenericDocumentGetTopGroupsGet ();

        /// <summary>
        /// /api/Generic/Document/GetTopGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        ApiResponse<Result<List<Group>>> ApiGenericDocumentGetTopGroupsGetWithHttpInfo ();
        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentMoveGroupByPathPost (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel));

        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentMoveGroupByPathPostWithHttpInfo (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel));
        /// <summary>
        /// /api/Generic/Document/MoveGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentMoveGroupPost (MoveGroupModel moveGroupModel = default(MoveGroupModel));

        /// <summary>
        /// /api/Generic/Document/MoveGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentMoveGroupPostWithHttpInfo (MoveGroupModel moveGroupModel = default(MoveGroupModel));
        /// <summary>
        /// /api/Generic/Document/RenameGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        Result<Group> ApiGenericDocumentRenameGroupPost (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel));

        /// <summary>
        /// /api/Generic/Document/RenameGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        ApiResponse<Result<Group>> ApiGenericDocumentRenameGroupPostWithHttpInfo (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel));
        /// <summary>
        /// /api/Generic/Document/Upload
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Dictionary&lt;string, Guid&gt;</returns>
        Result<Dictionary<string, Guid>> ApiGenericDocumentUploadPost ();

        /// <summary>
        /// /api/Generic/Document/Upload
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Dictionary&lt;string, Guid&gt;</returns>
        ApiResponse<Result<Dictionary<string, Guid>>> ApiGenericDocumentUploadPostWithHttpInfo ();
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDocumentApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// /api/Generic/Document/AddDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>Task of string</returns>
        System.Threading.Tasks.Task<Result<string>> ApiGenericDocumentAddDocumentPostAsync (AddDocumentModel addDocumentModel = default(AddDocumentModel));

        /// <summary>
        /// /api/Generic/Document/AddDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<string>>> ApiGenericDocumentAddDocumentPostAsyncWithHttpInfo (AddDocumentModel addDocumentModel = default(AddDocumentModel));
        /// <summary>
        /// /api/Generic/Document/AddGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentAddGroupByPathPostAsync (string body = default(string));

        /// <summary>
        /// /api/Generic/Document/AddGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentAddGroupByPathPostAsyncWithHttpInfo (string body = default(string));
        /// <summary>
        /// /api/Generic/Document/AddGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentAddGroupPostAsync (AddingGroupModel addingGroupModel = default(AddingGroupModel));

        /// <summary>
        /// /api/Generic/Document/AddGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentAddGroupPostAsyncWithHttpInfo (AddingGroupModel addingGroupModel = default(AddingGroupModel));
        /// <summary>
        /// /api/Generic/Document/AddItem
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>Task of string</returns>
        System.Threading.Tasks.Task<Result<string>> ApiGenericDocumentAddItemPostAsync (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel));

        /// <summary>
        /// /api/Generic/Document/AddItem
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<string>>> ApiGenericDocumentAddItemPostAsyncWithHttpInfo (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel));
        /// <summary>
        /// /api/Generic/Document/Add
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>Task of Document</returns>
        System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentAddPostAsync (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel));

        /// <summary>
        /// /api/Generic/Document/Add
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Document>>> ApiGenericDocumentAddPostAsyncWithHttpInfo (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel));
        /// <summary>
        /// /api/Generic/Document/Change
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentChangePostAsync (Document document = default(Document));

        /// <summary>
        /// /api/Generic/Document/Change
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiGenericDocumentChangePostAsyncWithHttpInfo (Document document = default(Document));
        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentCopyGroupByPathPostAsync (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel));

        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentCopyGroupByPathPostAsyncWithHttpInfo (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel));
        /// <summary>
        /// /api/Generic/Document/CopyGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentCopyGroupPostAsync (CopyGroupModel copyGroupModel = default(CopyGroupModel));

        /// <summary>
        /// /api/Generic/Document/CopyGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentCopyGroupPostAsyncWithHttpInfo (CopyGroupModel copyGroupModel = default(CopyGroupModel));
        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteAssociatedGroupsPostAsync (Guid? body = default(Guid?));

        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiGenericDocumentDeleteAssociatedGroupsPostAsyncWithHttpInfo (Guid? body = default(Guid?));
        /// <summary>
        /// /api/Generic/Document/DeleteByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteByPathPostAsync (string body = default(string));

        /// <summary>
        /// /api/Generic/Document/DeleteByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiGenericDocumentDeleteByPathPostAsyncWithHttpInfo (string body = default(string));
        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteGroupByPathPostAsync (string body = default(string));

        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiGenericDocumentDeleteGroupByPathPostAsyncWithHttpInfo (string body = default(string));
        /// <summary>
        /// /api/Generic/Document/DeleteGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteGroupPostAsync (Guid? body = default(Guid?));

        /// <summary>
        /// /api/Generic/Document/DeleteGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiGenericDocumentDeleteGroupPostAsyncWithHttpInfo (Guid? body = default(Guid?));
        /// <summary>
        /// /api/Generic/Document/Delete
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeletePostAsync (Guid? body = default(Guid?));

        /// <summary>
        /// /api/Generic/Document/Delete
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<bool>>> ApiGenericDocumentDeletePostAsyncWithHttpInfo (Guid? body = default(Guid?));
        /// <summary>
        /// /api/Generic/Document/FindGroupByName
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentFindGroupByNameGetAsync (string searchingName = default(string));

        /// <summary>
        /// /api/Generic/Document/FindGroupByName
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Group>>>> ApiGenericDocumentFindGroupByNameGetAsyncWithHttpInfo (string searchingName = default(string));
        /// <summary>
        /// /api/Generic/Document/FindSubPathes
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>Task of List&lt;string&gt;</returns>
        System.Threading.Tasks.Task<Result<List<string>>> ApiGenericDocumentFindSubPathesGetAsync (string parentPath = default(string), string searchPattern = default(string));

        /// <summary>
        /// /api/Generic/Document/FindSubPathes
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;string&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<string>>>> ApiGenericDocumentFindSubPathesGetAsyncWithHttpInfo (string parentPath = default(string), string searchPattern = default(string));
        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetAllSubGroupsGetAsync (string parentGroupId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetAllSubGroupsGetAsyncWithHttpInfo (string parentGroupId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>Task of List&lt;DocumentGroupItem&gt;</returns>
        System.Threading.Tasks.Task<Result<List<DocumentGroupItem>>> ApiGenericDocumentGetAssociatedGroupItemsGetAsync (string itemId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DocumentGroupItem&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<DocumentGroupItem>>>> ApiGenericDocumentGetAssociatedGroupItemsGetAsyncWithHttpInfo (string itemId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of HttpResponseMessage</returns>
        System.Threading.Tasks.Task<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentByPathGetAsync (string path = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of ApiResponse (HttpResponseMessage)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<HttpResponseMessage>>> ApiGenericDocumentGetDocumentByPathGetAsyncWithHttpInfo (string path = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>Task of HttpResponseMessage</returns>
        System.Threading.Tasks.Task<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentGetAsync (string documentId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocument
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>Task of ApiResponse (HttpResponseMessage)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<HttpResponseMessage>>> ApiGenericDocumentGetDocumentGetAsyncWithHttpInfo (string documentId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of Document</returns>
        System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentGetDocumentInfoByPathGetAsync (string path = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Document>>> ApiGenericDocumentGetDocumentInfoByPathGetAsyncWithHttpInfo (string path = default(string));
        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>Task of HttpResponseMessage</returns>
        System.Threading.Tasks.Task<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentWithMediaTypeGetAsync (string id = default(string));

        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>Task of ApiResponse (HttpResponseMessage)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<HttpResponseMessage>>> ApiGenericDocumentGetDocumentWithMediaTypeGetAsyncWithHttpInfo (string id = default(string));
        /// <summary>
        /// /api/Generic/Document/GetGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentGetGroupByPathGetAsync (string groupPath = default(string));

        /// <summary>
        /// /api/Generic/Document/GetGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentGetGroupByPathGetAsyncWithHttpInfo (string groupPath = default(string));
        /// <summary>
        /// /api/Generic/Document/GetInfo
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of Document</returns>
        System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentGetInfoGetAsync (string groupPath = default(string));

        /// <summary>
        /// /api/Generic/Document/GetInfo
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Document>>> ApiGenericDocumentGetInfoGetAsyncWithHttpInfo (string groupPath = default(string));
        /// <summary>
        /// /api/Generic/Document/GetItemByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of Document</returns>
        System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentGetItemByPathGetAsync (string path = default(string));

        /// <summary>
        /// /api/Generic/Document/GetItemByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Document>>> ApiGenericDocumentGetItemByPathGetAsyncWithHttpInfo (string path = default(string));
        /// <summary>
        /// /api/Generic/Document/GetParentGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentGetParentGroupGetAsync (string groupId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetParentGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentGetParentGroupGetAsyncWithHttpInfo (string groupId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetSubGroupsByPathGetAsync (string parentGroupPath = default(string));

        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetSubGroupsByPathGetAsyncWithHttpInfo (string parentGroupPath = default(string));
        /// <summary>
        /// /api/Generic/Document/GetSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetSubGroupsGetAsync (string parentGroupId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetSubGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetSubGroupsGetAsyncWithHttpInfo (string parentGroupId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>Task of List&lt;Document&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Document>>> ApiGenericDocumentGetSubItemsByGroupGetAsync (string parentId = default(string));

        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Document&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Document>>>> ApiGenericDocumentGetSubItemsByGroupGetAsyncWithHttpInfo (string parentId = default(string));
        /// <summary>
        /// /api/Generic/Document/GetTopGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;Group&gt;</returns>
        System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetTopGroupsGetAsync ();

        /// <summary>
        /// /api/Generic/Document/GetTopGroups
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetTopGroupsGetAsyncWithHttpInfo ();
        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentMoveGroupByPathPostAsync (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel));

        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentMoveGroupByPathPostAsyncWithHttpInfo (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel));
        /// <summary>
        /// /api/Generic/Document/MoveGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentMoveGroupPostAsync (MoveGroupModel moveGroupModel = default(MoveGroupModel));

        /// <summary>
        /// /api/Generic/Document/MoveGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentMoveGroupPostAsyncWithHttpInfo (MoveGroupModel moveGroupModel = default(MoveGroupModel));
        /// <summary>
        /// /api/Generic/Document/RenameGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentRenameGroupPostAsync (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel));

        /// <summary>
        /// /api/Generic/Document/RenameGroup
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Group>>> ApiGenericDocumentRenameGroupPostAsyncWithHttpInfo (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel));
        /// <summary>
        /// /api/Generic/Document/Upload
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Dictionary&lt;string, Guid&gt;</returns>
        System.Threading.Tasks.Task<Result<Dictionary<string, Guid>>> ApiGenericDocumentUploadPostAsync ();

        /// <summary>
        /// /api/Generic/Document/Upload
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, Guid&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Dictionary<string, Guid>>>> ApiGenericDocumentUploadPostAsyncWithHttpInfo ();
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDocumentApi : IDocumentApiSync, IDocumentApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DocumentApi : IDocumentApi
    {
        private DHICN.PAAS.SDK.DocumentManager.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DocumentApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DocumentApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.DocumentManager.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.DocumentManager.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.DocumentManager.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.DocumentManager.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.DocumentManager.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.DocumentManager.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DocumentApi(DHICN.PAAS.SDK.DocumentManager.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.DocumentManager.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.DocumentManager.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.DocumentManager.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.DocumentManager.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.DocumentManager.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public DocumentApi(DHICN.PAAS.SDK.DocumentManager.Client.ISynchronousClient client,DHICN.PAAS.SDK.DocumentManager.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.DocumentManager.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.DocumentManager.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.DocumentManager.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.DocumentManager.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.DocumentManager.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.DocumentManager.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// /api/Generic/Document/AddDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>string</returns>
        public Result<string> ApiGenericDocumentAddDocumentPost (AddDocumentModel addDocumentModel = default(AddDocumentModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<string>> localVarResponse = ApiGenericDocumentAddDocumentPostWithHttpInfo(addDocumentModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/AddDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< string >> ApiGenericDocumentAddDocumentPostWithHttpInfo (AddDocumentModel addDocumentModel = default(AddDocumentModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addDocumentModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< string >>("/api/Generic/Document/AddDocument", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddDocumentPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/AddDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>Task of string</returns>
        public async System.Threading.Tasks.Task<Result<string>> ApiGenericDocumentAddDocumentPostAsync (AddDocumentModel addDocumentModel = default(AddDocumentModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<string>> localVarResponse = await ApiGenericDocumentAddDocumentPostAsyncWithHttpInfo(addDocumentModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/AddDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addDocumentModel"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<string>>> ApiGenericDocumentAddDocumentPostAsyncWithHttpInfo (AddDocumentModel addDocumentModel = default(AddDocumentModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addDocumentModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<string>>("/api/Generic/Document/AddDocument", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddDocumentPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/AddGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentAddGroupByPathPost (string body = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentAddGroupByPathPostWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/AddGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentAddGroupByPathPostWithHttpInfo (string body = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = body;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Group >>("/api/Generic/Document/AddGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/AddGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentAddGroupByPathPostAsync (string body = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentAddGroupByPathPostAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/AddGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentAddGroupByPathPostAsyncWithHttpInfo (string body = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = body;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Group>>("/api/Generic/Document/AddGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/AddGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentAddGroupPost (AddingGroupModel addingGroupModel = default(AddingGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentAddGroupPostWithHttpInfo(addingGroupModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/AddGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentAddGroupPostWithHttpInfo (AddingGroupModel addingGroupModel = default(AddingGroupModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addingGroupModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Group >>("/api/Generic/Document/AddGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/AddGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentAddGroupPostAsync (AddingGroupModel addingGroupModel = default(AddingGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentAddGroupPostAsyncWithHttpInfo(addingGroupModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/AddGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentAddGroupPostAsyncWithHttpInfo (AddingGroupModel addingGroupModel = default(AddingGroupModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addingGroupModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Group>>("/api/Generic/Document/AddGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/AddItem 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>string</returns>
        public Result<string> ApiGenericDocumentAddItemPost (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<string>> localVarResponse = ApiGenericDocumentAddItemPostWithHttpInfo(documentAddingItemModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/AddItem 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>ApiResponse of string</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< string >> ApiGenericDocumentAddItemPostWithHttpInfo (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = documentAddingItemModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< string >>("/api/Generic/Document/AddItem", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddItemPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/AddItem 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>Task of string</returns>
        public async System.Threading.Tasks.Task<Result<string>> ApiGenericDocumentAddItemPostAsync (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<string>> localVarResponse = await ApiGenericDocumentAddItemPostAsyncWithHttpInfo(documentAddingItemModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/AddItem 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentAddingItemModel"> (optional)</param>
        /// <returns>Task of ApiResponse (string)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<string>>> ApiGenericDocumentAddItemPostAsyncWithHttpInfo (DocumentAddingItemModel documentAddingItemModel = default(DocumentAddingItemModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = documentAddingItemModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<string>>("/api/Generic/Document/AddItem", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddItemPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Add 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>Document</returns>
        public Result<Document> ApiGenericDocumentAddPost (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = ApiGenericDocumentAddPostWithHttpInfo(addingDocumentModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/Add 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Document >> ApiGenericDocumentAddPostWithHttpInfo (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = addingDocumentModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Document >>("/api/Generic/Document/Add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Add 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>Task of Document</returns>
        public async System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentAddPostAsync (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = await ApiGenericDocumentAddPostAsyncWithHttpInfo(addingDocumentModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/Add 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addingDocumentModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>>> ApiGenericDocumentAddPostAsyncWithHttpInfo (AddingDocumentModel addingDocumentModel = default(AddingDocumentModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = addingDocumentModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Document>>("/api/Generic/Document/Add", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentAddPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Change 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiGenericDocumentChangePost (Document document = default(Document))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiGenericDocumentChangePostWithHttpInfo(document);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/Change 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< bool >> ApiGenericDocumentChangePostWithHttpInfo (Document document = default(Document))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = document;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/Generic/Document/Change", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentChangePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Change 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentChangePostAsync (Document document = default(Document))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiGenericDocumentChangePostAsyncWithHttpInfo(document);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/Change 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="document"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>>> ApiGenericDocumentChangePostAsyncWithHttpInfo (Document document = default(Document))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = document;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/Generic/Document/Change", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentChangePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentCopyGroupByPathPost (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentCopyGroupByPathPostWithHttpInfo(copyGroupByPathModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentCopyGroupByPathPostWithHttpInfo (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = copyGroupByPathModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Group >>("/api/Generic/Document/CopyGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentCopyGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentCopyGroupByPathPostAsync (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentCopyGroupByPathPostAsyncWithHttpInfo(copyGroupByPathModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/CopyGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupByPathModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentCopyGroupByPathPostAsyncWithHttpInfo (CopyGroupByPathModel copyGroupByPathModel = default(CopyGroupByPathModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = copyGroupByPathModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Group>>("/api/Generic/Document/CopyGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentCopyGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/CopyGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentCopyGroupPost (CopyGroupModel copyGroupModel = default(CopyGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentCopyGroupPostWithHttpInfo(copyGroupModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/CopyGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentCopyGroupPostWithHttpInfo (CopyGroupModel copyGroupModel = default(CopyGroupModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = copyGroupModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Group >>("/api/Generic/Document/CopyGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentCopyGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/CopyGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentCopyGroupPostAsync (CopyGroupModel copyGroupModel = default(CopyGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentCopyGroupPostAsyncWithHttpInfo(copyGroupModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/CopyGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="copyGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentCopyGroupPostAsyncWithHttpInfo (CopyGroupModel copyGroupModel = default(CopyGroupModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = copyGroupModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Group>>("/api/Generic/Document/CopyGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentCopyGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiGenericDocumentDeleteAssociatedGroupsPost (Guid? body = default(Guid?))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiGenericDocumentDeleteAssociatedGroupsPostWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< bool >> ApiGenericDocumentDeleteAssociatedGroupsPostWithHttpInfo (Guid? body = default(Guid?))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = body;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/Generic/Document/DeleteAssociatedGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteAssociatedGroupsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteAssociatedGroupsPostAsync (Guid? body = default(Guid?))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiGenericDocumentDeleteAssociatedGroupsPostAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/DeleteAssociatedGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>>> ApiGenericDocumentDeleteAssociatedGroupsPostAsyncWithHttpInfo (Guid? body = default(Guid?))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = body;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/Generic/Document/DeleteAssociatedGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteAssociatedGroupsPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiGenericDocumentDeleteByPathPost (string body = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiGenericDocumentDeleteByPathPostWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< bool >> ApiGenericDocumentDeleteByPathPostWithHttpInfo (string body = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = body;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/Generic/Document/DeleteByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteByPathPostAsync (string body = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiGenericDocumentDeleteByPathPostAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/DeleteByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>>> ApiGenericDocumentDeleteByPathPostAsyncWithHttpInfo (string body = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = body;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/Generic/Document/DeleteByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiGenericDocumentDeleteGroupByPathPost (string body = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiGenericDocumentDeleteGroupByPathPostWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< bool >> ApiGenericDocumentDeleteGroupByPathPostWithHttpInfo (string body = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = body;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/Generic/Document/DeleteGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteGroupByPathPostAsync (string body = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiGenericDocumentDeleteGroupByPathPostAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>>> ApiGenericDocumentDeleteGroupByPathPostAsyncWithHttpInfo (string body = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = body;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/Generic/Document/DeleteGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiGenericDocumentDeleteGroupPost (Guid? body = default(Guid?))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiGenericDocumentDeleteGroupPostWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< bool >> ApiGenericDocumentDeleteGroupPostWithHttpInfo (Guid? body = default(Guid?))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = body;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/Generic/Document/DeleteGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeleteGroupPostAsync (Guid? body = default(Guid?))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiGenericDocumentDeleteGroupPostAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/DeleteGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>>> ApiGenericDocumentDeleteGroupPostAsyncWithHttpInfo (Guid? body = default(Guid?))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = body;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/Generic/Document/DeleteGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeleteGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Delete 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>bool</returns>
        public Result<bool> ApiGenericDocumentDeletePost (Guid? body = default(Guid?))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = ApiGenericDocumentDeletePostWithHttpInfo(body);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/Delete 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>ApiResponse of bool</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< bool >> ApiGenericDocumentDeletePostWithHttpInfo (Guid? body = default(Guid?))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = body;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< bool >>("/api/Generic/Document/Delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Delete 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of bool</returns>
        public async System.Threading.Tasks.Task<Result<bool>> ApiGenericDocumentDeletePostAsync (Guid? body = default(Guid?))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>> localVarResponse = await ApiGenericDocumentDeletePostAsyncWithHttpInfo(body);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/Delete 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"> (optional)</param>
        /// <returns>Task of ApiResponse (bool)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<bool>>> ApiGenericDocumentDeletePostAsyncWithHttpInfo (Guid? body = default(Guid?))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = body;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<bool>>("/api/Generic/Document/Delete", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentDeletePost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/FindGroupByName 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        public Result<List<Group>> ApiGenericDocumentFindGroupByNameGet (string searchingName = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = ApiGenericDocumentFindGroupByNameGetWithHttpInfo(searchingName);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/FindGroupByName 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<Group> >> ApiGenericDocumentFindGroupByNameGetWithHttpInfo (string searchingName = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (searchingName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "searchingName", searchingName));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Group> >>("/api/Generic/Document/FindGroupByName", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentFindGroupByNameGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/FindGroupByName 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentFindGroupByNameGetAsync (string searchingName = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = await ApiGenericDocumentFindGroupByNameGetAsyncWithHttpInfo(searchingName);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/FindGroupByName 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="searchingName"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>>> ApiGenericDocumentFindGroupByNameGetAsyncWithHttpInfo (string searchingName = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (searchingName != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "searchingName", searchingName));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Group>>>("/api/Generic/Document/FindGroupByName", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentFindGroupByNameGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/FindSubPathes 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>List&lt;string&gt;</returns>
        public Result<List<string>> ApiGenericDocumentFindSubPathesGet (string parentPath = default(string), string searchPattern = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<string>>> localVarResponse = ApiGenericDocumentFindSubPathesGetWithHttpInfo(parentPath, searchPattern);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/FindSubPathes 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>ApiResponse of List&lt;string&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<string> >> ApiGenericDocumentFindSubPathesGetWithHttpInfo (string parentPath = default(string), string searchPattern = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (parentPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentPath", parentPath));
            }
            if (searchPattern != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "searchPattern", searchPattern));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<string> >>("/api/Generic/Document/FindSubPathes", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentFindSubPathesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/FindSubPathes 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>Task of List&lt;string&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<string>>> ApiGenericDocumentFindSubPathesGetAsync (string parentPath = default(string), string searchPattern = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<string>>> localVarResponse = await ApiGenericDocumentFindSubPathesGetAsyncWithHttpInfo(parentPath, searchPattern);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/FindSubPathes 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentPath"> (optional)</param>
        /// <param name="searchPattern"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;string&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<string>>>> ApiGenericDocumentFindSubPathesGetAsyncWithHttpInfo (string parentPath = default(string), string searchPattern = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (parentPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentPath", parentPath));
            }
            if (searchPattern != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "searchPattern", searchPattern));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<string>>>("/api/Generic/Document/FindSubPathes", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentFindSubPathesGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        public Result<List<Group>> ApiGenericDocumentGetAllSubGroupsGet (string parentGroupId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = ApiGenericDocumentGetAllSubGroupsGetWithHttpInfo(parentGroupId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<Group> >> ApiGenericDocumentGetAllSubGroupsGetWithHttpInfo (string parentGroupId = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (parentGroupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentGroupId", parentGroupId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Group> >>("/api/Generic/Document/GetAllSubGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetAllSubGroupsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetAllSubGroupsGetAsync (string parentGroupId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = await ApiGenericDocumentGetAllSubGroupsGetAsyncWithHttpInfo(parentGroupId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetAllSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetAllSubGroupsGetAsyncWithHttpInfo (string parentGroupId = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (parentGroupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentGroupId", parentGroupId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Group>>>("/api/Generic/Document/GetAllSubGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetAllSubGroupsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>List&lt;DocumentGroupItem&gt;</returns>
        public Result<List<DocumentGroupItem>> ApiGenericDocumentGetAssociatedGroupItemsGet (string itemId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<DocumentGroupItem>>> localVarResponse = ApiGenericDocumentGetAssociatedGroupItemsGetWithHttpInfo(itemId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;DocumentGroupItem&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<DocumentGroupItem> >> ApiGenericDocumentGetAssociatedGroupItemsGetWithHttpInfo (string itemId = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (itemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "itemId", itemId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<DocumentGroupItem> >>("/api/Generic/Document/GetAssociatedGroupItems", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetAssociatedGroupItemsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>Task of List&lt;DocumentGroupItem&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<DocumentGroupItem>>> ApiGenericDocumentGetAssociatedGroupItemsGetAsync (string itemId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<DocumentGroupItem>>> localVarResponse = await ApiGenericDocumentGetAssociatedGroupItemsGetAsyncWithHttpInfo(itemId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetAssociatedGroupItems 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="itemId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;DocumentGroupItem&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<DocumentGroupItem>>>> ApiGenericDocumentGetAssociatedGroupItemsGetAsyncWithHttpInfo (string itemId = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (itemId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "itemId", itemId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<DocumentGroupItem>>>("/api/Generic/Document/GetAssociatedGroupItems", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetAssociatedGroupItemsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>HttpResponseMessage</returns>
        public Result<HttpResponseMessage> ApiGenericDocumentGetDocumentByPathGet (string path = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>> localVarResponse = ApiGenericDocumentGetDocumentByPathGetWithHttpInfo(path);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>ApiResponse of HttpResponseMessage</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< HttpResponseMessage >> ApiGenericDocumentGetDocumentByPathGetWithHttpInfo (string path = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (path != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "path", path));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< HttpResponseMessage >>("/api/Generic/Document/GetDocumentByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of HttpResponseMessage</returns>
        public async System.Threading.Tasks.Task<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentByPathGetAsync (string path = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>> localVarResponse = await ApiGenericDocumentGetDocumentByPathGetAsyncWithHttpInfo(path);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of ApiResponse (HttpResponseMessage)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>>> ApiGenericDocumentGetDocumentByPathGetAsyncWithHttpInfo (string path = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (path != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "path", path));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<HttpResponseMessage>>("/api/Generic/Document/GetDocumentByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>HttpResponseMessage</returns>
        public Result<HttpResponseMessage> ApiGenericDocumentGetDocumentGet (string documentId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>> localVarResponse = ApiGenericDocumentGetDocumentGetWithHttpInfo(documentId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>ApiResponse of HttpResponseMessage</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< HttpResponseMessage >> ApiGenericDocumentGetDocumentGetWithHttpInfo (string documentId = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (documentId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "documentId", documentId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< HttpResponseMessage >>("/api/Generic/Document/GetDocument", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>Task of HttpResponseMessage</returns>
        public async System.Threading.Tasks.Task<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentGetAsync (string documentId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>> localVarResponse = await ApiGenericDocumentGetDocumentGetAsyncWithHttpInfo(documentId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetDocument 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="documentId"> (optional)</param>
        /// <returns>Task of ApiResponse (HttpResponseMessage)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>>> ApiGenericDocumentGetDocumentGetAsyncWithHttpInfo (string documentId = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (documentId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "documentId", documentId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<HttpResponseMessage>>("/api/Generic/Document/GetDocument", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Document</returns>
        public Result<Document> ApiGenericDocumentGetDocumentInfoByPathGet (string path = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = ApiGenericDocumentGetDocumentInfoByPathGetWithHttpInfo(path);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Document >> ApiGenericDocumentGetDocumentInfoByPathGetWithHttpInfo (string path = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (path != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "path", path));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Document >>("/api/Generic/Document/GetDocumentInfoByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentInfoByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of Document</returns>
        public async System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentGetDocumentInfoByPathGetAsync (string path = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = await ApiGenericDocumentGetDocumentInfoByPathGetAsyncWithHttpInfo(path);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentInfoByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>>> ApiGenericDocumentGetDocumentInfoByPathGetAsyncWithHttpInfo (string path = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (path != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "path", path));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Document>>("/api/Generic/Document/GetDocumentInfoByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentInfoByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>HttpResponseMessage</returns>
        public Result<HttpResponseMessage> ApiGenericDocumentGetDocumentWithMediaTypeGet (string id = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>> localVarResponse = ApiGenericDocumentGetDocumentWithMediaTypeGetWithHttpInfo(id);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>ApiResponse of HttpResponseMessage</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< HttpResponseMessage >> ApiGenericDocumentGetDocumentWithMediaTypeGetWithHttpInfo (string id = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (id != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< HttpResponseMessage >>("/api/Generic/Document/GetDocumentWithMediaType", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentWithMediaTypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>Task of HttpResponseMessage</returns>
        public async System.Threading.Tasks.Task<Result<HttpResponseMessage>> ApiGenericDocumentGetDocumentWithMediaTypeGetAsync (string id = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>> localVarResponse = await ApiGenericDocumentGetDocumentWithMediaTypeGetAsyncWithHttpInfo(id);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetDocumentWithMediaType 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id"> (optional)</param>
        /// <returns>Task of ApiResponse (HttpResponseMessage)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<HttpResponseMessage>>> ApiGenericDocumentGetDocumentWithMediaTypeGetAsyncWithHttpInfo (string id = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (id != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<HttpResponseMessage>>("/api/Generic/Document/GetDocumentWithMediaType", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetDocumentWithMediaTypeGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentGetGroupByPathGet (string groupPath = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentGetGroupByPathGetWithHttpInfo(groupPath);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentGetGroupByPathGetWithHttpInfo (string groupPath = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (groupPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "groupPath", groupPath));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Group >>("/api/Generic/Document/GetGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetGroupByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentGetGroupByPathGetAsync (string groupPath = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentGetGroupByPathGetAsyncWithHttpInfo(groupPath);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentGetGroupByPathGetAsyncWithHttpInfo (string groupPath = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (groupPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "groupPath", groupPath));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Group>>("/api/Generic/Document/GetGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetGroupByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetInfo 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Document</returns>
        public Result<Document> ApiGenericDocumentGetInfoGet (string groupPath = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = ApiGenericDocumentGetInfoGetWithHttpInfo(groupPath);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetInfo 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Document >> ApiGenericDocumentGetInfoGetWithHttpInfo (string groupPath = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (groupPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "groupPath", groupPath));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Document >>("/api/Generic/Document/GetInfo", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetInfoGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetInfo 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of Document</returns>
        public async System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentGetInfoGetAsync (string groupPath = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = await ApiGenericDocumentGetInfoGetAsyncWithHttpInfo(groupPath);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetInfo 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupPath"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>>> ApiGenericDocumentGetInfoGetAsyncWithHttpInfo (string groupPath = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (groupPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "groupPath", groupPath));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Document>>("/api/Generic/Document/GetInfo", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetInfoGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetItemByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Document</returns>
        public Result<Document> ApiGenericDocumentGetItemByPathGet (string path = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = ApiGenericDocumentGetItemByPathGetWithHttpInfo(path);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetItemByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>ApiResponse of Document</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Document >> ApiGenericDocumentGetItemByPathGetWithHttpInfo (string path = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (path != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "path", path));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Document >>("/api/Generic/Document/GetItemByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetItemByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetItemByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of Document</returns>
        public async System.Threading.Tasks.Task<Result<Document>> ApiGenericDocumentGetItemByPathGetAsync (string path = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>> localVarResponse = await ApiGenericDocumentGetItemByPathGetAsyncWithHttpInfo(path);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetItemByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="path"> (optional)</param>
        /// <returns>Task of ApiResponse (Document)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Document>>> ApiGenericDocumentGetItemByPathGetAsyncWithHttpInfo (string path = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (path != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "path", path));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Document>>("/api/Generic/Document/GetItemByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetItemByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetParentGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentGetParentGroupGet (string groupId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentGetParentGroupGetWithHttpInfo(groupId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetParentGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentGetParentGroupGetWithHttpInfo (string groupId = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (groupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "groupId", groupId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< Group >>("/api/Generic/Document/GetParentGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetParentGroupGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetParentGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentGetParentGroupGetAsync (string groupId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentGetParentGroupGetAsyncWithHttpInfo(groupId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetParentGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="groupId"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentGetParentGroupGetAsyncWithHttpInfo (string groupId = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (groupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "groupId", groupId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<Group>>("/api/Generic/Document/GetParentGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetParentGroupGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        public Result<List<Group>> ApiGenericDocumentGetSubGroupsByPathGet (string parentGroupPath = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = ApiGenericDocumentGetSubGroupsByPathGetWithHttpInfo(parentGroupPath);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<Group> >> ApiGenericDocumentGetSubGroupsByPathGetWithHttpInfo (string parentGroupPath = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (parentGroupPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentGroupPath", parentGroupPath));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Group> >>("/api/Generic/Document/GetSubGroupsByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetSubGroupsByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetSubGroupsByPathGetAsync (string parentGroupPath = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = await ApiGenericDocumentGetSubGroupsByPathGetAsyncWithHttpInfo(parentGroupPath);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroupsByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupPath"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetSubGroupsByPathGetAsyncWithHttpInfo (string parentGroupPath = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (parentGroupPath != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentGroupPath", parentGroupPath));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Group>>>("/api/Generic/Document/GetSubGroupsByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetSubGroupsByPathGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>List&lt;Group&gt;</returns>
        public Result<List<Group>> ApiGenericDocumentGetSubGroupsGet (string parentGroupId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = ApiGenericDocumentGetSubGroupsGetWithHttpInfo(parentGroupId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<Group> >> ApiGenericDocumentGetSubGroupsGetWithHttpInfo (string parentGroupId = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (parentGroupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentGroupId", parentGroupId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Group> >>("/api/Generic/Document/GetSubGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetSubGroupsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of List&lt;Group&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetSubGroupsGetAsync (string parentGroupId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = await ApiGenericDocumentGetSubGroupsGetAsyncWithHttpInfo(parentGroupId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetSubGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentGroupId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetSubGroupsGetAsyncWithHttpInfo (string parentGroupId = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (parentGroupId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentGroupId", parentGroupId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Group>>>("/api/Generic/Document/GetSubGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetSubGroupsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>List&lt;Document&gt;</returns>
        public Result<List<Document>> ApiGenericDocumentGetSubItemsByGroupGet (string parentId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Document>>> localVarResponse = ApiGenericDocumentGetSubItemsByGroupGetWithHttpInfo(parentId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>ApiResponse of List&lt;Document&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<Document> >> ApiGenericDocumentGetSubItemsByGroupGetWithHttpInfo (string parentId = default(string))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (parentId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentId", parentId));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Document> >>("/api/Generic/Document/GetSubItemsByGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetSubItemsByGroupGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>Task of List&lt;Document&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Document>>> ApiGenericDocumentGetSubItemsByGroupGetAsync (string parentId = default(string))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Document>>> localVarResponse = await ApiGenericDocumentGetSubItemsByGroupGetAsyncWithHttpInfo(parentId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetSubItemsByGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentId"> (optional)</param>
        /// <returns>Task of ApiResponse (List&lt;Document&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Document>>>> ApiGenericDocumentGetSubItemsByGroupGetAsyncWithHttpInfo (string parentId = default(string))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (parentId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.ParameterToMultiMap("", "parentId", parentId));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Document>>>("/api/Generic/Document/GetSubItemsByGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetSubItemsByGroupGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetTopGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;Group&gt;</returns>
        public Result<List<Group>> ApiGenericDocumentGetTopGroupsGet ()
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = ApiGenericDocumentGetTopGroupsGetWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/GetTopGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;Group&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< List<Group> >> ApiGenericDocumentGetTopGroupsGetWithHttpInfo ()
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Get<Result< List<Group> >>("/api/Generic/Document/GetTopGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetTopGroupsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/GetTopGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of List&lt;Group&gt;</returns>
        public async System.Threading.Tasks.Task<Result<List<Group>>> ApiGenericDocumentGetTopGroupsGetAsync ()
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>> localVarResponse = await ApiGenericDocumentGetTopGroupsGetAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/GetTopGroups 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (List&lt;Group&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<List<Group>>>> ApiGenericDocumentGetTopGroupsGetAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Result<List<Group>>>("/api/Generic/Document/GetTopGroups", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentGetTopGroupsGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentMoveGroupByPathPost (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentMoveGroupByPathPostWithHttpInfo(moveGroupByPathModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentMoveGroupByPathPostWithHttpInfo (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = moveGroupByPathModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Group >>("/api/Generic/Document/MoveGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentMoveGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentMoveGroupByPathPostAsync (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentMoveGroupByPathPostAsyncWithHttpInfo(moveGroupByPathModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/MoveGroupByPath 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupByPathModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentMoveGroupByPathPostAsyncWithHttpInfo (MoveGroupByPathModel moveGroupByPathModel = default(MoveGroupByPathModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = moveGroupByPathModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Group>>("/api/Generic/Document/MoveGroupByPath", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentMoveGroupByPathPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/MoveGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentMoveGroupPost (MoveGroupModel moveGroupModel = default(MoveGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentMoveGroupPostWithHttpInfo(moveGroupModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/MoveGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentMoveGroupPostWithHttpInfo (MoveGroupModel moveGroupModel = default(MoveGroupModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = moveGroupModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Group >>("/api/Generic/Document/MoveGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentMoveGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/MoveGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentMoveGroupPostAsync (MoveGroupModel moveGroupModel = default(MoveGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentMoveGroupPostAsyncWithHttpInfo(moveGroupModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/MoveGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="moveGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentMoveGroupPostAsyncWithHttpInfo (MoveGroupModel moveGroupModel = default(MoveGroupModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = moveGroupModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Group>>("/api/Generic/Document/MoveGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentMoveGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/RenameGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>Group</returns>
        public Result<Group> ApiGenericDocumentRenameGroupPost (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = ApiGenericDocumentRenameGroupPostWithHttpInfo(renamingGroupModel);
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/RenameGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>ApiResponse of Group</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Group >> ApiGenericDocumentRenameGroupPostWithHttpInfo (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel))
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = renamingGroupModel;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Group >>("/api/Generic/Document/RenameGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentRenameGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/RenameGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>Task of Group</returns>
        public async System.Threading.Tasks.Task<Result<Group>> ApiGenericDocumentRenameGroupPostAsync (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel))
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>> localVarResponse = await ApiGenericDocumentRenameGroupPostAsyncWithHttpInfo(renamingGroupModel);
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/RenameGroup 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="renamingGroupModel"> (optional)</param>
        /// <returns>Task of ApiResponse (Group)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Group>>> ApiGenericDocumentRenameGroupPostAsyncWithHttpInfo (RenamingGroupModel renamingGroupModel = default(RenamingGroupModel))
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.Data = renamingGroupModel;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Group>>("/api/Generic/Document/RenameGroup", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentRenameGroupPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Upload 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Dictionary&lt;string, Guid&gt;</returns>
        public Result<Dictionary<string, Guid>> ApiGenericDocumentUploadPost ()
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Dictionary<string, Guid>>> localVarResponse = ApiGenericDocumentUploadPostWithHttpInfo();
             return localVarResponse.Data;
        }

        /// <summary>
        /// /api/Generic/Document/Upload 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Dictionary&lt;string, Guid&gt;</returns>
        public DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result< Dictionary<string, Guid> >> ApiGenericDocumentUploadPostWithHttpInfo ()
        {
            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.DocumentManager.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);



            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Dictionary<string, Guid> >>("/api/Generic/Document/Upload", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentUploadPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// /api/Generic/Document/Upload 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of Dictionary&lt;string, Guid&gt;</returns>
        public async System.Threading.Tasks.Task<Result<Dictionary<string, Guid>>> ApiGenericDocumentUploadPostAsync ()
        {
             DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Dictionary<string, Guid>>> localVarResponse = await ApiGenericDocumentUploadPostAsyncWithHttpInfo();
             return localVarResponse.Data;

        }

        /// <summary>
        /// /api/Generic/Document/Upload 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.DocumentManager.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, Guid&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.DocumentManager.Client.ApiResponse<Result<Dictionary<string, Guid>>>> ApiGenericDocumentUploadPostAsyncWithHttpInfo ()
        {

            DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.DocumentManager.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Dictionary<string, Guid>>>("/api/Generic/Document/Upload", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiGenericDocumentUploadPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
