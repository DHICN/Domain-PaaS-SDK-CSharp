/* 
 * identity-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHICN.PAAS.SDK.Identity.Client.OpenAPIDateConverter;

namespace DHICN.PAAS.SDK.Identity.Model
{
    /// <summary>
    /// QueryRolesInput
    /// </summary>
    [DataContract]
    public partial class QueryRolesInput :  IEquatable<QueryRolesInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QueryRolesInput" /> class.
        /// </summary>
        /// <param name="keyWords">查询关键词 query key words.</param>
        public QueryRolesInput(string keyWords = default(string))
        {
            this.KeyWords = keyWords;
        }
        
        /// <summary>
        /// 查询关键词 query key words
        /// </summary>
        /// <value>查询关键词 query key words</value>
        [DataMember(Name="keyWords", EmitDefaultValue=true)]
        public string KeyWords { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class QueryRolesInput {\n");
            sb.Append("  KeyWords: ").Append(KeyWords).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as QueryRolesInput);
        }

        /// <summary>
        /// Returns true if QueryRolesInput instances are equal
        /// </summary>
        /// <param name="input">Instance of QueryRolesInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(QueryRolesInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KeyWords == input.KeyWords ||
                    (this.KeyWords != null &&
                    this.KeyWords.Equals(input.KeyWords))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KeyWords != null)
                    hashCode = hashCode * 59 + this.KeyWords.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
