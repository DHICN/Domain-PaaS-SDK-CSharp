/* 
 * scenario-compute-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using DHICN.PAAS.SDK.ScenarioCompute.Client;
using DHICN.PAAS.SDK.ScenarioCompute.Model;

namespace DHICN.PAAS.SDK.ScenarioCompute.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioProcessApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        Result<Dictionary<string, List<Object>>> ApiAppScenarioProcessProcess2DBoundaryDataPost (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string));

        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>ApiResponse of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        ApiResponse<Result<Dictionary<string, List<Object>>>> ApiAppScenarioProcessProcess2DBoundaryDataPostWithHttpInfo (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string));
        /// <summary>
        /// 一维河道模型 处理边界数据补齐
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        Result<Dictionary<string, List<Object>>> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPost (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string));

        /// <summary>
        /// 一维河道模型 处理边界数据补齐
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>ApiResponse of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        ApiResponse<Result<Dictionary<string, List<Object>>>> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostWithHttpInfo (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string));
        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>Object</returns>
        Result<Object> ApiAppScenarioProcessSetScenarioInfoTemplateIdPost (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo));

        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Result<Object>> ApiAppScenarioProcessSetScenarioInfoTemplateIdPostWithHttpInfo (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioProcessApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        System.Threading.Tasks.Task<Result<Dictionary<string, List<Object>>>> ApiAppScenarioProcessProcess2DBoundaryDataPostAsync (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string));

        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, List&lt;Object&gt;&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Dictionary<string, List<Object>>>>> ApiAppScenarioProcessProcess2DBoundaryDataPostAsyncWithHttpInfo (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string));
        /// <summary>
        /// 一维河道模型 处理边界数据补齐
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        System.Threading.Tasks.Task<Result<Dictionary<string, List<Object>>>> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostAsync (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string));

        /// <summary>
        /// 一维河道模型 处理边界数据补齐
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, List&lt;Object&gt;&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Dictionary<string, List<Object>>>>> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostAsyncWithHttpInfo (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string));
        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Result<Object>> ApiAppScenarioProcessSetScenarioInfoTemplateIdPostAsync (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo));

        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Result<Object>>> ApiAppScenarioProcessSetScenarioInfoTemplateIdPostAsyncWithHttpInfo (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IScenarioProcessApi : IScenarioProcessApiSync, IScenarioProcessApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ScenarioProcessApi : IScenarioProcessApi
    {
        private DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioProcessApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ScenarioProcessApi() : this((string) null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioProcessApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ScenarioProcessApi(String basePath)
        {
            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                new DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration { BasePath = basePath }
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioProcessApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ScenarioProcessApi(DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.MergeConfigurations(
                DHICN.PAAS.SDK.ScenarioCompute.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioProcessApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ScenarioProcessApi(DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient client,DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient asyncClient, DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration configuration)
        {
            if(client == null) throw new ArgumentNullException("client");
            if(asyncClient == null) throw new ArgumentNullException("asyncClient");
            if(configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = DHICN.PAAS.SDK.ScenarioCompute.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.IReadableConfiguration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        public Result<Dictionary<string, List<Object>>> ApiAppScenarioProcessProcess2DBoundaryDataPost (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Dictionary<string, List<Object>>>> localVarResponse = ApiAppScenarioProcessProcess2DBoundaryDataPostWithHttpInfo(parentScenarioId, scheduleScenarioId, start, end);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>ApiResponse of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Dictionary<string, List<Object>> >> ApiAppScenarioProcessProcess2DBoundaryDataPostWithHttpInfo (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string))
        {
            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (parentScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "parentScenarioId", parentScenarioId));
            }
            if (scheduleScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "scheduleScenarioId", scheduleScenarioId));
            }
            if (start != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "start", start));
            }
            if (end != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "end", end));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Dictionary<string, List<Object>> >>("/api/app/scenario-process/process2DBoundary-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppScenarioProcessProcess2DBoundaryDataPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        public async System.Threading.Tasks.Task<Result<Dictionary<string, List<Object>>>> ApiAppScenarioProcessProcess2DBoundaryDataPostAsync (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Dictionary<string, List<Object>>>> localVarResponse = await ApiAppScenarioProcessProcess2DBoundaryDataPostAsyncWithHttpInfo(parentScenarioId, scheduleScenarioId, start, end);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 二维行蓄洪区模型 处理边界数据 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"> (optional)</param>
        /// <param name="scheduleScenarioId"> (optional)</param>
        /// <param name="start"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, List&lt;Object&gt;&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Dictionary<string, List<Object>>>>> ApiAppScenarioProcessProcess2DBoundaryDataPostAsyncWithHttpInfo (string parentScenarioId = default(string), string scheduleScenarioId = default(string), string start = default(string), string end = default(string))
        {

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            if (parentScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "parentScenarioId", parentScenarioId));
            }
            if (scheduleScenarioId != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "scheduleScenarioId", scheduleScenarioId));
            }
            if (start != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "start", start));
            }
            if (end != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "end", end));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Dictionary<string, List<Object>>>>("/api/app/scenario-process/process2DBoundary-data", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppScenarioProcessProcess2DBoundaryDataPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 一维河道模型 处理边界数据补齐 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        public Result<Dictionary<string, List<Object>>> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPost (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Dictionary<string, List<Object>>>> localVarResponse = ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostWithHttpInfo(parentScenarioId, start, current, end);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 一维河道模型 处理边界数据补齐 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>ApiResponse of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Dictionary<string, List<Object>> >> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostWithHttpInfo (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string))
        {
            // verify the required parameter 'parentScenarioId' is set
            if (parentScenarioId == null)
                throw new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException(400, "Missing required parameter 'parentScenarioId' when calling ScenarioProcessApi->ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPost");

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("parentScenarioId", DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToString(parentScenarioId)); // path parameter
            if (start != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "start", start));
            }
            if (current != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "current", current));
            }
            if (end != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "end", end));
            }


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Dictionary<string, List<Object>> >>("/api/app/scenario-process/process-boundary-data/{parentScenarioId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 一维河道模型 处理边界数据补齐 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of Dictionary&lt;string, List&lt;Object&gt;&gt;</returns>
        public async System.Threading.Tasks.Task<Result<Dictionary<string, List<Object>>>> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostAsync (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Dictionary<string, List<Object>>>> localVarResponse = await ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostAsyncWithHttpInfo(parentScenarioId, start, current, end);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 一维河道模型 处理边界数据补齐 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="parentScenarioId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <returns>Task of ApiResponse (Dictionary&lt;string, List&lt;Object&gt;&gt;)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Dictionary<string, List<Object>>>>> ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPostAsyncWithHttpInfo (string parentScenarioId, string start = default(string), string current = default(string), string end = default(string))
        {
            // verify the required parameter 'parentScenarioId' is set
            if (parentScenarioId == null)
                throw new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException(400, "Missing required parameter 'parentScenarioId' when calling ScenarioProcessApi->ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPost");


            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("parentScenarioId", DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToString(parentScenarioId)); // path parameter
            if (start != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "start", start));
            }
            if (current != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "current", current));
            }
            if (end != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "end", end));
            }


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Dictionary<string, List<Object>>>>("/api/app/scenario-process/process-boundary-data/{parentScenarioId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppScenarioProcessProcessBoundaryDataParentScenarioIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>Object</returns>
        public Result<Object> ApiAppScenarioProcessSetScenarioInfoTemplateIdPost (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = ApiAppScenarioProcessSetScenarioInfoTemplateIdPostWithHttpInfo(templateId, start, current, end, businessType, dhiDssScenarioComputeScenarioDtosScenarioInfo);
             return localVarResponse.Data;
        }

        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>ApiResponse of Object</returns>
        public DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result< Object >> ApiAppScenarioProcessSetScenarioInfoTemplateIdPostWithHttpInfo (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo))
        {
            // verify the required parameter 'templateId' is set
            if (templateId == null)
                throw new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException(400, "Missing required parameter 'templateId' when calling ScenarioProcessApi->ApiAppScenarioProcessSetScenarioInfoTemplateIdPost");

            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("templateId", DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToString(templateId)); // path parameter
            if (start != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "start", start));
            }
            if (current != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "current", current));
            }
            if (end != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "end", end));
            }
            if (businessType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "businessType", businessType));
            }
            localVarRequestOptions.Data = dhiDssScenarioComputeScenarioDtosScenarioInfo;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Result< Object >>("/api/app/scenario-process/set-scenario-info/{templateId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppScenarioProcessSetScenarioInfoTemplateIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Result<Object>> ApiAppScenarioProcessSetScenarioInfoTemplateIdPostAsync (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo))
        {
             DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>> localVarResponse = await ApiAppScenarioProcessSetScenarioInfoTemplateIdPostAsyncWithHttpInfo(templateId, start, current, end, businessType, dhiDssScenarioComputeScenarioDtosScenarioInfo);
             return localVarResponse.Data;

        }

        /// <summary>
        /// 方案创建完成之后，用于设置默认初始场、边界数据、实时校正数据，并入库保存 
        /// </summary>
        /// <exception cref="DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="templateId"></param>
        /// <param name="start"> (optional)</param>
        /// <param name="current"> (optional)</param>
        /// <param name="end"> (optional)</param>
        /// <param name="businessType"> (optional)</param>
        /// <param name="dhiDssScenarioComputeScenarioDtosScenarioInfo"> (optional)</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<DHICN.PAAS.SDK.ScenarioCompute.Client.ApiResponse<Result<Object>>> ApiAppScenarioProcessSetScenarioInfoTemplateIdPostAsyncWithHttpInfo (string templateId, string start = default(string), string current = default(string), string end = default(string), int? businessType = default(int?), DhiDssScenarioComputeScenarioDtosScenarioInfo dhiDssScenarioComputeScenarioDtosScenarioInfo = default(DhiDssScenarioComputeScenarioDtosScenarioInfo))
        {
            // verify the required parameter 'templateId' is set
            if (templateId == null)
                throw new DHICN.PAAS.SDK.ScenarioCompute.Client.ApiException(400, "Missing required parameter 'templateId' when calling ScenarioProcessApi->ApiAppScenarioProcessSetScenarioInfoTemplateIdPost");


            DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions localVarRequestOptions = new DHICN.PAAS.SDK.ScenarioCompute.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };
            
            foreach (var _contentType in _contentTypes)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", _contentType);
            
            foreach (var _accept in _accepts)
                localVarRequestOptions.HeaderParameters.Add("Accept", _accept);
            
            localVarRequestOptions.PathParameters.Add("templateId", DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToString(templateId)); // path parameter
            if (start != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "start", start));
            }
            if (current != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "current", current));
            }
            if (end != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "end", end));
            }
            if (businessType != null)
            {
                localVarRequestOptions.QueryParameters.Add(DHICN.PAAS.SDK.ScenarioCompute.Client.ClientUtils.ParameterToMultiMap("", "businessType", businessType));
            }
            localVarRequestOptions.Data = dhiDssScenarioComputeScenarioDtosScenarioInfo;


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Result<Object>>("/api/app/scenario-process/set-scenario-info/{templateId}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ApiAppScenarioProcessSetScenarioInfoTemplateIdPost", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
