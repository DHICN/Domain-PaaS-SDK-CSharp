/* 
 * model-driver-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = DHI.DSS.ModelDriverSDK.Client.OpenAPIDateConverter;

namespace DHI.DSS.ModelDriverSDK.Model
{
    /// <summary>
    /// ScenarioModelMessageInput
    /// </summary>
    [DataContract]
    public partial class ScenarioModelMessageInput :  IEquatable<ScenarioModelMessageInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioModelMessageInput" /> class.
        /// </summary>
        /// <param name="projectName">项目名称 project name.</param>
        /// <param name="tenantId">租户ID.</param>
        /// <param name="scenarioId">方案ID scenario id.</param>
        /// <param name="modelType">模型类型，不同的模型类型对应不同的计算服务 model type, different model type corresponding to different compute service  &lt;inheritdoc cref&#x3D;\&quot;T:DHI.DSS.WF.MQ.Interface.ModelSimType\&quot; /&gt;.</param>
        /// <param name="priority">优先级：数值越大，优先级越高 priority: greater value have higher priority.</param>
        /// <param name="modelInfo">模型信息，json格式 model info in json format: {\&quot;scenarioId\&quot;:\&quot;\&quot;,\&quot;tenantId\&quot;:\&quot;\&quot;,\&quot;templateScenarioId\&quot;:\&quot;\&quot;}.</param>
        public ScenarioModelMessageInput(string projectName = default(string), Guid tenantId = default(Guid), Guid scenarioId = default(Guid), string modelType = default(string), int priority = default(int), string modelInfo = default(string))
        {
            this.ProjectName = projectName;
            this.TenantId = tenantId;
            this.ScenarioId = scenarioId;
            this.ModelType = modelType;
            this.Priority = priority;
            this.ModelInfo = modelInfo;
        }
        
        /// <summary>
        /// 项目名称 project name
        /// </summary>
        /// <value>项目名称 project name</value>
        [DataMember(Name="projectName", EmitDefaultValue=true)]
        public string ProjectName { get; set; }

        /// <summary>
        /// 租户ID
        /// </summary>
        /// <value>租户ID</value>
        [DataMember(Name="tenantId", EmitDefaultValue=false)]
        public Guid TenantId { get; set; }

        /// <summary>
        /// 方案ID scenario id
        /// </summary>
        /// <value>方案ID scenario id</value>
        [DataMember(Name="scenarioId", EmitDefaultValue=false)]
        public Guid ScenarioId { get; set; }

        /// <summary>
        /// 模型类型，不同的模型类型对应不同的计算服务 model type, different model type corresponding to different compute service  &lt;inheritdoc cref&#x3D;\&quot;T:DHI.DSS.WF.MQ.Interface.ModelSimType\&quot; /&gt;
        /// </summary>
        /// <value>模型类型，不同的模型类型对应不同的计算服务 model type, different model type corresponding to different compute service  &lt;inheritdoc cref&#x3D;\&quot;T:DHI.DSS.WF.MQ.Interface.ModelSimType\&quot; /&gt;</value>
        [DataMember(Name="modelType", EmitDefaultValue=true)]
        public string ModelType { get; set; }

        /// <summary>
        /// 优先级：数值越大，优先级越高 priority: greater value have higher priority
        /// </summary>
        /// <value>优先级：数值越大，优先级越高 priority: greater value have higher priority</value>
        [DataMember(Name="priority", EmitDefaultValue=false)]
        public int Priority { get; set; }

        /// <summary>
        /// 模型信息，json格式 model info in json format: {\&quot;scenarioId\&quot;:\&quot;\&quot;,\&quot;tenantId\&quot;:\&quot;\&quot;,\&quot;templateScenarioId\&quot;:\&quot;\&quot;}
        /// </summary>
        /// <value>模型信息，json格式 model info in json format: {\&quot;scenarioId\&quot;:\&quot;\&quot;,\&quot;tenantId\&quot;:\&quot;\&quot;,\&quot;templateScenarioId\&quot;:\&quot;\&quot;}</value>
        [DataMember(Name="modelInfo", EmitDefaultValue=true)]
        public string ModelInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ScenarioModelMessageInput {\n");
            sb.Append("  ProjectName: ").Append(ProjectName).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  ScenarioId: ").Append(ScenarioId).Append("\n");
            sb.Append("  ModelType: ").Append(ModelType).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  ModelInfo: ").Append(ModelInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ScenarioModelMessageInput);
        }

        /// <summary>
        /// Returns true if ScenarioModelMessageInput instances are equal
        /// </summary>
        /// <param name="input">Instance of ScenarioModelMessageInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ScenarioModelMessageInput input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ProjectName == input.ProjectName ||
                    (this.ProjectName != null &&
                    this.ProjectName.Equals(input.ProjectName))
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                ) && 
                (
                    this.ScenarioId == input.ScenarioId ||
                    (this.ScenarioId != null &&
                    this.ScenarioId.Equals(input.ScenarioId))
                ) && 
                (
                    this.ModelType == input.ModelType ||
                    (this.ModelType != null &&
                    this.ModelType.Equals(input.ModelType))
                ) && 
                (
                    this.Priority == input.Priority ||
                    this.Priority.Equals(input.Priority)
                ) && 
                (
                    this.ModelInfo == input.ModelInfo ||
                    (this.ModelInfo != null &&
                    this.ModelInfo.Equals(input.ModelInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ProjectName != null)
                    hashCode = hashCode * 59 + this.ProjectName.GetHashCode();
                if (this.TenantId != null)
                    hashCode = hashCode * 59 + this.TenantId.GetHashCode();
                if (this.ScenarioId != null)
                    hashCode = hashCode * 59 + this.ScenarioId.GetHashCode();
                if (this.ModelType != null)
                    hashCode = hashCode * 59 + this.ModelType.GetHashCode();
                hashCode = hashCode * 59 + this.Priority.GetHashCode();
                if (this.ModelInfo != null)
                    hashCode = hashCode * 59 + this.ModelInfo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
